/home/jesse/.local/lib/python3.5/site-packages/gensim/matutils.py:737: FutureWarning: Conversion of the second argument of issubdtype from `int` to `np.signedinteger` is deprecated. In future, it will be treated as `np.int64 == np.dtype(int).type`.
  if np.issubdtype(vec.dtype, np.int):
/home/jesse/.local/lib/python3.5/site-packages/gensim/matutils.py:737: FutureWarning: Conversion of the second argument of issubdtype from `int` to `np.signedinteger` is deprecated. In future, it will be treated as `np.int64 == np.dtype(int).type`.
  if np.issubdtype(vec.dtype, np.int):
/home/jesse/.local/lib/python3.5/site-packages/gensim/matutils.py:737: FutureWarning: Conversion of the second argument of issubdtype from `int` to `np.signedinteger` is deprecated. In future, it will be treated as `np.int64 == np.dtype(int).type`.
  if np.issubdtype(vec.dtype, np.int):
main: loading grounder from file...
main: ... done
main: instantiating IO...
main: ... done
main: instantiating Agent...
main: ... done
main: running command dialog...
say_to_user_with_referents: What should I do? {}
get_from_user requested feedback
get_from_user (raw): 'Give this block to Walter Ward'
get_from_user (processed): 'give this block to walter ward'
say_to_user: I haven't heard the word 'ward' before. Does it refer to properties of things, like a color, shape, or weight?
get_from_user requested feedback
get_from_user (raw): 'Ward is a person'
get_from_user (processed): 'ward is a person'
say_to_user: Sorry, I am confused and just need a 'yes' or 'no' response for now.
say_to_user: I haven't heard the word 'ward' before. Does it refer to properties of things, like a color, shape, or weight?
get_from_user requested feedback
get_from_user (raw): 'no'
get_from_user (processed): 'no'
say_to_user: I'm still learning the meanings of some words. I'm going to ask you a few questions about these nearby objects before we continue.
say_to_user_with_referents: Among these nearby objects, could you show me one you would use the word 'block' when describing, or shake your head if there are none? {}
get_oidx_from_user requested feedback
get_oidx_from_user: None
say_to_user_with_referents: Among these nearby objects, could you show me one you would use the word 'wipes' when describing, or shake your head if there are none? {}
get_oidx_from_user requested feedback
get_oidx_from_user: 19
say_to_user_with_referents: Among these nearby objects, could you show me one you would use the word 'beans' when describing, or shake your head if there are none? {}
get_oidx_from_user requested feedback
get_oidx_from_user: None
say_to_user: Thanks. Now, back to business.
say_to_user_with_referents: You want me to deliver something to <r>this person</r>? {'action': 'bring', 'recipient': 'w'}
get_from_user requested feedback
get_from_user (raw): 'yes'
get_from_user (processed): 'yes'
say_to_user_with_referents: What should I deliver to <r>this person</r>? {'action': 'bring', 'recipient': 'w'}
get_from_user requested feedback
get_from_user (raw): 'a block'
get_from_user (processed): 'a block'
say_to_user: Sorry, I didn't understand that.
say_to_user_with_referents: What should I deliver to <r>this person</r>? {'action': 'bring', 'recipient': 'w'}
get_from_user requested feedback
get_from_user (raw): 'a square long object'
get_from_user (processed): 'a square long object'
say_to_user: Sorry, I didn't understand that.
say_to_user_with_referents: What should I deliver to <r>this person</r>? {'action': 'bring', 'recipient': 'w'}
get_from_user_enum requested feedback
get_from_user_enum: 3
perform_action: {'action': 'bring', 'goal': None, 'recipient': 'w', 'source': None, 'patient': 'oidx_28'}
main: ... done; got action {'action': 'bring', 'goal': None, 'recipient': 'w', 'source': None, 'patient': 'oidx_28'}
main: writing new information from dialog(s) to file...
main: ... done; wrote data d = [[{'action': 'bring', 'goal': None, 'recipient': 'w', 'source': None, 'patient': 'oidx_28'}], [{'goal': [], 'all': ['give this block to walter ward'], 'source': [], 'patient': ['a block', 'a square long object'], 'action': [], 'recipient': []}], [('block', 21, 0), ('block', 24, 0), ('block', 19, 0), ('block', 23, 0), ('block', 16, 0), ('block', 0, 0), ('block', 4, 0), ('block', 9, 0), ('wipes', 19, 1), ('bean', 21, 0), ('bean', 24, 0), ('bean', 19, 0), ('bean', 23, 0), ('bean', 16, 0), ('bean', 0, 0), ('bean', 4, 0), ('bean', 9, 0)], [], [0], [0]]
