/home/jesse/.local/lib/python3.5/site-packages/gensim/matutils.py:737: FutureWarning: Conversion of the second argument of issubdtype from `int` to `np.signedinteger` is deprecated. In future, it will be treated as `np.int64 == np.dtype(int).type`.
  if np.issubdtype(vec.dtype, np.int):
/home/jesse/.local/lib/python3.5/site-packages/gensim/matutils.py:737: FutureWarning: Conversion of the second argument of issubdtype from `int` to `np.signedinteger` is deprecated. In future, it will be treated as `np.int64 == np.dtype(int).type`.
  if np.issubdtype(vec.dtype, np.int):
/home/jesse/.local/lib/python3.5/site-packages/gensim/matutils.py:737: FutureWarning: Conversion of the second argument of issubdtype from `int` to `np.signedinteger` is deprecated. In future, it will be treated as `np.int64 == np.dtype(int).type`.
  if np.issubdtype(vec.dtype, np.int):
main: loading grounder from file...
main: ... done
main: instantiating IO...
main: ... done
main: instantiating Agent...
main: ... done
main: running command dialog...
say_to_user_with_referents: What should I do? {}
get_from_user requested feedback
get_from_user (raw): 'Dr. Heidi Hughes'
get_from_user (processed): 'dr heidi hughes'
say_to_user: I'm still learning the meanings of some words. I'm going to ask you a few questions about these nearby objects before we continue.
say_to_user_with_referents: Among these nearby objects, could you show me one you would use the word 'peaches' when describing, or shake your head if there are none? {}
get_oidx_from_user requested feedback
get_oidx_from_user: None
say_to_user_with_referents: Among these nearby objects, could you show me one you would use the word 'spices' when describing, or shake your head if there are none? {}
get_oidx_from_user requested feedback
get_oidx_from_user: None
say_to_user_with_referents: Among these nearby objects, could you show me one you would use the word 'column' when describing, or shake your head if there are none? {}
get_oidx_from_user requested feedback
get_oidx_from_user: 24
say_to_user: Thanks. Now, back to business.
say_to_user_with_referents: You want me to move an item from somewhere to somewhere (not give it to someone)? {'action': 'move'}
get_from_user requested feedback
get_from_user (raw): 'yes'
get_from_user (processed): 'yes'
say_to_user_with_referents: What should I move? {'action': 'move'}
get_from_user requested feedback
get_from_user (raw): 'item'
get_from_user (processed): 'item'
say_to_user_with_referents: You want me to move <p>this</p> from somewhere to somewhere (not give it to someone)? {'patient': 'oidx_11', 'action': 'move'}
get_from_user requested feedback
get_from_user (raw): 'yes'
get_from_user (processed): 'yes'
say_to_user_with_referents: Where should I move <p>this</p> from on its way somewhere else? {'patient': 'oidx_11', 'action': 'move'}
get_from_user requested feedback
get_from_user (raw): 'somewhere else'
get_from_user (processed): 'somewhere else'
say_to_user: I haven't heard the word 'else' before. Does it refer to properties of things, like a color, shape, or weight?
get_from_user requested feedback
get_from_user (raw): 'color'
get_from_user (processed): 'color'
say_to_user: Sorry, I am confused and just need a 'yes' or 'no' response for now.
say_to_user: I haven't heard the word 'else' before. Does it refer to properties of things, like a color, shape, or weight?
get_from_user requested feedback
get_from_user (raw): 'yes'
get_from_user (processed): 'yes'
say_to_user: Does 'else' mean the same thing as 'can'?
get_from_user requested feedback
get_from_user (raw): 'yes'
get_from_user (processed): 'yes'
say_to_user: Sorry, I didn't understand that.
say_to_user_with_referents: Where should I move <p>this</p> from on its way somewhere else? {'patient': 'oidx_11', 'action': 'move'}
get_from_user requested feedback
get_from_user (raw): 'table'
get_from_user (processed): 'table'
say_to_user: Sorry, I didn't understand that.
say_to_user_with_referents: Where should I move <p>this</p> from on its way somewhere else? {'patient': 'oidx_11', 'action': 'move'}
get_from_user_enum requested feedback
