/home/jesse/.local/lib/python3.5/site-packages/gensim/matutils.py:737: FutureWarning: Conversion of the second argument of issubdtype from `int` to `np.signedinteger` is deprecated. In future, it will be treated as `np.int64 == np.dtype(int).type`.
  if np.issubdtype(vec.dtype, np.int):
/home/jesse/.local/lib/python3.5/site-packages/gensim/matutils.py:737: FutureWarning: Conversion of the second argument of issubdtype from `int` to `np.signedinteger` is deprecated. In future, it will be treated as `np.int64 == np.dtype(int).type`.
  if np.issubdtype(vec.dtype, np.int):
main: loading grounder from file...
main: ... done
main: instantiating IO...
main: ... done
main: instantiating Agent...
main: ... done
main: running command dialog...
say_to_user_with_referents: What should I do? {}
get_from_user requested feedback
get_from_user (raw): 'Take the aluminum can to Robert “Bob” Brown'
get_from_user (processed): 'take the aluminum can to robert “bob” brown'
say_to_user: I haven't heard the word 'aluminum' before. Does it refer to properties of things, like a color, shape, or weight?
get_from_user requested feedback
get_from_user (raw): 'No'
get_from_user (processed): 'no'
say_to_user: I haven't heard the word 'brown' before. Does it refer to properties of things, like a color, shape, or weight?
get_from_user requested feedback
get_from_user (raw): 'no'
get_from_user (processed): 'no'
say_to_user_with_referents: You want me to move an item from somewhere to somewhere (not give it to someone)? {'action': 'move'}
get_from_user requested feedback
get_from_user (raw): 'No'
get_from_user (processed): 'no'
say_to_user_with_referents: You want me to deliver something for someone? {'action': 'bring'}
get_from_user requested feedback
get_from_user (raw): 'Yes'
get_from_user (processed): 'yes'
say_to_user_with_referents: Who should receive what I deliver? {'action': 'bring'}
get_from_user requested feedback
get_from_user (raw): 'Robert “Bob” Brown'
get_from_user (processed): 'robert “bob” brown'
say_to_user: Sorry, I didn't understand that.
say_to_user_with_referents: Who should receive what I deliver? {'action': 'bring'}
get_from_user requested feedback
get_from_user (raw): 'Robert Brown'
get_from_user (processed): 'robert brown'
say_to_user: Sorry, I didn't understand that.
say_to_user_with_referents: Who should receive what I deliver? {'action': 'bring'}
get_from_user_enum requested feedback
get_from_user_enum: 1
say_to_user_with_referents: What should I deliver to <r>this person</r>? {'action': 'bring', 'recipient': 'b'}
get_from_user requested feedback
get_from_user (raw): 'The aluminum cab'
get_from_user (processed): 'the aluminum cab'
say_to_user: I haven't heard the word 'cab' before. Does it refer to properties of things, like a color, shape, or weight?
get_from_user requested feedback
get_from_user (raw): 'can'
get_from_user (processed): 'can'
say_to_user: Sorry, I am confused and just need a 'yes' or 'no' response for now.
say_to_user: I haven't heard the word 'cab' before. Does it refer to properties of things, like a color, shape, or weight?
get_from_user requested feedback
get_from_user (raw): 'no'
get_from_user (processed): 'no'
say_to_user: I'm still learning the meanings of some words. I'm going to ask you a few questions about these nearby objects before we continue.
say_to_user_with_referents: Among these nearby objects, could you show me one you would use the word 'peaches' when describing, or shake your head if there are none? {}
get_oidx_from_user requested feedback
get_oidx_from_user: None
say_to_user_with_referents: Among these nearby objects, could you show me one you would use the word 'metallic' when describing, or shake your head if there are none? {}
get_oidx_from_user requested feedback
get_oidx_from_user: 0
say_to_user_with_referents: Among these nearby objects, could you show me one you would use the word 'column' when describing, or shake your head if there are none? {}
get_oidx_from_user requested feedback
get_oidx_from_user: None
say_to_user: Thanks. Now, back to business.
say_to_user: Sorry, I didn't understand that.
say_to_user_with_referents: What should I deliver to <r>this person</r>? {'action': 'bring', 'recipient': 'b'}
get_from_user requested feedback
get_from_user (raw): 'The aluminum can'
get_from_user (processed): 'the aluminum can'
say_to_user: Sorry, I didn't understand that.
say_to_user_with_referents: What should I deliver to <r>this person</r>? {'action': 'bring', 'recipient': 'b'}
get_from_user_enum requested feedback
get_from_user_enum: 0
perform_action: {'action': 'bring', 'goal': None, 'recipient': 'b', 'source': None, 'patient': 'oidx_26'}
main: ... done; got action {'action': 'bring', 'goal': None, 'recipient': 'b', 'source': None, 'patient': 'oidx_26'}
main: writing new information from dialog(s) to file...
main: ... done; wrote data d = [[{'action': 'bring', 'goal': None, 'recipient': 'b', 'source': None, 'patient': 'oidx_26'}], [{'all': ['take the aluminum can to robert “bob” brown'], 'recipient': ['robert “bob” brown', 'robert brown'], 'action': [], 'goal': [], 'patient': ['the aluminum cab', 'the aluminum can'], 'source': []}], [('peach', 21, 0), ('peach', 24, 0), ('peach', 19, 0), ('peach', 23, 0), ('peach', 16, 0), ('peach', 0, 0), ('peach', 4, 0), ('peach', 9, 0), ('metallic', 0, 1), ('column', 21, 0), ('column', 24, 0), ('column', 19, 0), ('column', 23, 0), ('column', 16, 0), ('column', 0, 0), ('column', 4, 0), ('column', 9, 0)], [], [1], [0]]
