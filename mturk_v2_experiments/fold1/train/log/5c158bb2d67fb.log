/home/jesse/.local/lib/python3.5/site-packages/gensim/matutils.py:737: FutureWarning: Conversion of the second argument of issubdtype from `int` to `np.signedinteger` is deprecated. In future, it will be treated as `np.int64 == np.dtype(int).type`.
  if np.issubdtype(vec.dtype, np.int):
/home/jesse/.local/lib/python3.5/site-packages/gensim/matutils.py:737: FutureWarning: Conversion of the second argument of issubdtype from `int` to `np.signedinteger` is deprecated. In future, it will be treated as `np.int64 == np.dtype(int).type`.
  if np.issubdtype(vec.dtype, np.int):
main: loading grounder from file...
main: ... done
main: instantiating IO...
main: ... done
main: instantiating Agent...
main: ... done
main: running command dialog...
say_to_user_with_referents: What should I do? {}
get_from_user requested feedback
get_from_user (raw): 'give object to person'
get_from_user (processed): 'give object to person'
say_to_user: I haven't heard the word 'person' before. Does it refer to properties of things, like a color, shape, or weight?
get_from_user requested feedback
get_from_user (raw): 'no'
get_from_user (processed): 'no'
say_to_user: I'm still learning the meanings of some words. I'm going to ask you a few questions about these nearby objects before we continue.
say_to_user_with_referents: Among these nearby objects, could you show me one you would use the word 'object' when describing, or shake your head if there are none? {}
get_oidx_from_user requested feedback
get_oidx_from_user: None
say_to_user_with_referents: Among these nearby objects, could you show me one you would use the word 'clear' when describing, or shake your head if there are none? {}
get_oidx_from_user requested feedback
get_oidx_from_user: None
say_to_user_with_referents: Would you use the word 'cylinder' when describing <p>this</p> object? {'patient': 'oidx_1'}
get_from_user requested feedback
get_from_user (raw): 'yes'
get_from_user (processed): 'yes'
say_to_user: Thanks. Now, back to business.
say_to_user_with_referents: You want me to deliver something for someone? {'action': 'bring'}
get_from_user requested feedback
get_from_user (raw): 'yes'
get_from_user (processed): 'yes'
say_to_user_with_referents: Who should receive what I deliver? {'action': 'bring'}
get_from_user requested feedback
get_from_user (raw): 'Mallory "Mal" Maroon'
get_from_user (processed): 'mallory mal maroon'
say_to_user: I haven't heard the word 'maroon' before. Does it refer to properties of things, like a color, shape, or weight?
get_from_user requested feedback
get_from_user (raw): 'no'
get_from_user (processed): 'no'
say_to_user_with_referents: What should I deliver to <r>this person</r>? {'recipient': 'm', 'action': 'bring'}
get_from_user requested feedback
get_from_user (raw): 'prinkles'
get_from_user (processed): 'prinkles'
say_to_user_with_referents: You want me to deliver something to <r>this person</r>? {'recipient': 'm', 'action': 'bring'}
get_from_user requested feedback
get_from_user (raw): 'yes'
get_from_user (processed): 'yes'
say_to_user_with_referents: What should I deliver to <r>this person</r>? {'recipient': 'm', 'action': 'bring'}
get_from_user requested feedback
get_from_user (raw): 'object'
get_from_user (processed): 'object'
say_to_user: Sorry, I didn't understand that.
say_to_user_with_referents: What should I deliver to <r>this person</r>? {'recipient': 'm', 'action': 'bring'}
get_from_user_enum requested feedback
get_from_user_enum: 5
perform_action: {'recipient': 'm', 'source': None, 'action': 'bring', 'goal': None, 'patient': 'oidx_13'}
main: ... done; got action {'recipient': 'm', 'source': None, 'action': 'bring', 'goal': None, 'patient': 'oidx_13'}
main: writing new information from dialog(s) to file...
main: ... done; wrote data d = [[{'recipient': 'm', 'source': None, 'action': 'bring', 'goal': None, 'patient': 'oidx_13'}], [{'recipient': ['mallory mal maroon'], 'goal': [], 'patient': ['prinkles', 'object'], 'all': ['give object to person'], 'source': [], 'action': []}], [('yellow', 5, 0), ('yellow', 14, 0), ('yellow', 8, 0), ('yellow', 15, 0), ('yellow', 1, 0), ('yellow', 30, 0), ('yellow', 29, 0), ('yellow', 31, 0), ('clear', 5, 0), ('clear', 14, 0), ('clear', 8, 0), ('clear', 15, 0), ('clear', 1, 0), ('clear', 30, 0), ('clear', 29, 0), ('clear', 31, 0), ('cylinder', 1, 1)], [], [0], [0]]
