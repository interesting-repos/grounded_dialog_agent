/home/jesse/.local/lib/python3.5/site-packages/gensim/matutils.py:737: FutureWarning: Conversion of the second argument of issubdtype from `int` to `np.signedinteger` is deprecated. In future, it will be treated as `np.int64 == np.dtype(int).type`.
  if np.issubdtype(vec.dtype, np.int):
main: loading grounder from file...
main: ... done
main: instantiating IO...
main: ... done
main: instantiating Agent...
main: ... done
main: running command dialog...
say_to_user_with_referents: What should I do? {}
get_from_user requested feedback
get_from_user (raw): 'Pass the soda can to Walter Ward'
get_from_user (processed): 'pass the soda can to walter ward'
say_to_user: I haven't heard the word 'soda' before. Does it refer to properties of things, like a color, shape, or weight?
get_from_user requested feedback
get_from_user (raw): 'Pass the orange can to the right'
get_from_user (processed): 'pass the orange can to the right'
say_to_user: Sorry, I am confused and just need a 'yes' or 'no' response for now.
say_to_user: I haven't heard the word 'soda' before. Does it refer to properties of things, like a color, shape, or weight?
get_from_user requested feedback
get_from_user (raw): 'no'
get_from_user (processed): 'no'
say_to_user: I haven't heard the word 'ward' before. Does it refer to properties of things, like a color, shape, or weight?
get_from_user requested feedback
get_from_user (raw): 'No'
get_from_user (processed): 'no'
say_to_user_with_referents: You want me to deliver something for someone? {'action': 'bring'}
get_from_user requested feedback
get_from_user (raw): 'yes'
get_from_user (processed): 'yes'
say_to_user_with_referents: Who should receive what I deliver? {'action': 'bring'}
get_from_user requested feedback
get_from_user (raw): 'Walter the supervisor'
get_from_user (processed): 'walter the supervisor'
say_to_user_with_referents: What should I deliver to <r>this person</r>? {'recipient': 'w', 'action': 'bring'}
get_from_user requested feedback
get_from_user (raw): 'the orange can'
get_from_user (processed): 'the orange can'
say_to_user: I'm still learning the meanings of some words. I'm going to ask you a few questions about these nearby objects before we continue.
say_to_user_with_referents: Would you use the word 'can' when describing <p>this</p> object? {'patient': 'oidx_15'}
get_from_user requested feedback
get_from_user (raw): 'no'
get_from_user (processed): 'no'
say_to_user_with_referents: Would you use the word 'can' when describing <p>this</p> object? {'patient': 'oidx_31'}
get_from_user requested feedback
get_from_user (raw): 'no'
get_from_user (processed): 'no'
say_to_user_with_referents: Would you use the word 'can' when describing <p>this</p> object? {'patient': 'oidx_14'}
get_from_user requested feedback
get_from_user (raw): 'no'
get_from_user (processed): 'no'
say_to_user: Thanks. Now, back to business.
say_to_user_with_referents: You want me to deliver <p>this</p> to <r>this person</r>? {'recipient': 'w', 'patient': 'oidx_11', 'action': 'bring'}
get_from_user requested feedback
get_from_user (raw): 'no'
get_from_user (processed): 'no'
say_to_user_with_referents: You want me to deliver <p>this</p> to someone? {'patient': 'oidx_11', 'action': 'bring'}
get_from_user requested feedback
get_from_user (raw): 'no'
get_from_user (processed): 'no'
say_to_user_with_referents: You want me to deliver <p>this</p> to <r>this person</r>? {'recipient': 'w', 'patient': 'oidx_26', 'action': 'bring'}
get_from_user requested feedback
get_from_user (raw): 'yes'
get_from_user (processed): 'yes'
perform_action: {'recipient': 'w', 'goal': None, 'patient': 'oidx_26', 'action': 'bring', 'source': None}
main: ... done; got action {'recipient': 'w', 'goal': None, 'patient': 'oidx_26', 'action': 'bring', 'source': None}
main: writing new information from dialog(s) to file...
main: ... done; wrote data d = [[{'recipient': 'w', 'goal': None, 'patient': 'oidx_26', 'action': 'bring', 'source': None}], [{'all': ['pass the soda can to walter ward'], 'action': [], 'goal': [], 'recipient': ['walter the supervisor'], 'patient': ['the orange can'], 'source': []}], [('can', 15, 0), ('can', 31, 0), ('can', 14, 0)], [], [1], [0]]
