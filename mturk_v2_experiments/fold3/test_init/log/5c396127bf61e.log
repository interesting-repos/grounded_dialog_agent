/home/jesse/.local/lib/python3.5/site-packages/gensim/matutils.py:737: FutureWarning: Conversion of the second argument of issubdtype from `int` to `np.signedinteger` is deprecated. In future, it will be treated as `np.int64 == np.dtype(int).type`.
  if np.issubdtype(vec.dtype, np.int):
main: loading grounder from file...
main: ... done
main: instantiating IO...
main: ... done
main: instantiating Agent...
main: ... done
main: running command dialog...
say_to_user_with_referents: What should I do? {}
get_from_user requested feedback
get_from_user (raw): 'You should give Walter Ward, the Suprvisor, the empty can'
get_from_user (processed): 'you should give walter ward the suprvisor the empty can'
say_to_user: I haven't heard the word 'you' before. Does it refer to properties of things, like a color, shape, or weight?
get_from_user requested feedback
get_from_user (raw): 'You refer to the receiving party at the opposite end of the conversation. It is usually somebody, but can be some thing.'
get_from_user (processed): 'you refer to the receiving party at the opposite end of the conversation it is usually somebody but can be some thing'
say_to_user: Sorry, I am confused and just need a 'yes' or 'no' response for now.
say_to_user: I haven't heard the word 'you' before. Does it refer to properties of things, like a color, shape, or weight?
get_from_user requested feedback
get_from_user (raw): 'no'
get_from_user (processed): 'no'
say_to_user: I haven't heard the word 'should' before. Does it refer to properties of things, like a color, shape, or weight?
get_from_user requested feedback
get_from_user (raw): 'Give Walter Ward the empty can he needs'
get_from_user (processed): 'give walter ward the empty can he needs'
say_to_user: Sorry, I am confused and just need a 'yes' or 'no' response for now.
say_to_user: I haven't heard the word 'should' before. Does it refer to properties of things, like a color, shape, or weight?
get_from_user requested feedback
get_from_user (raw): 'no'
get_from_user (processed): 'no'
say_to_user_with_referents: You want me to deliver something for someone? {'action': 'bring'}
get_from_user requested feedback
get_from_user (raw): 'yes'
get_from_user (processed): 'yes'
say_to_user_with_referents: Who should receive what I deliver? {'action': 'bring'}
get_from_user requested feedback
get_from_user (raw): 'Walter Ward'
get_from_user (processed): 'walter ward'
say_to_user_with_referents: What should I find to deliver? {'action': 'bring'}
get_from_user requested feedback
get_from_user (raw): 'An empty can'
get_from_user (processed): 'an empty can'
say_to_user: Sorry, I didn't understand that.
say_to_user_with_referents: What should I find to deliver? {'action': 'bring'}
get_from_user requested feedback
get_from_user (raw): 'a can'
get_from_user (processed): 'a can'
say_to_user_with_referents: You want me to deliver <p>this</p> to someone? {'patient': 'oidx_12', 'action': 'bring'}
get_from_user requested feedback
get_from_user (raw): 'no'
get_from_user (processed): 'no'
say_to_user_with_referents: What should I find to deliver? {'action': 'bring'}
get_from_user_enum requested feedback
get_from_user_enum: 0
say_to_user_with_referents: To whom should I deliver <p>this</p>? {'patient': 'oidx_11', 'action': 'bring'}
get_from_user requested feedback
get_from_user (raw): 'Walter Ward'
get_from_user (processed): 'walter ward'
say_to_user: Sorry, I didn't understand that.
say_to_user_with_referents: To whom should I deliver <p>this</p>? {'patient': 'oidx_11', 'action': 'bring'}
get_from_user_enum requested feedback
get_from_user_enum: 8
perform_action: {'goal': None, 'source': None, 'recipient': 'w', 'patient': 'oidx_11', 'action': 'bring'}
main: ... done; got action {'goal': None, 'source': None, 'recipient': 'w', 'patient': 'oidx_11', 'action': 'bring'}
main: writing new information from dialog(s) to file...
main: ... done; wrote data d = [[{'goal': None, 'source': None, 'recipient': 'w', 'patient': 'oidx_11', 'action': 'bring'}], [{'goal': [], 'source': [], 'recipient': ['walter ward', 'walter ward'], 'patient': ['an empty can', 'a can'], 'all': ['you should give walter ward the suprvisor the empty can'], 'action': []}], [], [], [3], [0]]
