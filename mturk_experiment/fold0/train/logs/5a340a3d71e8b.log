No handlers could be found for logger "gensim.models.doc2vec"
main: loading grounder from file...
main: ... done
main: instantiating IO...
main: ... done
main: instantiating Agent...
main: ... done
main: running command dialog...
say_to_user_with_referents: What should I do? {}
get_from_user requested feedback
get_from_user (raw): 'open the office door,turn left, walk to end and turn right twice, then open first door on right and enter.'
get_from_user (processed): 'open the office door,turn left walk to end and turn right twice then open first door on right and enter'
say_to_user: I haven't heard the word 'open' before. Does it refer to properties of things, like a color, shape, or weight?
get_from_user requested feedback
get_from_user (raw): 'turn the door knob and push the door, then walk into room.'
get_from_user (processed): 'turn the door knob and push the door then walk into room'
parse_and_ground_utterance: could not generate a parse for the utterance
say_to_user: I am expecting a simple 'yes' or 'no' response.
say_to_user: I haven't heard the word 'open' before. Does it refer to properties of things, like a color, shape, or weight?
get_from_user requested feedback
get_from_user (raw): 'no'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
say_to_user: I haven't heard the word 'end' before. Does it refer to properties of things, like a color, shape, or weight?
get_from_user requested feedback
get_from_user (raw): 'no'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
say_to_user: I haven't heard the word 'open' before. Does it refer to properties of things, like a color, shape, or weight?
get_from_user requested feedback
get_from_user (raw): 'no it refers to action'
get_from_user (processed): 'no it refers to action'
parse_and_ground_utterance: parsed 'no it refers to action' to lambda 1:<l,t>.(and(a_l(lambda 2:l.(1(2))),a_l(lambda 2:l.(1(2))),a_l(lambda 2:l.(1(2))),a_l(lambda 2:l.(1(2)))))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	3402 0.0125
	3404 0.0125
	3418 0.0125
	3420 0.0125
	3422 0.0125
	3430 0.0125
	3432 0.0125
	3502 0.0125
	3508 0.0125
	3510 0.0125
	3512 0.0125
	3414 0.0125
	3414a 0.0125
	3414b 0.0125
	3436 0.0125
	3416 0.0125
	3516 0.0125
	3506 0.0125
	3406 0.0125
	3514 0.0125
	3520 0.0125
	3408 0.0125
	3410 0.0125
	3424 0.0125
	3504 0.0125
	3518 0.0125
	3418 0.0125
	3432 0.0125
	3410 0.0125
	3414 0.0125
	3420 0.0125
	3510 0.0125
	3402 0.0125
	3404 0.0125
	3408 0.0125
	3414 0.0125
	3416 0.0125
	3418 0.0125
	3420 0.0125
	3422 0.0125
	3424 0.0125
	3430 0.0125
	3432 0.0125
	3436 0.0125
	3414 0.0125
	3414b 0.0125
	3422 0.0125
	3424 0.0125
	3430 0.0125
	3432 0.0125
	3436 0.0125
	3514 0.0125
	3516 0.0125
	3518 0.0125
	3520 0.0125
	3502 0.0125
	3504 0.0125
	3506 0.0125
	3508 0.0125
	3510 0.0125
	3512 0.0125
	3514 0.0125
	3516 0.0125
	3518 0.0125
	3520 0.0125
	3402 0.0125
	3404 0.0125
	3406 0.0125
	3408 0.0125
	3410 0.0125
	3414a 0.0125
	3416 0.0125
	3418 0.0125
	3420 0.0125
	3502 0.0125
	3504 0.0125
	3506 0.0125
	3508 0.0125
	3510 0.0125
	3512 0.0125
say_to_user: I am expecting a simple 'yes' or 'no' response.
say_to_user: I haven't heard the word 'open' before. Does it refer to properties of things, like a color, shape, or weight?
get_from_user requested feedback
get_from_user (raw): 'no'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
parse_and_ground_utterance: could not generate a parse for the utterance
say_to_user_with_referents: You want me to go somewhere? (not manipulate any objects) {'action': 'walk'}
get_from_user requested feedback
get_from_user (raw): 'go to kitchen'
get_from_user (processed): 'go to kitchen'
parse_and_ground_utterance: parsed 'go to kitchen' to walk(a_l(lambda 1:l.(kitchen(1))))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	walk(3520) 1.0
say_to_user: I am expecting a simple 'yes' or 'no' response.
say_to_user_with_referents: You want me to go somewhere? (not manipulate any objects) {'action': 'walk'}
get_from_user requested feedback
get_from_user (raw): 'yes'
get_from_user (processed): 'yes'
parse_and_ground_utterance: parsed 'yes' to yes
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	yes 1.0
say_to_user_with_referents: Where should I go? {'action': 'walk'}
get_from_user requested feedback
get_from_user (raw): 'kitchen'
get_from_user (processed): 'kitchen'
parse_and_ground_utterance: parsed 'kitchen' to kitchen
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	kitchen 1.0
say_to_user: I'm still learning the meanings of some words. I'm going to ask you a few questions about these nearby objects before we continue.
say_to_user_with_referents: Among these nearby objects, could you show me one you would use the word 'first' when describing, or shake your head if there are none? {}
get_oidx_from_user requested feedback
get_oidx_from_user: 27
parse_and_ground_utterance: parsed 'kitchen' to kitchen
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	kitchen 1.0
say_to_user_with_referents: Among these nearby objects, could you show me one you would use the word 'coffee' when describing, or shake your head if there are none? {}
get_oidx_from_user requested feedback
get_oidx_from_user: 27
parse_and_ground_utterance: parsed 'kitchen' to kitchen
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	kitchen 1.0
say_to_user_with_referents: Among these nearby objects, could you show me one you would use the word 'styrofoam' when describing, or shake your head if there are none? {}
get_oidx_from_user requested feedback
get_oidx_from_user: None
parse_and_ground_utterance: parsed 'kitchen' to kitchen
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	kitchen 1.0
say_to_user_with_referents: Among these nearby objects, could you show me one you would use the word 'blue' when describing, or shake your head if there are none? {}
get_oidx_from_user requested feedback
get_oidx_from_user: 18
parse_and_ground_utterance: parsed 'kitchen' to kitchen
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	kitchen 1.0
say_to_user_with_referents: Among these nearby objects, could you show me one you would use the word 'column' when describing, or shake your head if there are none? {}
get_oidx_from_user requested feedback
get_oidx_from_user: 20
parse_and_ground_utterance: parsed 'kitchen' to kitchen
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	kitchen 1.0
say_to_user: Thanks. Now, back to business.
say_to_user: Sorry, I didn't understand that.
say_to_user_with_referents: Where should I go? {'action': 'walk'}
get_from_user requested feedback
get_from_user (raw): 'kitchen'
get_from_user (processed): 'kitchen'
parse_and_ground_utterance: parsed 'kitchen' to kitchen
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	kitchen 1.0
say_to_user: Sorry, I didn't understand that.
say_to_user_with_referents: Where should I go? {'action': 'walk'}
get_from_user requested feedback
get_from_user (raw): 'kitchen'
get_from_user (processed): 'kitchen'
parse_and_ground_utterance: parsed 'kitchen' to kitchen
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	kitchen 1.0
say_to_user: Sorry, I didn't understand that.
say_to_user_with_referents: Where should I go? {'action': 'walk'}
get_from_user requested feedback
get_from_user (raw): 'to the kitchen'
get_from_user (processed): 'to the kitchen'
parse_and_ground_utterance: parsed 'to the kitchen' to a_l(lambda 1:l.(kitchen(1)))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	3520 1.0
say_to_user_with_referents: You want me to go to <g>here</g> (not manipulate any objects)? {'action': 'walk', 'goal': '3520'}
get_from_user requested feedback
get_from_user (raw): 'go to the door'
get_from_user (processed): 'go to the door'
parse_and_ground_utterance: parsed 'go to the door' to walk(a_l(lambda 1:l.(kitchen(1))))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	walk(3520) 1.0
say_to_user: I am expecting a simple 'yes' or 'no' response.
say_to_user_with_referents: You want me to go to <g>here</g> (not manipulate any objects)? {'action': 'walk', 'goal': '3520'}
get_from_user requested feedback
get_from_user (raw): 'to the hall'
get_from_user (processed): 'to the hall'
parse_and_ground_utterance: parsed 'to the hall' to w
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	w 1.0
say_to_user: I am expecting a simple 'yes' or 'no' response.
say_to_user_with_referents: You want me to go to <g>here</g> (not manipulate any objects)? {'action': 'walk', 'goal': '3520'}
get_from_user requested feedback
get_from_user (raw): 'yes'
get_from_user (processed): 'yes'
parse_and_ground_utterance: parsed 'yes' to yes
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	yes 1.0
perform_action: {'action': 'walk', 'recipient': None, 'patient': None, 'goal': '3520', 'source': None}
main: ... done; got action {'action': 'walk', 'recipient': None, 'patient': None, 'goal': '3520', 'source': None}
main: writing new information from dialog(s) to file...
main: ... done; wrote data d = [[{'action': 'walk', 'recipient': None, 'patient': None, 'goal': '3520', 'source': None}], [{'all': ['open the office door,turn left walk to end and turn right twice then open first door on right and enter'], 'patient': [], 'goal': ['kitchen', 'kitchen', 'kitchen', 'to the kitchen'], 'source': [], 'action': [], 'recipient': []}], [('can', 27, 1), ('coffee', 27, 1), ('styrofoam', 10, 0), ('styrofoam', 3, 0), ('styrofoam', 27, 0), ('styrofoam', 7, 0), ('styrofoam', 18, 0), ('styrofoam', 2, 0), ('styrofoam', 20, 0), ('styrofoam', 17, 0), ('blue', 18, 1), ('column', 20, 1)], []]
main: running command dialog...
say_to_user_with_referents: What should I do? {}
get_from_user requested feedback
get_from_user (raw): 'pick it up'
get_from_user (processed): 'pick it up'
parse_and_ground_utterance: parsed 'pick it up' to lambda 1:i.(lambda 2:l.(lambda 3:l.(and(lambda 2:l.(lambda 3:l.(move(1,2,3))),lambda 2:l.(lambda 3:l.(move(1,2,3)))))))
parse_and_ground_utterance: grounding timeout for lambda 1:i.(lambda 2:l.(lambda 3:l.(and(lambda 2:l.(lambda 3:l.(move(1,2,3))),lambda 2:l.(lambda 3:l.(move(1,2,3)))))))
say_to_user_with_referents: You want me to go somewhere? (not manipulate any objects) {'action': 'walk'}
get_from_user requested feedback
get_from_user (raw): 'pick up bottle on table'
get_from_user (processed): 'pick up bottle on table'
parse_and_ground_utterance: could not generate a parse for the utterance
say_to_user: I am expecting a simple 'yes' or 'no' response.
say_to_user_with_referents: You want me to go somewhere? (not manipulate any objects) {'action': 'walk'}
get_from_user requested feedback
get_from_user (raw): 'go to the bottle'
get_from_user (processed): 'go to the bottle'
parse_and_ground_utterance: parsed 'go to the bottle' to walk(a_l(lambda 1:l.(pod(1))))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	walk(3408) 0.2
	walk(3410) 0.2
	walk(3424) 0.2
	walk(3504) 0.2
	walk(3518) 0.2
say_to_user: I am expecting a simple 'yes' or 'no' response.
say_to_user_with_referents: You want me to go somewhere? (not manipulate any objects) {'action': 'walk'}
get_from_user requested feedback
get_from_user (raw): ''
get_from_user (processed): ''
parse_and_ground_utterance: could not generate a parse for the utterance
say_to_user: I am expecting a simple 'yes' or 'no' response.
say_to_user_with_referents: You want me to go somewhere? (not manipulate any objects) {'action': 'walk'}
get_from_user requested feedback
get_from_user (raw): 'go pick up object'
get_from_user (processed): 'go pick up object'
parse_and_ground_utterance: parsed 'go pick up object' to walk(and(a_l(lambda 1:l.(middle(1))),a_l(lambda 1:l.(middle(1)))))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	walk(3410) 0.25
	walk(3414) 0.25
	walk(3420) 0.25
	walk(3510) 0.25
say_to_user: I am expecting a simple 'yes' or 'no' response.
say_to_user_with_referents: You want me to go somewhere? (not manipulate any objects) {'action': 'walk'}
get_from_user requested feedback
get_from_user (raw): 'no'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
say_to_user_with_referents: You want me to move an item from somewhere to somewhere (not give it to someone)? {'action': 'move'}
get_from_user requested feedback
get_from_user (raw): 'move an item from the table to your hand'
get_from_user (processed): 'move an item from the table to your hand'
parse_and_ground_utterance: could not generate a parse for the utterance
say_to_user: I am expecting a simple 'yes' or 'no' response.
say_to_user_with_referents: You want me to move an item from somewhere to somewhere (not give it to someone)? {'action': 'move'}
get_from_user requested feedback
get_from_user (raw): 'no'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
say_to_user_with_referents: You want me to deliver something for someone? {'action': 'bring'}
get_from_user requested feedback
get_from_user (raw): 'pick up bottle'
get_from_user (processed): 'pick up bottle'
parse_and_ground_utterance: could not generate a parse for the utterance
say_to_user: I am expecting a simple 'yes' or 'no' response.
say_to_user_with_referents: You want me to deliver something for someone? {'action': 'bring'}
get_from_user requested feedback
get_from_user (raw): 'no'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
say_to_user_with_referents: You want me to go somewhere? (not manipulate any objects) {'action': 'walk'}
get_from_user requested feedback
get_from_user (raw): 'no'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
say_to_user_with_referents: You want me to move an item from somewhere to somewhere (not give it to someone)? {'action': 'move'}
get_from_user requested feedback
get_from_user (raw): 'yes'
get_from_user (processed): 'yes'
parse_and_ground_utterance: parsed 'yes' to yes
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	yes 1.0
say_to_user_with_referents: Where should I move something from on its way somewhere else? {'action': 'move'}
get_from_user requested feedback
get_from_user (raw): 'from the table'
get_from_user (processed): 'from the table'
parse_and_ground_utterance: parsed 'from the table' to lambda 1:l.(and(1))
Traceback (most recent call last):
  File "main.py", line 175, in <module>
    main()
  File "main.py", line 109, in main
    perception_labels_requested)
  File "/var/www/gandalf.nmtechgroup.com/phm/grounded_dialog_agent/Agent.py", line 163, in start_action_dialog
    gprs, pr = self.parse_and_ground_utterance(ur)
  File "/var/www/gandalf.nmtechgroup.com/phm/grounded_dialog_agent/Agent.py", line 870, in parse_and_ground_utterance
    self.budget_for_grounding)
  File "/var/www/gandalf.nmtechgroup.com/phm/grounded_dialog_agent/Agent.py", line 1569, in call_function_with_timeout
    r = f(**args)
  File "/var/www/gandalf.nmtechgroup.com/phm/grounded_dialog_agent/KBGrounder.py", line 42, in ground_semantic_tree
    candidate_groundings = self.ground_semantic_tree(candidate)
  File "/var/www/gandalf.nmtechgroup.com/phm/grounded_dialog_agent/KBGrounder.py", line 75, in ground_semantic_tree
    for cjdx in range(len(child_groundings[1])):
IndexError: list index out of range
