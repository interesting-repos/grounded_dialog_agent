No handlers could be found for logger "gensim.models.doc2vec"
main: loading grounder from file...
main: ... done
main: instantiating IO...
main: ... done
main: instantiating Agent...
main: ... done
main: running command dialog...
say_to_user_with_referents: What should I do? {}
get_from_user requested feedback
get_from_user (raw): 'Go to th Pod room next to the Conference room'
get_from_user (processed): 'go to th pod room next to the conference room'
parse_and_ground_utterance: parsed 'go to th pod room next to the conference room' to walk(and(a_l(lambda 1:l.(and(adjacent(1,a_l(lambda 2:l.(conference(2)))),pod(1)))),a_l(lambda 1:l.(and(adjacent(1,a_l(lambda 2:l.(conference(2)))),pod(1))))))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	walk(3408) 0.5
	walk(3518) 0.5
say_to_user: I'm still learning the meanings of some words. I'm going to ask you a few questions about these nearby objects before we continue.
say_to_user_with_referents: Among these nearby objects, could you show me one you would use the word 'clear' when describing, or shake your head if there are none? {}
get_oidx_from_user requested feedback
get_oidx_from_user: None
parse_and_ground_utterance: parsed 'go to th pod room next to the conference room' to walk(and(a_l(lambda 1:l.(and(adjacent(1,a_l(lambda 2:l.(conference(2)))),pod(1)))),a_l(lambda 1:l.(and(adjacent(1,a_l(lambda 2:l.(conference(2)))),pod(1))))))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	walk(3408) 0.5
	walk(3518) 0.5
say_to_user_with_referents: Among these nearby objects, could you show me one you would use the word 'container' when describing, or shake your head if there are none? {}
get_oidx_from_user requested feedback
get_oidx_from_user: 2
parse_and_ground_utterance: parsed 'go to th pod room next to the conference room' to walk(and(a_l(lambda 1:l.(and(adjacent(1,a_l(lambda 2:l.(conference(2)))),pod(1)))),a_l(lambda 1:l.(and(adjacent(1,a_l(lambda 2:l.(conference(2)))),pod(1))))))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	walk(3408) 0.5
	walk(3518) 0.5
say_to_user_with_referents: Among these nearby objects, could you show me one you would use the word 'peaches' when describing, or shake your head if there are none? {}
get_oidx_from_user requested feedback
get_oidx_from_user: None
parse_and_ground_utterance: parsed 'go to th pod room next to the conference room' to walk(and(a_l(lambda 1:l.(and(adjacent(1,a_l(lambda 2:l.(conference(2)))),pod(1)))),a_l(lambda 1:l.(and(adjacent(1,a_l(lambda 2:l.(conference(2)))),pod(1))))))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	walk(3408) 0.5
	walk(3518) 0.5
say_to_user_with_referents: Among these nearby objects, could you show me one you would use the word 'column' when describing, or shake your head if there are none? {}
get_oidx_from_user requested feedback
get_oidx_from_user: None
parse_and_ground_utterance: parsed 'go to th pod room next to the conference room' to walk(and(a_l(lambda 1:l.(and(adjacent(1,a_l(lambda 2:l.(conference(2)))),pod(1)))),a_l(lambda 1:l.(and(adjacent(1,a_l(lambda 2:l.(conference(2)))),pod(1))))))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	walk(3408) 0.5
	walk(3518) 0.5
say_to_user_with_referents: Among these nearby objects, could you show me one you would use the word 'cylinder' when describing, or shake your head if there are none? {}
get_oidx_from_user requested feedback
get_oidx_from_user: 20
parse_and_ground_utterance: parsed 'go to th pod room next to the conference room' to walk(and(a_l(lambda 1:l.(and(adjacent(1,a_l(lambda 2:l.(conference(2)))),pod(1)))),a_l(lambda 1:l.(and(adjacent(1,a_l(lambda 2:l.(conference(2)))),pod(1))))))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	walk(3408) 0.5
	walk(3518) 0.5
say_to_user: Thanks. Now, back to business.
say_to_user_with_referents: You want me to go somewhere? (not manipulate any objects) {'action': 'walk'}
get_from_user requested feedback
get_from_user (raw): 'Yes'
get_from_user (processed): 'yes'
parse_and_ground_utterance: parsed 'yes' to yes
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	yes 1.0
say_to_user_with_referents: Where should I go? {'action': 'walk'}
get_from_user requested feedback
get_from_user (raw): 'The Pod Room next to the Conference Room'
get_from_user (processed): 'the pod room next to the conference room'
parse_and_ground_utterance: parsed 'the pod room next to the conference room' to a_l(lambda 1:l.(and(adjacent(1,a_l(lambda 2:l.(conference(2)))),pod(1))))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	3408 0.5
	3518 0.5
say_to_user_with_referents: You want me to go to <g>here</g> (not manipulate any objects)? {'action': 'walk', 'goal': '3518'}
get_from_user requested feedback
get_from_user (raw): 'Yes'
get_from_user (processed): 'yes'
parse_and_ground_utterance: parsed 'yes' to yes
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	yes 1.0
perform_action: {'action': 'walk', 'recipient': None, 'patient': None, 'goal': '3518', 'source': None}
main: ... done; got action {'action': 'walk', 'recipient': None, 'patient': None, 'goal': '3518', 'source': None}
main: writing new information from dialog(s) to file...
main: ... done; wrote data d = [[{'action': 'walk', 'recipient': None, 'patient': None, 'goal': '3518', 'source': None}], [{'all': ['go to th pod room next to the conference room'], 'patient': [], 'goal': ['the pod room next to the conference room'], 'source': [], 'action': [], 'recipient': []}], [('clear', 10, 0), ('clear', 3, 0), ('clear', 27, 0), ('clear', 7, 0), ('clear', 18, 0), ('clear', 2, 0), ('clear', 20, 0), ('clear', 17, 0), ('container', 2, 1), ('peach', 10, 0), ('peach', 3, 0), ('peach', 27, 0), ('peach', 7, 0), ('peach', 18, 0), ('peach', 2, 0), ('peach', 20, 0), ('peach', 17, 0), ('column', 10, 0), ('column', 3, 0), ('column', 27, 0), ('column', 7, 0), ('column', 18, 0), ('column', 2, 0), ('column', 20, 0), ('column', 17, 0), ('cylinder', 20, 1)], []]
main: running command dialog...
say_to_user_with_referents: What should I do? {}
get_from_user requested feedback
get_from_user (raw): 'Give David "Dave" Daniel an open can of peaches'
get_from_user (processed): 'give david dave daniel an open can of peaches'
say_to_user: I haven't heard the word 'open' before. Does it refer to properties of things, like a color, shape, or weight?
get_from_user requested feedback
get_from_user (raw): 'yes'
get_from_user (processed): 'yes'
parse_and_ground_utterance: parsed 'yes' to yes
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	yes 1.0
say_to_user: Does 'open' mean the same thing as 'empty'?
get_from_user requested feedback
get_from_user (raw): 'No'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
parse_and_ground_utterance: parsed 'give david dave daniel an open can of peaches' to bring(a_i(lambda 1:i.(and(peach(1),can(1),open(1)))),d)
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	bring(oidx_6,d) 0.125
	bring(oidx_11,d) 0.125
	bring(oidx_12,d) 0.125
	bring(oidx_13,d) 0.125
	bring(oidx_22,d) 0.125
	bring(oidx_25,d) 0.125
	bring(oidx_26,d) 0.125
	bring(oidx_28,d) 0.125
say_to_user: I'm still learning the meanings of some words. I'm going to ask you a few questions about these nearby objects before we continue.
say_to_user_with_referents: Among these nearby objects, could you show me one you would use the word 'open' when describing, or shake your head if there are none? {}
get_oidx_from_user requested feedback
get_oidx_from_user: None
parse_and_ground_utterance: parsed 'give david dave daniel an open can of peaches' to bring(a_i(lambda 1:i.(and(peach(1),can(1),open(1)))),d)
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	bring(oidx_6,d) 0.125
	bring(oidx_11,d) 0.125
	bring(oidx_12,d) 0.125
	bring(oidx_13,d) 0.125
	bring(oidx_22,d) 0.125
	bring(oidx_25,d) 0.125
	bring(oidx_26,d) 0.125
	bring(oidx_28,d) 0.125
say_to_user_with_referents: Among these nearby objects, could you show me one you would use the word 'can' when describing, or shake your head if there are none? {}
get_oidx_from_user requested feedback
get_oidx_from_user: None
parse_and_ground_utterance: parsed 'give david dave daniel an open can of peaches' to bring(a_i(lambda 1:i.(and(peach(1),can(1),open(1)))),d)
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	bring(oidx_6,d) 0.125
	bring(oidx_11,d) 0.125
	bring(oidx_12,d) 0.125
	bring(oidx_13,d) 0.125
	bring(oidx_22,d) 0.125
	bring(oidx_25,d) 0.125
	bring(oidx_26,d) 0.125
	bring(oidx_28,d) 0.125
say_to_user_with_referents: Among these nearby objects, could you show me one you would use the word 'white' when describing, or shake your head if there are none? {}
get_oidx_from_user requested feedback
get_oidx_from_user: None
parse_and_ground_utterance: parsed 'give david dave daniel an open can of peaches' to bring(a_i(lambda 1:i.(and(peach(1),can(1),open(1)))),d)
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	bring(oidx_6,d) 0.125
	bring(oidx_11,d) 0.125
	bring(oidx_12,d) 0.125
	bring(oidx_13,d) 0.125
	bring(oidx_22,d) 0.125
	bring(oidx_25,d) 0.125
	bring(oidx_26,d) 0.125
	bring(oidx_28,d) 0.125
say_to_user_with_referents: Among these nearby objects, could you show me one you would use the word 'styrofoam' when describing, or shake your head if there are none? {}
get_oidx_from_user requested feedback
get_oidx_from_user: 20
parse_and_ground_utterance: parsed 'give david dave daniel an open can of peaches' to bring(a_i(lambda 1:i.(and(peach(1),can(1),open(1)))),d)
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	bring(oidx_6,d) 0.125
	bring(oidx_11,d) 0.125
	bring(oidx_12,d) 0.125
	bring(oidx_13,d) 0.125
	bring(oidx_22,d) 0.125
	bring(oidx_25,d) 0.125
	bring(oidx_26,d) 0.125
	bring(oidx_28,d) 0.125
say_to_user_with_referents: Among these nearby objects, could you show me one you would use the word 'pringles' when describing, or shake your head if there are none? {}
get_oidx_from_user requested feedback
get_oidx_from_user: None
parse_and_ground_utterance: parsed 'give david dave daniel an open can of peaches' to bring(a_i(lambda 1:i.(and(peach(1),can(1),open(1)))),d)
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	bring(oidx_6,d) 0.125
	bring(oidx_11,d) 0.125
	bring(oidx_12,d) 0.125
	bring(oidx_13,d) 0.125
	bring(oidx_22,d) 0.125
	bring(oidx_25,d) 0.125
	bring(oidx_26,d) 0.125
	bring(oidx_28,d) 0.125
say_to_user: Thanks. Now, back to business.
say_to_user_with_referents: You want me to deliver something for someone? {'action': 'bring'}
get_from_user requested feedback
get_from_user (raw): 'Yes'
get_from_user (processed): 'yes'
parse_and_ground_utterance: parsed 'yes' to yes
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	yes 1.0
say_to_user_with_referents: What should I find to deliver? {'action': 'bring'}
get_from_user requested feedback
get_from_user (raw): 'Can of peaches'
get_from_user (processed): 'can of peaches'
parse_and_ground_utterance: parsed 'can of peaches' to and(peach,can)
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	
say_to_user_with_referents: What should I deliver to <r>this person</r>? {'action': 'bring', 'recipient': 'd'}
get_from_user requested feedback
get_from_user (raw): 'Empty can of peaches'
get_from_user (processed): 'empty can of peaches'
parse_and_ground_utterance: parsed 'empty can of peaches' to and(empty,peach,can)
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	
say_to_user_with_referents: You want me to deliver <p>this</p> to <r>this person</r>? {'action': 'bring', 'recipient': 'n', 'patient': 'oidx_26'}
get_from_user requested feedback
get_from_user (raw): 'No'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
say_to_user_with_referents: What should I find to deliver? {'action': 'bring'}
get_from_user requested feedback
get_from_user (raw): 'Tin of peaches'
get_from_user (processed): 'tin of peaches'
say_to_user: I haven't heard the word 'tin' before. Does it refer to properties of things, like a color, shape, or weight?
get_from_user requested feedback
get_from_user (raw): 'No'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
parse_and_ground_utterance: parsed 'tin of peaches' to lambda 1:<i,t>.(and(lambda 2:<i,t>.(and(1,peach)),lambda 2:<i,t>.(and(1,peach))))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	
say_to_user_with_referents: What should I deliver to <r>this person</r>? {'action': 'bring', 'recipient': 'd'}
get_from_user requested feedback
get_from_user (raw): 'Can'
get_from_user (processed): 'can'
parse_and_ground_utterance: parsed 'can' to can
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	can 1.0
say_to_user_with_referents: You want me to deliver <p>this</p> to someone? {'action': 'bring', 'patient': 'oidx_26'}
get_from_user requested feedback
get_from_user (raw): 'No'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
say_to_user_with_referents: What should I find to deliver? {'action': 'bring'}
get_from_user requested feedback
get_from_user (raw): 'empty can of peaches'
get_from_user (processed): 'empty can of peaches'
parse_and_ground_utterance: parsed 'empty can of peaches' to and(empty,peach,can)
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	
say_to_user_with_referents: What should I deliver to <r>this person</r>? {'action': 'bring', 'recipient': 'd'}
get_from_user requested feedback
get_from_user (raw): 'empty cylinder of peaches'
get_from_user (processed): 'empty cylinder of peaches'
parse_and_ground_utterance: parsed 'empty cylinder of peaches' to and(empty,peach,cylinder)
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	
say_to_user_with_referents: You want me to deliver <p>this</p> to <r>this person</r>? {'action': 'bring', 'recipient': 'd', 'patient': 'oidx_25'}
get_from_user requested feedback
get_from_user (raw): 'No'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
say_to_user_with_referents: What should I find to deliver? {'action': 'bring'}
get_from_user requested feedback
get_from_user (raw): 'cylinder of peaches'
get_from_user (processed): 'cylinder of peaches'
parse_and_ground_utterance: parsed 'cylinder of peaches' to and(peach,cylinder)
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	
say_to_user_with_referents: You want me to deliver something to <r>this person</r>? {'action': 'bring', 'recipient': 'b'}
get_from_user requested feedback
get_from_user (raw): 'No'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
say_to_user_with_referents: What should I find to deliver? {'action': 'bring'}
get_from_user requested feedback
get_from_user (raw): 'Fruit can'
get_from_user (processed): 'fruit can'
say_to_user: I haven't heard the word 'fruit' before. Does it refer to properties of things, like a color, shape, or weight?
get_from_user requested feedback
get_from_user (raw): 'No'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
parse_and_ground_utterance: parsed 'fruit can' to lambda 0:i.(and(spice(0),can(0)))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	True 0.0625
	False 0.0625
	True 0.0625
	False 0.0625
	True 0.0625
	False 0.0625
	True 0.0625
	False 0.0625
	True 0.0625
	False 0.0625
	True 0.0625
	False 0.0625
	True 0.0625
	False 0.0625
	True 0.0625
	False 0.0625
say_to_user_with_referents: You want me to deliver something to <r>this person</r>? {'action': 'bring', 'recipient': 'p'}
get_from_user requested feedback
get_from_user (raw): 'No'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
say_to_user_with_referents: What should I find to deliver? {'action': 'bring'}
get_from_user requested feedback
get_from_user (raw): 'can of fruit'
get_from_user (processed): 'can of fruit'
parse_and_ground_utterance: parsed 'can of fruit' to lambda 1:l.(and(1))
Traceback (most recent call last):
  File "main.py", line 175, in <module>
    main()
  File "main.py", line 109, in main
    perception_labels_requested)
  File "/var/www/gandalf.nmtechgroup.com/phm/grounded_dialog_agent/Agent.py", line 163, in start_action_dialog
    gprs, pr = self.parse_and_ground_utterance(ur)
  File "/var/www/gandalf.nmtechgroup.com/phm/grounded_dialog_agent/Agent.py", line 870, in parse_and_ground_utterance
    self.budget_for_grounding)
  File "/var/www/gandalf.nmtechgroup.com/phm/grounded_dialog_agent/Agent.py", line 1569, in call_function_with_timeout
    r = f(**args)
  File "/var/www/gandalf.nmtechgroup.com/phm/grounded_dialog_agent/KBGrounder.py", line 42, in ground_semantic_tree
    candidate_groundings = self.ground_semantic_tree(candidate)
  File "/var/www/gandalf.nmtechgroup.com/phm/grounded_dialog_agent/KBGrounder.py", line 75, in ground_semantic_tree
    for cjdx in range(len(child_groundings[1])):
IndexError: list index out of range
