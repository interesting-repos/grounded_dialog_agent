No handlers could be found for logger "gensim.models.doc2vec"
main: loading grounder from file...
main: ... done
main: instantiating IO...
main: ... done
main: instantiating Agent...
main: ... done
main: running command dialog...
say_to_user_with_referents: What should I do? {}
get_from_user requested feedback
get_from_user (raw): 'Go to the room in between M and P'
get_from_user (processed): 'go to the room in between m and p'
say_to_user: I haven't heard the word 'm' before. Does it refer to properties of things, like a color, shape, or weight?
get_from_user requested feedback
get_from_user (raw): 'M stands for Mallory "Mal" Maroon'
get_from_user (processed): 'm stands for mallory mal maroon'
parse_and_ground_utterance: parsed 'm stands for mallory mal maroon' to and(p,m)
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	
say_to_user: I am expecting a simple 'yes' or 'no' response.
say_to_user: I haven't heard the word 'm' before. Does it refer to properties of things, like a color, shape, or weight?
get_from_user requested feedback
get_from_user (raw): 'No'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
say_to_user: I haven't heard the word 'p' before. Does it refer to properties of things, like a color, shape, or weight?
get_from_user requested feedback
get_from_user (raw): 'No'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
parse_and_ground_utterance: could not generate a parse for the utterance
say_to_user_with_referents: You want me to go somewhere? (not manipulate any objects) {'action': 'walk'}
get_from_user requested feedback
get_from_user (raw): 'Yes'
get_from_user (processed): 'yes'
parse_and_ground_utterance: parsed 'yes' to yes
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	yes 1.0
say_to_user_with_referents: Where should I go? {'action': 'walk'}
get_from_user requested feedback
get_from_user (raw): 'Go to the room in between the offices of Mallory Maroon and Peggy Parker'
get_from_user (processed): 'go to the room in between the offices of mallory maroon and peggy parker'
parse_and_ground_utterance: could not generate a parse for the utterance
say_to_user: Sorry, I didn't understand that.
say_to_user_with_referents: Where should I go? {'action': 'walk'}
get_from_user requested feedback
get_from_user (raw): 'Go to the room adjacent from the printer'
get_from_user (processed): 'go to the room adjacent from the printer'
parse_and_ground_utterance: could not generate a parse for the utterance
say_to_user_with_referents: You want me to go to <g>here</g> (not manipulate any objects)? {'action': 'walk', 'goal': '3512'}
get_from_user requested feedback
get_from_user (raw): 'On the other side'
get_from_user (processed): 'on the other side'
parse_and_ground_utterance: could not generate a parse for the utterance
say_to_user: I am expecting a simple 'yes' or 'no' response.
say_to_user_with_referents: You want me to go to <g>here</g> (not manipulate any objects)? {'action': 'walk', 'goal': '3512'}
get_from_user requested feedback
get_from_user (raw): 'no'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
say_to_user_with_referents: Where should I go? {'action': 'walk'}
get_from_user requested feedback
get_from_user (raw): 'Go to the room adjacent from the printer on the left side'
get_from_user (processed): 'go to the room adjacent from the printer on the left side'
parse_and_ground_utterance: could not generate a parse for the utterance
say_to_user: Sorry, I didn't understand that.
say_to_user_with_referents: Where should I go? {'action': 'walk'}
get_from_user requested feedback
get_from_user (raw): 'Go to the room adjacent from the printer on the left'
get_from_user (processed): 'go to the room adjacent from the printer on the left'
parse_and_ground_utterance: could not generate a parse for the utterance
say_to_user: Sorry, I didn't understand that.
say_to_user_with_referents: Where should I go? {'action': 'walk'}
get_from_user requested feedback
get_from_user (raw): 'Go to the pod room adjacent from the printer'
get_from_user (processed): 'go to the pod room adjacent from the printer'
parse_and_ground_utterance: parsed 'go to the pod room adjacent from the printer' to walk(a_l(lambda 1:l.(and(adjacent(1,a_l(lambda 2:l.(printer(2)))),pod(1)))))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	walk(3410) 0.5
	walk(3504) 0.5
say_to_user: I'm still learning the meanings of some words. I'm going to ask you a few questions about these nearby objects before we continue.
say_to_user_with_referents: Among these nearby objects, could you show me one you would use the word 'can' when describing, or shake your head if there are none? {}
get_oidx_from_user requested feedback
get_oidx_from_user: None
parse_and_ground_utterance: parsed 'go to the pod room adjacent from the printer' to walk(a_l(lambda 1:l.(and(adjacent(1,a_l(lambda 2:l.(printer(2)))),pod(1)))))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	walk(3410) 0.5
	walk(3504) 0.5
say_to_user_with_referents: Among these nearby objects, could you show me one you would use the word 'white' when describing, or shake your head if there are none? {}
get_oidx_from_user requested feedback
get_oidx_from_user: None
parse_and_ground_utterance: parsed 'go to the pod room adjacent from the printer' to walk(a_l(lambda 1:l.(and(adjacent(1,a_l(lambda 2:l.(printer(2)))),pod(1)))))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	walk(3410) 0.5
	walk(3504) 0.5
say_to_user_with_referents: Among these nearby objects, could you show me one you would use the word 'block' when describing, or shake your head if there are none? {}
get_oidx_from_user requested feedback
get_oidx_from_user: None
parse_and_ground_utterance: parsed 'go to the pod room adjacent from the printer' to walk(a_l(lambda 1:l.(and(adjacent(1,a_l(lambda 2:l.(printer(2)))),pod(1)))))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	walk(3410) 0.5
	walk(3504) 0.5
say_to_user_with_referents: Among these nearby objects, could you show me one you would use the word 'coffee' when describing, or shake your head if there are none? {}
get_oidx_from_user requested feedback
get_oidx_from_user: None
parse_and_ground_utterance: parsed 'go to the pod room adjacent from the printer' to walk(a_l(lambda 1:l.(and(adjacent(1,a_l(lambda 2:l.(printer(2)))),pod(1)))))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	walk(3410) 0.5
	walk(3504) 0.5
say_to_user_with_referents: Among these nearby objects, could you show me one you would use the word 'container' when describing, or shake your head if there are none? {}
get_oidx_from_user requested feedback
get_oidx_from_user: 2
parse_and_ground_utterance: parsed 'go to the pod room adjacent from the printer' to walk(a_l(lambda 1:l.(and(adjacent(1,a_l(lambda 2:l.(printer(2)))),pod(1)))))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	walk(3410) 0.5
	walk(3504) 0.5
say_to_user: Thanks. Now, back to business.
say_to_user_with_referents: You want me to go to <g>here</g> (not manipulate any objects)? {'action': 'walk', 'goal': '3504'}
get_from_user requested feedback
get_from_user (raw): 'yes'
get_from_user (processed): 'yes'
parse_and_ground_utterance: parsed 'yes' to yes
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	yes 1.0
perform_action: {'action': 'walk', 'recipient': None, 'patient': None, 'goal': '3504', 'source': None}
main: ... done; got action {'action': 'walk', 'recipient': None, 'patient': None, 'goal': '3504', 'source': None}
main: writing new information from dialog(s) to file...
main: ... done; wrote data d = [[{'action': 'walk', 'recipient': None, 'patient': None, 'goal': '3504', 'source': None}], [{'all': ['go to the room in between m and p'], 'patient': [], 'goal': ['go to the room in between the offices of mallory maroon and peggy parker', 'go to the room adjacent from the printer', 'go to the room adjacent from the printer on the left side', 'go to the room adjacent from the printer on the left', 'go to the pod room adjacent from the printer'], 'source': [], 'action': [], 'recipient': []}], [('can', 10, 0), ('can', 3, 0), ('can', 27, 0), ('can', 7, 0), ('can', 18, 0), ('can', 2, 0), ('can', 20, 0), ('can', 17, 0), ('white', 10, 0), ('white', 3, 0), ('white', 27, 0), ('white', 7, 0), ('white', 18, 0), ('white', 2, 0), ('white', 20, 0), ('white', 17, 0), ('block', 10, 0), ('block', 3, 0), ('block', 27, 0), ('block', 7, 0), ('block', 18, 0), ('block', 2, 0), ('block', 20, 0), ('block', 17, 0), ('coffee', 10, 0), ('coffee', 3, 0), ('coffee', 27, 0), ('coffee', 7, 0), ('coffee', 18, 0), ('coffee', 2, 0), ('coffee', 20, 0), ('coffee', 17, 0), ('container', 2, 1)], []]
main: running command dialog...
say_to_user_with_referents: What should I do? {}
get_from_user requested feedback
get_from_user (raw): 'give the can to Peggy Parker'
get_from_user (processed): 'give the can to peggy parker'
parse_and_ground_utterance: parsed 'give the can to peggy parker' to bring(a_i(lambda 1:i.(can(1))),p)
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	bring(oidx_6,p) 0.125
	bring(oidx_11,p) 0.125
	bring(oidx_12,p) 0.125
	bring(oidx_13,p) 0.125
	bring(oidx_22,p) 0.125
	bring(oidx_25,p) 0.125
	bring(oidx_26,p) 0.125
	bring(oidx_28,p) 0.125
say_to_user: I'm still learning the meanings of some words. I'm going to ask you a few questions about these nearby objects before we continue.
say_to_user_with_referents: Among these nearby objects, could you show me one you would use the word 'pringles' when describing, or shake your head if there are none? {}
get_oidx_from_user requested feedback
get_oidx_from_user: None
parse_and_ground_utterance: parsed 'give the can to peggy parker' to bring(a_i(lambda 1:i.(can(1))),p)
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	bring(oidx_6,p) 0.125
	bring(oidx_11,p) 0.125
	bring(oidx_12,p) 0.125
	bring(oidx_13,p) 0.125
	bring(oidx_22,p) 0.125
	bring(oidx_25,p) 0.125
	bring(oidx_26,p) 0.125
	bring(oidx_28,p) 0.125
say_to_user_with_referents: Among these nearby objects, could you show me one you would use the word 'styrofoam' when describing, or shake your head if there are none? {}
get_oidx_from_user requested feedback
get_oidx_from_user: 20
parse_and_ground_utterance: parsed 'give the can to peggy parker' to bring(a_i(lambda 1:i.(can(1))),p)
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	bring(oidx_6,p) 0.125
	bring(oidx_11,p) 0.125
	bring(oidx_12,p) 0.125
	bring(oidx_13,p) 0.125
	bring(oidx_22,p) 0.125
	bring(oidx_25,p) 0.125
	bring(oidx_26,p) 0.125
	bring(oidx_28,p) 0.125
say_to_user_with_referents: Among these nearby objects, could you show me one you could not use the word 'container' when describing, or shake your head if you could use 'container' when describing all of them? {}
get_oidx_from_user requested feedback
get_oidx_from_user: 27
parse_and_ground_utterance: parsed 'give the can to peggy parker' to bring(a_i(lambda 1:i.(can(1))),p)
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	bring(oidx_6,p) 0.125
	bring(oidx_11,p) 0.125
	bring(oidx_12,p) 0.125
	bring(oidx_13,p) 0.125
	bring(oidx_22,p) 0.125
	bring(oidx_25,p) 0.125
	bring(oidx_26,p) 0.125
	bring(oidx_28,p) 0.125
say_to_user_with_referents: Among these nearby objects, could you show me one you would use the word 'container' when describing, or shake your head if there are none? {}
get_oidx_from_user requested feedback
get_oidx_from_user: 2
parse_and_ground_utterance: parsed 'give the can to peggy parker' to bring(a_i(lambda 1:i.(can(1))),p)
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	bring(oidx_6,p) 0.125
	bring(oidx_11,p) 0.125
	bring(oidx_12,p) 0.125
	bring(oidx_13,p) 0.125
	bring(oidx_22,p) 0.125
	bring(oidx_25,p) 0.125
	bring(oidx_26,p) 0.125
	bring(oidx_28,p) 0.125
say_to_user_with_referents: Among these nearby objects, could you show me one you would use the word 'column' when describing, or shake your head if there are none? {}
get_oidx_from_user requested feedback
get_oidx_from_user: None
parse_and_ground_utterance: parsed 'give the can to peggy parker' to bring(a_i(lambda 1:i.(can(1))),p)
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	bring(oidx_6,p) 0.125
	bring(oidx_11,p) 0.125
	bring(oidx_12,p) 0.125
	bring(oidx_13,p) 0.125
	bring(oidx_22,p) 0.125
	bring(oidx_25,p) 0.125
	bring(oidx_26,p) 0.125
	bring(oidx_28,p) 0.125
say_to_user: Thanks. Now, back to business.
say_to_user_with_referents: You want me to deliver something for someone? {'action': 'bring'}
get_from_user requested feedback
get_from_user (raw): 'Give the soda can to Peggy Parker'
get_from_user (processed): 'give the soda can to peggy parker'
parse_and_ground_utterance: parsed 'give the soda can to peggy parker' to bring(a_i(lambda 1:i.(can(1))),p)
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	bring(oidx_6,p) 0.125
	bring(oidx_11,p) 0.125
	bring(oidx_12,p) 0.125
	bring(oidx_13,p) 0.125
	bring(oidx_22,p) 0.125
	bring(oidx_25,p) 0.125
	bring(oidx_26,p) 0.125
	bring(oidx_28,p) 0.125
say_to_user: I am expecting a simple 'yes' or 'no' response.
say_to_user_with_referents: You want me to deliver something for someone? {'action': 'bring'}
get_from_user requested feedback
get_from_user (raw): 'yes'
get_from_user (processed): 'yes'
parse_and_ground_utterance: parsed 'yes' to yes
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	yes 1.0
say_to_user_with_referents: What should I find to deliver? {'action': 'bring'}
get_from_user requested feedback
get_from_user (raw): 'Orange soda can'
get_from_user (processed): 'orange soda can'
say_to_user: I haven't heard the word 'orange' before. Does it refer to properties of things, like a color, shape, or weight?
get_from_user requested feedback
get_from_user (raw): 'yes'
get_from_user (processed): 'yes'
parse_and_ground_utterance: parsed 'yes' to yes
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	yes 1.0
say_to_user: Does 'orange' mean the same thing as 'white'?
get_from_user requested feedback
get_from_user (raw): 'no'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
say_to_user: Does 'orange' mean the same thing as 'yellow'?
get_from_user requested feedback
get_from_user (raw): 'no'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
say_to_user: Does 'orange' mean the same thing as 'blue'?
get_from_user requested feedback
get_from_user (raw): 'no'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
parse_and_ground_utterance: parsed 'orange soda can' to and(can,orange)
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	
say_to_user_with_referents: What should I deliver to <r>this person</r>? {'action': 'bring', 'recipient': 'p'}
get_from_user requested feedback
get_from_user (raw): 'soda can'
get_from_user (processed): 'soda can'
parse_and_ground_utterance: parsed 'soda can' to lambda 0:i.(and(spice(0),can(0)))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	True 0.0625
	False 0.0625
	True 0.0625
	False 0.0625
	True 0.0625
	False 0.0625
	True 0.0625
	False 0.0625
	True 0.0625
	False 0.0625
	True 0.0625
	False 0.0625
	True 0.0625
	False 0.0625
	True 0.0625
	False 0.0625
say_to_user_with_referents: What should I find to deliver? {'action': 'bring'}
get_from_user requested feedback
get_from_user (raw): 'soda can'
get_from_user (processed): 'soda can'
parse_and_ground_utterance: parsed 'soda can' to lambda 0:i.(and(peach(0),can(0)))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	True 0.0625
	False 0.0625
	True 0.0625
	False 0.0625
	True 0.0625
	False 0.0625
	True 0.0625
	False 0.0625
	True 0.0625
	False 0.0625
	True 0.0625
	False 0.0625
	True 0.0625
	False 0.0625
	True 0.0625
	False 0.0625
say_to_user_with_referents: You want me to deliver <p>this</p> to someone? {'action': 'bring', 'patient': 'oidx_22'}
get_from_user requested feedback
get_from_user (raw): 'no'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
say_to_user_with_referents: What should I find to deliver? {'action': 'bring'}
get_from_user requested feedback
get_from_user (raw): 'empty soda can'
get_from_user (processed): 'empty soda can'
parse_and_ground_utterance: parsed 'empty soda can' to lambda 0:i.(and(empty(0),can(0),yellow(0)))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	True 0.0625
	False 0.0625
	True 0.0625
	False 0.0625
	True 0.0625
	False 0.0625
	True 0.0625
	False 0.0625
	True 0.0625
	False 0.0625
	True 0.0625
	False 0.0625
	True 0.0625
	False 0.0625
	True 0.0625
	False 0.0625
say_to_user_with_referents: You want me to deliver something to <r>this person</r>? {'action': 'bring', 'recipient': 'm'}
get_from_user requested feedback
get_from_user (raw): 'no'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
say_to_user_with_referents: What should I find to deliver? {'action': 'bring'}
get_from_user requested feedback
get_from_user (raw): 'open soda can'
get_from_user (processed): 'open soda can'
say_to_user: I haven't heard the word 'open' before. Does it refer to properties of things, like a color, shape, or weight?
get_from_user requested feedback
get_from_user (raw): 'no'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
parse_and_ground_utterance: parsed 'open soda can' to lambda 0:i.(and(can(0),pringles(0),bean(0)))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	True 0.0625
	False 0.0625
	True 0.0625
	False 0.0625
	True 0.0625
	False 0.0625
	True 0.0625
	False 0.0625
	True 0.0625
	False 0.0625
	True 0.0625
	False 0.0625
	True 0.0625
	False 0.0625
	True 0.0625
	False 0.0625
say_to_user_with_referents: You want me to deliver something to <r>this person</r>? {'action': 'bring', 'recipient': 'h'}
get_from_user requested feedback
get_from_user (raw): 'no'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
say_to_user_with_referents: What should I find to deliver? {'action': 'bring'}
get_from_user requested feedback
get_from_user (raw): 'can'
get_from_user (processed): 'can'
parse_and_ground_utterance: parsed 'can' to can
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	can 1.0
say_to_user_with_referents: Who should receive what I deliver? {'action': 'bring'}
get_from_user requested feedback
get_from_user (raw): 'Peggy Parker'
get_from_user (processed): 'peggy parker'
parse_and_ground_utterance: parsed 'peggy parker' to p
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	p 1.0
say_to_user_with_referents: What should I deliver to <r>this person</r>? {'action': 'bring', 'recipient': 'p'}
get_from_user requested feedback
get_from_user (raw): 'soda can'
get_from_user (processed): 'soda can'
parse_and_ground_utterance: parsed 'soda can' to lambda 0:i.(and(can(0),coffee(0)))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	True 0.0625
	False 0.0625
	True 0.0625
	False 0.0625
	True 0.0625
	False 0.0625
	True 0.0625
	False 0.0625
	True 0.0625
	False 0.0625
	True 0.0625
	False 0.0625
	True 0.0625
	False 0.0625
	True 0.0625
	False 0.0625
say_to_user_with_referents: What should I find to deliver? {'action': 'bring'}
get_from_user requested feedback
get_from_user (raw): 'can on the desk'
get_from_user (processed): 'can on the desk'
parse_and_ground_utterance: parsed 'can on the desk' to lambda 1:l.(lambda 2:<l,t>.(lambda 3:<l,t>.(and(lambda 2:<l,t>.(lambda 3:<l,t>.(and(2(1),3(1)))),lambda 2:<l,t>.(lambda 3:<l,t>.(and(2(1),3(1))))))))
parse_and_ground_utterance: grounding timeout for lambda 1:l.(lambda 2:<l,t>.(lambda 3:<l,t>.(and(lambda 2:<l,t>.(lambda 3:<l,t>.(and(2(1),3(1)))),lambda 2:<l,t>.(lambda 3:<l,t>.(and(2(1),3(1))))))))
say_to_user_with_referents: You want me to deliver something to <r>this person</r>? {'action': 'bring', 'recipient': 'r'}
get_from_user requested feedback
get_from_user (raw): 'no'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
say_to_user_with_referents: What should I deliver to <r>this person</r>? {'action': 'bring', 'recipient': 'p'}
get_from_user requested feedback
get_from_user (raw): 'the opened can on the desk'
get_from_user (processed): 'the opened can on the desk'
parse_and_ground_utterance: could not generate a parse for the utterance
say_to_user_with_referents: What should I find to deliver? {'action': 'bring'}
get_from_user requested feedback
get_from_user (raw): 'the orange can'
get_from_user (processed): 'the orange can'
parse_and_ground_utterance: parsed 'the orange can' to a_i(lambda 1:i.(and(can(1),orange(1))))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	oidx_6 0.125
	oidx_11 0.125
	oidx_12 0.125
	oidx_13 0.125
	oidx_22 0.125
	oidx_25 0.125
	oidx_26 0.125
	oidx_28 0.125
say_to_user_with_referents: What should I deliver to <r>this person</r>? {'action': 'bring', 'recipient': 'p'}
get_from_user requested feedback
get_from_user (raw): 'soda'
get_from_user (processed): 'soda'
parse_and_ground_utterance: parsed 'soda' to south
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	south 1.0
say_to_user_with_referents: You want me to deliver <p>this</p> to <r>this person</r>? {'action': 'bring', 'recipient': 'p', 'patient': 'oidx_11'}
get_from_user requested feedback
get_from_user (raw): 'no'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
say_to_user_with_referents: What should I find to deliver? {'action': 'bring'}
get_from_user requested feedback
get_from_user (raw): 'soda'
get_from_user (processed): 'soda'
parse_and_ground_utterance: parsed 'soda' to south
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	south 1.0
say_to_user_with_referents: You want me to deliver something to <r>this person</r>? {'action': 'bring', 'recipient': 'w'}
get_from_user requested feedback
get_from_user (raw): 'no'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
say_to_user_with_referents: What should I find to deliver? {'action': 'bring'}
get_from_user requested feedback
get_from_user (raw): 'soda'
get_from_user (processed): 'soda'
parse_and_ground_utterance: parsed 'soda' to south
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	south 1.0
say_to_user_with_referents: You want me to deliver <p>this</p> to someone? {'action': 'bring', 'patient': 'oidx_12'}
get_from_user requested feedback
get_from_user (raw): 'no'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
say_to_user_with_referents: What should I find to deliver? {'action': 'bring'}
get_from_user requested feedback
get_from_user (raw): 'the can'
get_from_user (processed): 'the can'
parse_and_ground_utterance: parsed 'the can' to a_i(lambda 1:i.(can(1)))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	oidx_6 0.125
	oidx_11 0.125
	oidx_12 0.125
	oidx_13 0.125
	oidx_22 0.125
	oidx_25 0.125
	oidx_26 0.125
	oidx_28 0.125
say_to_user_with_referents: You want me to deliver <p>this</p> to someone? {'action': 'bring', 'patient': 'oidx_28'}
get_from_user requested feedback
get_from_user (raw): 'no'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
say_to_user_with_referents: You want me to deliver <p>this</p> to someone? {'action': 'bring', 'patient': 'oidx_26'}
get_from_user requested feedback
get_from_user (raw): 'yes'
get_from_user (processed): 'yes'
parse_and_ground_utterance: parsed 'yes' to yes
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	yes 1.0
say_to_user_with_referents: To whom should I deliver <p>this</p>? {'action': 'bring', 'patient': 'oidx_26'}
get_from_user requested feedback
get_from_user (raw): 'Peggy Parker'
get_from_user (processed): 'peggy parker'
parse_and_ground_utterance: parsed 'peggy parker' to p
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	p 1.0
say_to_user_with_referents: You want me to deliver <p>this</p> to <r>this person</r>? {'action': 'bring', 'recipient': 'p', 'patient': 'oidx_26'}
get_from_user requested feedback
get_from_user (raw): 'yes'
get_from_user (processed): 'yes'
parse_and_ground_utterance: parsed 'yes' to yes
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	yes 1.0
perform_action: {'action': 'bring', 'recipient': 'p', 'patient': 'oidx_26', 'goal': None, 'source': None}
main: ... done; got action {'action': 'bring', 'recipient': 'p', 'patient': 'oidx_26', 'goal': None, 'source': None}
main: writing new information from dialog(s) to file...
main: ... done; wrote data d = [[{'action': 'walk', 'recipient': None, 'patient': None, 'goal': '3504', 'source': None}, {'action': 'bring', 'recipient': 'p', 'patient': 'oidx_26', 'goal': None, 'source': None}], [{'all': ['go to the room in between m and p'], 'patient': [], 'goal': ['go to the room in between the offices of mallory maroon and peggy parker', 'go to the room adjacent from the printer', 'go to the room adjacent from the printer on the left side', 'go to the room adjacent from the printer on the left', 'go to the pod room adjacent from the printer'], 'source': [], 'action': [], 'recipient': []}, {'all': ['give the can to peggy parker'], 'patient': ['orange soda can', 'soda can', 'soda can', 'empty soda can', 'open soda can', 'can', 'soda can', 'can on the desk', 'the opened can on the desk', 'the orange can', 'soda', 'soda', 'soda', 'the can'], 'goal': [], 'source': [], 'action': [], 'recipient': ['peggy parker', 'peggy parker']}], [('can', 10, 0), ('can', 3, 0), ('can', 27, 0), ('can', 7, 0), ('can', 18, 0), ('can', 2, 0), ('can', 20, 0), ('can', 17, 0), ('white', 10, 0), ('white', 3, 0), ('white', 27, 0), ('white', 7, 0), ('white', 18, 0), ('white', 2, 0), ('white', 20, 0), ('white', 17, 0), ('block', 10, 0), ('block', 3, 0), ('block', 27, 0), ('block', 7, 0), ('block', 18, 0), ('block', 2, 0), ('block', 20, 0), ('block', 17, 0), ('coffee', 10, 0), ('coffee', 3, 0), ('coffee', 27, 0), ('coffee', 7, 0), ('coffee', 18, 0), ('coffee', 2, 0), ('coffee', 20, 0), ('coffee', 17, 0), ('container', 2, 1), ('pringles', 10, 0), ('pringles', 3, 0), ('pringles', 27, 0), ('pringles', 7, 0), ('pringles', 18, 0), ('pringles', 2, 0), ('pringles', 20, 0), ('pringles', 17, 0), ('styrofoam', 20, 1), ('container', 27, 0), ('container', 2, 1), ('column', 10, 0), ('column', 3, 0), ('column', 27, 0), ('column', 7, 0), ('column', 18, 0), ('column', 2, 0), ('column', 20, 0), ('column', 17, 0)], [('orange', 'white', False), ('orange', 'yellow', False), ('orange', 'blue', False)]]
main: running command dialog...
say_to_user_with_referents: What should I do? {}
get_from_user requested feedback
get_from_user (raw): 'take the bottle of nuts in the office next to the conference room to the biggest lab room'
get_from_user (processed): 'take the bottle of nuts in the office next to the conference room to the biggest lab room'
say_to_user: I haven't heard the word 'bottle' before. Does it refer to properties of things, like a color, shape, or weight?
get_from_user requested feedback
get_from_user (raw): 'yes'
get_from_user (processed): 'yes'
parse_and_ground_utterance: parsed 'yes' to yes
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	yes 1.0
say_to_user: Does 'bottle' mean the same thing as 'coffee'?
get_from_user requested feedback
get_from_user (raw): 'no'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
say_to_user: Does 'bottle' mean the same thing as 'container'?
get_from_user requested feedback
get_from_user (raw): 'yes'
get_from_user (processed): 'yes'
parse_and_ground_utterance: parsed 'yes' to yes
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	yes 1.0
say_to_user: I haven't heard the word 'nuts' before. Does it refer to properties of things, like a color, shape, or weight?
get_from_user requested feedback
get_from_user (raw): 'no'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
parse_and_ground_utterance: could not generate a parse for the utterance
say_to_user_with_referents: You want me to go somewhere? (not manipulate any objects) {'action': 'walk'}
get_from_user requested feedback
get_from_user (raw): 'no'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
say_to_user_with_referents: You want me to move an item from somewhere to somewhere (not give it to someone)? {'action': 'move'}
get_from_user requested feedback
get_from_user (raw): 'yes'
get_from_user (processed): 'yes'
parse_and_ground_utterance: parsed 'yes' to yes
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	yes 1.0
say_to_user_with_referents: Where should I move something from on its way somewhere else? {'action': 'move'}
get_from_user requested feedback
get_from_user (raw): 'take the plastic container in the office next to the conference room to the biggest lab room'
get_from_user (processed): 'take the plastic container in the office next to the conference room to the biggest lab room'
say_to_user: I haven't heard the word 'plastic' before. Does it refer to properties of things, like a color, shape, or weight?
get_from_user requested feedback
get_from_user (raw): 'yes'
get_from_user (processed): 'yes'
parse_and_ground_utterance: parsed 'yes' to yes
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	yes 1.0
say_to_user: Does 'plastic' mean the same thing as 'm'?
get_from_user requested feedback
get_from_user (raw): 'no'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
say_to_user: Does 'plastic' mean the same thing as 'container'?
get_from_user requested feedback
get_from_user (raw): 'no'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
say_to_user: Does 'plastic' mean the same thing as 'metallic'?
get_from_user requested feedback
get_from_user (raw): 'no'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
parse_and_ground_utterance: could not generate a parse for the utterance
say_to_user_with_referents: You want me to move <p>this</p> from somewhere to somewhere (not give it to someone)? {'action': 'move', 'patient': 'oidx_11'}
get_from_user requested feedback
get_from_user (raw): 'no'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
say_to_user_with_referents: Where should I move something from on its way somewhere else? {'action': 'move'}
get_from_user requested feedback
get_from_user (raw): 'take the plastic container in the office next to the conference room to the biggest lab room'
get_from_user (processed): 'take the plastic container in the office next to the conference room to the biggest lab room'
parse_and_ground_utterance: could not generate a parse for the utterance
say_to_user_with_referents: I should move something from <s>here</s> somewhere else? {'action': 'move', 'source': '3404'}
get_from_user requested feedback
get_from_user (raw): 'no'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
say_to_user_with_referents: To where should I move something from somewhere? {'action': 'move'}
get_from_user requested feedback
get_from_user (raw): 'take the container in the office next to the conference room to the biggest lab room'
get_from_user (processed): 'take the container in the office next to the conference room to the biggest lab room'
parse_and_ground_utterance: could not generate a parse for the utterance
say_to_user_with_referents: I should move something from somewhere to <g>there</g>? {'action': 'move', 'goal': '3410'}
get_from_user requested feedback
get_from_user (raw): 'no'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
say_to_user_with_referents: To where should I move something from somewhere? {'action': 'move'}
get_from_user requested feedback
get_from_user (raw): 'take the container in the office next to the conference room to the biggest lab room'
get_from_user (processed): 'take the container in the office next to the conference room to the biggest lab room'
parse_and_ground_utterance: could not generate a parse for the utterance
say_to_user_with_referents: I should move something from somewhere to <g>there</g>? {'action': 'move', 'goal': '3520'}
get_from_user requested feedback
get_from_user (raw): 'no'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
say_to_user_with_referents: Where should I move something from on its way somewhere else? {'action': 'move'}
get_from_user requested feedback
get_from_user (raw): 'take the container from the top middle office room next to conference room to the middle end lab room'
get_from_user (processed): 'take the container from the top middle office room next to conference room to the middle end lab room'
say_to_user: I haven't heard the word 'end' before. Does it refer to properties of things, like a color, shape, or weight?
get_from_user requested feedback
get_from_user (raw): 'no'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
parse_and_ground_utterance: could not generate a parse for the utterance
say_to_user_with_referents: I should move something from <s>here</s> somewhere else? {'action': 'move', 'source': '3414b'}
get_from_user requested feedback
get_from_user (raw): 'no'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
say_to_user_with_referents: Where should I move something from on its way somewhere else? {'action': 'move'}
get_from_user requested feedback
get_from_user (raw): 'move the container from the top middle office room that is next to the conference room to the largest lab in the middle'
get_from_user (processed): 'move the container from the top middle office room that is next to the conference room to the largest lab in the middle'
say_to_user: I haven't heard the word 'is' before. Does it refer to