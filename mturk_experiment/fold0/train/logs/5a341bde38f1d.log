No handlers could be found for logger "gensim.models.doc2vec"
main: loading grounder from file...
main: ... done
main: instantiating IO...
main: ... done
main: instantiating Agent...
main: ... done
main: running command dialog...
say_to_user_with_referents: What should I do? {}
get_from_user requested feedback
get_from_user (raw): 'Go to Dr. Hughes' office.'
get_from_user (processed): 'go to dr hughes 's office'
parse_and_ground_utterance: parsed 'go to dr hughes 's office' to walk(a_l(lambda 1:l.(and(possesses(m,1),office(1)))))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	walk(3502) 1.0
say_to_user: I'm still learning the meanings of some words. I'm going to ask you a few questions about these nearby objects before we continue.
say_to_user_with_referents: Among these nearby objects, could you show me one you would use the word 'column' when describing, or shake your head if there are none? {}
get_oidx_from_user requested feedback
get_oidx_from_user: 3
parse_and_ground_utterance: parsed 'go to dr hughes 's office' to walk(a_l(lambda 1:l.(and(possesses(r,1),office(1)))))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	walk(3512) 1.0
say_to_user_with_referents: Among these nearby objects, could you show me one you would use the word 'rectangle' when describing, or shake your head if there are none? {}
get_oidx_from_user requested feedback
get_oidx_from_user: None
parse_and_ground_utterance: parsed 'go to dr hughes 's office' to walk(a_l(lambda 1:l.(and(possesses(d,1),office(1)))))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	walk(3420) 1.0
say_to_user_with_referents: Among these nearby objects, could you show me one you would use the word 'spices' when describing, or shake your head if there are none? {}
get_oidx_from_user requested feedback
get_oidx_from_user: None
parse_and_ground_utterance: parsed 'go to dr hughes 's office' to walk(a_l(lambda 1:l.(and(possesses(n,1),office(1)))))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	walk(3404) 1.0
say_to_user_with_referents: Among these nearby objects, could you show me one you would use the word 'styrofoam' when describing, or shake your head if there are none? {}
get_oidx_from_user requested feedback
get_oidx_from_user: 20
parse_and_ground_utterance: parsed 'go to dr hughes 's office' to walk(a_l(lambda 1:l.(and(possesses(m,1),office(1)))))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	walk(3502) 1.0
say_to_user_with_referents: Among these nearby objects, could you show me one you would use the word 'coffee' when describing, or shake your head if there are none? {}
get_oidx_from_user requested feedback
get_oidx_from_user: None
parse_and_ground_utterance: parsed 'go to dr hughes 's office' to walk(a_l(lambda 1:l.(and(possesses(d,1),office(1)))))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	walk(3420) 1.0
say_to_user: Thanks. Now, back to business.
say_to_user_with_referents: You want me to go to <g>here</g> (not manipulate any objects)? {'action': 'walk', 'goal': '3502'}
get_from_user requested feedback
get_from_user (raw): 'No I do not.'
get_from_user (processed): 'no i do not'
parse_and_ground_utterance: parsed 'no i do not' to and(yes,no,no,no)
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	
say_to_user: I am expecting a simple 'yes' or 'no' response.
say_to_user_with_referents: You want me to go to <g>here</g> (not manipulate any objects)? {'action': 'walk', 'goal': '3502'}
get_from_user requested feedback
get_from_user (raw): 'No.'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
say_to_user_with_referents: You want me to go somewhere? (not manipulate any objects) {'action': 'walk'}
get_from_user requested feedback
get_from_user (raw): 'Yes.'
get_from_user (processed): 'yes'
parse_and_ground_utterance: parsed 'yes' to yes
parse_and_ground_utterance: resulting groundings with normaliz