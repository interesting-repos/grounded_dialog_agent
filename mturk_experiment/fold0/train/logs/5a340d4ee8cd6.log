No handlers could be found for logger "gensim.models.doc2vec"
main: loading grounder from file...
main: ... done
main: instantiating IO...
main: ... done
main: instantiating Agent...
main: ... done
main: running command dialog...
say_to_user_with_referents: What should I do? {}
get_from_user requested feedback
get_from_user (raw): 'Go to the office on the right of David.'
get_from_user (processed): 'go to the office on the right of david'
parse_and_ground_utterance: parsed 'go to the office on the right of david' to walk(and(a_l(lambda 1:l.(office(1))),a_l(lambda 1:l.(and(possesses(d,1),east(1))))))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	
say_to_user_with_referents: You want me to go somewhere? (not manipulate any objects) {'action': 'walk'}
get_from_user requested feedback
get_from_user (raw): 'Yes, the office on the right of David's office.'
get_from_user (processed): 'yes the office on the right of david 's office'
parse_and_ground_utterance: could not generate a parse for the utterance
say_to_user: I am expecting a simple 'yes' or 'no' response.
say_to_user_with_referents: You want me to go somewhere? (not manipulate any objects) {'action': 'walk'}
get_from_user requested feedback
get_from_user (raw): 'Yes'
get_from_user (processed): 'yes'
parse_and_ground_utterance: parsed 'yes' to yes
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	yes 1.0
say_to_user_with_referents: Where should I go? {'action': 'walk'}
get_from_user requested feedback
get_from_user (raw): 'The office to the right of David's office'
get_from_user (processed): 'the office to the right of david 's office'
parse_and_ground_utterance: parsed 'the office to the right of david 's office' to and(a_l(lambda 1:l.(east(1))),a_l(lambda 1:l.(and(possesses(d,1),office(1)))))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	
say_to_user: Sorry, I didn't understand that.
say_to_user_with_referents: Where should I go? {'action': 'walk'}
get_from_user requested feedback
get_from_user (raw): 'go to david's office'
get_from_user (processed): 'go to david 's office'
parse_and_ground_utterance: parsed 'go to david 's office' to walk(a_l(lambda 1:l.(and(possesses(d,1),office(1)))))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	walk(3420) 1.0
say_to_user: I'm still learning the meanings of some words. I'm going to ask you a few questions about these nearby objects before we continue.
say_to_user_with_referents: Among these nearby objects, could you show me one you would use the word 'cylinder' when describing, or shake your head if there are none? {}
get_oidx_from_user requested feedback
get_oidx_from_user: 2
parse_and_ground_utterance: parsed 'go to david 's office' to walk(a_l(lambda 1:l.(and(possesses(d,1),office(1)))))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	walk(3420) 1.0
say_to_user_with_referents: Among these nearby objects, could you show me one you would use the word 'beans' when describing, or shake your head if there are none? {}
get_oidx_from_user requested feedback
get_oidx_from_user: None
parse_and_ground_utterance: parsed 'go to david 's office' to walk(a_l(lambda 1:l.(and(possesses(d,1),office(1)))))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	walk(3420) 1.0
say_to_user_with_referents: Among these nearby objects, could you show me one you would use the word 'rectangle' when describing, or shake your head if there are none? {}
get_oidx_from_user requested feedback
get_oidx_from_user: None
parse_and_ground_utterance: parsed 'go to david 's office' to walk(a_l(lambda 1:l.(and(possesses(d,1),office(1)))))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	walk(3420) 1.0
say_to_user_with_referents: Among these nearby objects, could you show me one you would use the word 'long' when describing, or shake your head if there are none? {}
get_oidx_from_user requested feedback
get_oidx_from_user: 20
parse_and_ground_utterance: parsed 'go to david 's office' to walk(a_l(lambda 1:l.(and(possesses(d,1),office(1)))))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	walk(3420) 1.0
say_to_user_with_referents: Among these nearby objects, could you show me one you would use the word 'spices' when describing, or shake your head if there are none? {}
get_oidx_from_user requested feedback
get_oidx_from_user: None
parse_and_ground_utterance: parsed 'go to david 's office' to walk(a_l(lambda 1:l.(and(possesses(d,1),office(1)))))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	walk(3420) 1.0
say_to_user: Thanks. Now, back to business.
say_to_user_with_referents: You want me to go to <g>here</g> (not manipulate any objects)? {'action': 'walk', 'goal': '3420'}
get_from_user requested feedback
get_from_user (raw): 'Yes'
get_from_user (processed): 'yes'
parse_and_ground_utterance: parsed 'yes' to yes
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	yes 1.0
perform_action: {'action': 'walk', 'recipient': None, 'patient': None, 'goal': '3420', 'source': None}
main: ... done; got action {'action': 'walk', 'recipient': None, 'patient': None, 'goal': '3420', 'source': None}
main: writing new information from dialog(s) to file...
main: ... done; wrote data d = [[{'action': 'walk', 'recipient': None, 'patient': None, 'goal': '3420', 'source': None}], [{'all': ['go to the office on the right of david'], 'patient': [], 'goal': ["the office to the right of david 's office", "go to david 's office"], 'source': [], 'action': [], 'recipient': []}], [('cylinder', 2, 1), ('bean', 10, 0), ('bean', 3, 0), ('bean', 27, 0), ('bean', 7, 0), ('bean', 18, 0), ('bean', 2, 0), ('bean', 20, 0), ('bean', 17, 0), ('rectangle', 10, 0), ('rectangle', 3, 0), ('rectangle', 27, 0), ('rectangle', 7, 0), ('rectangle', 18, 0), ('rectangle', 2, 0), ('rectangle', 20, 0), ('rectangle', 17, 0), ('long', 20, 1), ('spice', 10, 0), ('spice', 3, 0), ('spice', 27, 0), ('spice', 7, 0), ('spice', 18, 0), ('spice', 2, 0), ('spice', 20, 0), ('spice', 17, 0)], []]
main: running command dialog...
say_to_user_with_referents: What should I do? {}
get_from_user requested feedback
get_from_user (raw): 'Bring the cylinder Mallory'
get_from_user (processed): 'bring the cylinder mallory'
parse_and_ground_utterance: parsed 'bring the cylinder mallory' to lambda 1:i.(bring(1,m))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	bring(oidx_6,m) 0.125
	bring(oidx_11,m) 0.125
	bring(oidx_12,m) 0.125
	bring(oidx_13,m) 0.125
	bring(oidx_22,m) 0.125
	bring(oidx_25,m) 0.125
	bring(oidx_26,m) 0.125
	bring(oidx_28,m) 0.125
say_to_user: I'm still learning the meanings of some words. I'm going to ask you a few questions about these nearby objects before we continue.
say_to_user_with_referents: Among these nearby objects, could you show me one you would use the word 'pringles' when describing, or shake your head if there are none? {}
get_oidx_from_user requested feedback
get_oidx_from_user: None
parse_and_ground_utterance: parsed 'bring the cylinder mallory' to lambda 1:i.(bring(1,m))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	bring(oidx_6,m) 0.125
	bring(oidx_11,m) 0.125
	bring(oidx_12,m) 0.125
	bring(oidx_13,m) 0.125
	bring(oidx_22,m) 0.125
	bring(oidx_25,m) 0.125
	bring(oidx_26,m) 0.125
	bring(oidx_28,m) 0.125
say_to_user_with_referents: Among these nearby objects, could you show me one you would use the word 'yellow' when describing, or shake your head if there are none? {}
get_oidx_from_user requested feedback
get_oidx_from_user: None
parse_and_ground_utterance: parsed 'bring the cylinder mallory' to lambda 1:i.(bring(1,m))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	bring(oidx_6,m) 0.125
	bring(oidx_11,m) 0.125
	bring(oidx_12,m) 0.125
	bring(oidx_13,m) 0.125
	bring(oidx_22,m) 0.125
	bring(oidx_25,m) 0.125
	bring(oidx_26,m) 0.125
	bring(oidx_28,m) 0.125
say_to_user_with_referents: Among these nearby objects, could you show me one you would use the word 'tower' when describing, or shake your head if there are none? {}
get_oidx_from_user requested feedback
get_oidx_from_user: None
parse_and_ground_utterance: parsed 'bring the cylinder mallory' to lambda 1:i.(bring(1,m))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	bring(oidx_6,m) 0.125
	bring(oidx_11,m) 0.125
	bring(oidx_12,m) 0.125
	bring(oidx_13,m) 0.125
	bring(oidx_22,m) 0.125
	bring(oidx_25,m) 0.125
	bring(oidx_26,m) 0.125
	bring(oidx_28,m) 0.125
say_to_user_with_referents: Among these nearby objects, could you show me one you would use the word 'blue' when describing, or shake your head if there are none? {}
get_oidx_from_user requested feedback
get_oidx_from_user: 18
parse_and_ground_utterance: parsed 'bring the cylinder mallory' to lambda 1:i.(bring(1,m))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	bring(oidx_6,m) 0.125
	bring(oidx_11,m) 0.125
	bring(oidx_12,m) 0.125
	bring(oidx_13,m) 0.125
	bring(oidx_22,m) 0.125
	bring(oidx_25,m) 0.125
	bring(oidx_26,m) 0.125
	bring(oidx_28,m) 0.125
say_to_user_with_referents: Among these nearby objects, could you show me one you would use the word 'clear' when describing, or shake your head if there are none? {}
get_oidx_from_user requested feedback
get_oidx_from_user: None
parse_and_ground_utterance: parsed 'bring the cylinder mallory' to lambda 1:i.(bring(1,m))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	bring(oidx_6,m) 0.125
	bring(oidx_11,m) 0.125
	bring(oidx_12,m) 0.125
	bring(oidx_13,m) 0.125
	bring(oidx_22,m) 0.125
	bring(oidx_25,m) 0.125
	bring(oidx_26,m) 0.125
	bring(oidx_28,m) 0.125
say_to_user: Thanks. Now, back to business.
say_to_user_with_referents: You want me to deliver something for someone? {'action': 'bring'}
get_from_user requested feedback
get_from_user (raw): 'Deliver the nuts to Mallory'
get_from_user (processed): 'deliver the nuts to mallory'
parse_and_ground_utterance: parsed 'deliver the nuts to mallory' to lambda 1:i.(bring(1,m))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	bring(oidx_6,m) 0.125
	bring(oidx_11,m) 0.125
	bring(oidx_12,m) 0.125
	bring(oidx_13,m) 0.125
	bring(oidx_22,m) 0.125
	bring(oidx_25,m) 0.125
	bring(oidx_26,m) 0.125
	bring(oidx_28,m) 0.125
say_to_user: I am expecting a simple 'yes' or 'no' response.
say_to_user_with_referents: You want me to deliver something for someone? {'action': 'bring'}
get_from_user requested feedback
get_from_user (raw): 'es'
get_from_user (processed): 'es'
parse_and_ground_utterance: parsed 'es' to south
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	south 1.0
say_to_user: I am expecting a simple 'yes' or 'no' response.
say_to_user_with_referents: You want me to deliver something for someone? {'action': 'bring'}
get_from_user requested feedback
get_from_user (raw): 'Yes'
get_from_user (processed): 'yes'
parse_and_ground_utterance: parsed 'yes' to yes
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	yes 1.0
say_to_user_with_referents: What should I deliver to <r>this person</r>? {'action': 'bring', 'recipient': 'm'}
get_from_user requested feedback
get_from_user (raw): 'The peanuts'
get_from_user (processed): 'the peanuts'
say_to_user: I haven't heard the word 'peanuts' before. Does it refer to properties of things, like a color, shape, or weight?
get_from_user requested feedback
get_from_user (raw): 'The cylinder'
get_from_user (processed): 'the cylinder'
parse_and_ground_utterance: parsed 'the cylinder' to a_i(lambda 1:i.(cylinder(1)))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	oidx_6 0.125
	oidx_11 0.125
	oidx_12 0.125
	oidx_13 0.125
	oidx_22 0.125
	oidx_25 0.125
	oidx_26 0.125
	oidx_28 0.125
say_to_user: I am expecting a simple 'yes' or 'no' response.
say_to_user: I haven't heard the word 'peanuts' before. Does it refer to properties of things, like a color, shape, or weight?
get_from_user requested feedback
get_from_user (raw): 'Yes'
get_from_user (processed): 'yes'
parse_and_ground_utterance: parsed 'yes' to yes
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	yes 1.0
say_to_user: Does 'peanuts' mean the same thing as 'bean'?
get_from_user requested feedback
get_from_user (raw): 'No'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
say_to_user: Does 'peanuts' mean the same thing as 'peaches'?
get_from_user requested feedback
get_from_user (raw): 'No'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
say_to_user: Does 'peanuts' mean the same thing as 'beans'?
get_from_user requested feedback
get_from_user (raw): 'No.'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
parse_and_ground_utterance: parsed 'the peanuts' to a_i(lambda 1:i.(peanuts(1)))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	oidx_6 0.125
	oidx_11 0.125
	oidx_12 0.125
	oidx_13 0.125
	oidx_22 0.125
	oidx_25 0.125
	oidx_26 0.125
	oidx_28 0.125
say_to_user_with_referents: You want me to deliver <p>this</p> to someone? {'action': 'bring', 'patient': 'oidx_13'}
get_from_user requested feedback
get_from_user (raw): 'No.'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
say_to_user_with_referents: What should I find to deliver? {'action': 'bring'}
get_from_user requested feedback
get_from_user (raw): 'the clear cylinder'
get_from_user (processed): 'the clear cylinder'
parse_and_ground_utterance: parsed 'the clear cylinder' to and(a_i(lambda 1:i.(clear(1))),a_i(lambda 0:i.(cylinder(0))))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	oidx_6 0.125
	oidx_11 0.125
	oidx_12 0.125
	oidx_13 0.125
	oidx_22 0.125
	oidx_25 0.125
	oidx_26 0.125
	oidx_28 0.125
say_to_user_with_referents: You want me to deliver <p>this</p> to someone? {'action': 'bring', 'patient': 'oidx_28'}
get_from_user requested feedback
get_from_user (raw): 'No'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
say_to_user_with_referents: You want me to deliver <p>this</p> to someone? {'action': 'bring', 'patient': 'oidx_26'}
get_from_user requested feedback
get_from_user (raw): 'NO'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
say_to_user_with_referents: You want me to deliver <p>this</p> to someone? {'action': 'bring', 'patient': 'oidx_25'}
get_from_user requested feedback
get_from_user (raw): 'No.'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
say_to_user_with_referents: You want me to deliver <p>this</p> to <r>this person</r>? {'action': 'bring', 'recipient': 'm', 'patient': 'oidx_22'}
get_from_user requested feedback
get_from_user (raw): 'YES'
get_from_user (processed): 'yes'
parse_and_ground_utterance: parsed 'yes' to yes
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	yes 1.0
perform_action: {'action': 'bring', 'recipient': 'm', 'patient': 'oidx_22', 'goal': None, 'source': None}
main: ... done; got action {'action': 'bring', 'recipient': 'm', 'patient': 'oidx_22', 'goal': None, 'source': None}
main: writing new information from dialog(s) to file...
main: ... done; wrote data d = [[{'action': 'walk', 'recipient': None, 'patient': None, 'goal': '3420', 'source': None}, {'action': 'bring', 'recipient': 'm', 'patient': 'oidx_22', 'goal': None, 'source': None}], [{'all': ['go to the office on the right of david'], 'patient': [], 'goal': ["the office to the right of david