No handlers could be found for logger "gensim.models.doc2vec"
main: loading grounder from file...
main: ... done
main: instantiating IO...
main: ... done
main: instantiating Agent...
main: ... done
main: running command dialog...
say_to_user_with_referents: What should I do? {}
get_from_user requested feedback
get_from_user (raw): 'Go to Secretary office'
get_from_user (processed): 'go to secretary office'
parse_and_ground_utterance: parsed 'go to secretary office' to walk(and(a_l(lambda 1:l.(office(1))),a_l(lambda 1:l.(office(1)))))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	walk(3402) 0.0909090909091
	walk(3404) 0.0909090909091
	walk(3418) 0.0909090909091
	walk(3420) 0.0909090909091
	walk(3422) 0.0909090909091
	walk(3430) 0.0909090909091
	walk(3432) 0.0909090909091
	walk(3502) 0.0909090909091
	walk(3508) 0.0909090909091
	walk(3510) 0.0909090909091
	walk(3512) 0.0909090909091
say_to_user: I'm still learning the meanings of some words. I'm going to ask you a few questions about these nearby objects before we continue.
say_to_user_with_referents: Among these nearby objects, could you show me one you would use the word 'beans' when describing, or shake your head if there are none? {}
get_oidx_from_user requested feedback
get_oidx_from_user: None
parse_and_ground_utterance: parsed 'go to secretary office' to walk(and(a_l(lambda 1:l.(office(1))),a_l(lambda 1:l.(office(1)))))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	walk(3402) 0.0909090909091
	walk(3404) 0.0909090909091
	walk(3418) 0.0909090909091
	walk(3420) 0.0909090909091
	walk(3422) 0.0909090909091
	walk(3430) 0.0909090909091
	walk(3432) 0.0909090909091
	walk(3502) 0.0909090909091
	walk(3508) 0.0909090909091
	walk(3510) 0.0909090909091
	walk(3512) 0.0909090909091
say_to_user_with_referents: Among these nearby objects, could you show me one you would use the word 'coffee' when describing, or shake your head if there are none? {}
get_oidx_from_user requested feedback
get_oidx_from_user: 2
parse_and_ground_utterance: parsed 'go to secretary office' to walk(and(a_l(lambda 1:l.(office(1))),a_l(lambda 1:l.(office(1)))))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	walk(3402) 0.0909090909091
	walk(3404) 0.0909090909091
	walk(3418) 0.0909090909091
	walk(3420) 0.0909090909091
	walk(3422) 0.0909090909091
	walk(3430) 0.0909090909091
	walk(3432) 0.0909090909091
	walk(3502) 0.0909090909091
	walk(3508) 0.0909090909091
	walk(3510) 0.0909090909091
	walk(3512) 0.0909090909091
say_to_user_with_referents: Among these nearby objects, could you show me one you would use the word 'cylinder' when describing, or shake your head if there are none? {}
get_oidx_from_user requested feedback
get_oidx_from_user: 3
parse_and_ground_utterance: parsed 'go to secretary office' to walk(and(a_l(lambda 1:l.(office(1))),a_l(lambda 1:l.(office(1)))))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	walk(3402) 0.0909090909091
	walk(3404) 0.0909090909091
	walk(3418) 0.0909090909091
	walk(3420) 0.0909090909091
	walk(3422) 0.0909090909091
	walk(3430) 0.0909090909091
	walk(3432) 0.0909090909091
	walk(3502) 0.0909090909091
	walk(3508) 0.0909090909091
	walk(3510) 0.0909090909091
	walk(3512) 0.0909090909091
say_to_user_with_referents: Among these nearby objects, could you show me one you would use the word 'rectangle' when describing, or shake your head if there are none? {}
get_oidx_from_user requested feedback
get_oidx_from_user: None
parse_and_ground_utterance: parsed 'go to secretary office' to walk(and(a_l(lambda 1:l.(office(1))),a_l(lambda 1:l.(office(1)))))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	walk(3402) 0.0909090909091
	walk(3404) 0.0909090909091
	walk(3418) 0.0909090909091
	walk(3420) 0.0909090909091
	walk(3422) 0.0909090909091
	walk(3430) 0.0909090909091
	walk(3432) 0.0909090909091
	walk(3502) 0.0909090909091
	walk(3508) 0.0909090909091
	walk(3510) 0.0909090909091
	walk(3512) 0.0909090909091
say_to_user_with_referents: Among these nearby objects, could you show me one you would use the word 'metallic' when describing, or shake your head if there are none? {}
get_oidx_from_user requested feedback
get_oidx_from_user: 7
parse_and_ground_utterance: parsed 'go to secretary office' to walk(and(a_l(lambda 1:l.(office(1))),a_l(lambda 1:l.(office(1)))))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	walk(3402) 0.0909090909091
	walk(3404) 0.0909090909091
	walk(3418) 0.0909090909091
	walk(3420) 0.0909090909091
	walk(3422) 0.0909090909091
	walk(3430) 0.0909090909091
	walk(3432) 0.0909090909091
	walk(3502) 0.0909090909091
	walk(3508) 0.0909090909091
	walk(3510) 0.0909090909091
	walk(3512) 0.0909090909091
say_to_user: Thanks. Now, back to business.
say_to_user_with_referents: You want me to go somewhere? (not manipulate any objects) {'action': 'walk'}
get_from_user requested feedback
get_from_user (raw): 'Go to Secretary Office'
get_from_user (processed): 'go to secretary office'
parse_and_ground_utterance: parsed 'go to secretary office' to walk(and(a_l(lambda 1:l.(office(1))),a_l(lambda 1:l.(office(1)))))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	walk(3402) 0.0909090909091
	walk(3404) 0.0909090909091
	walk(3418) 0.0909090909091
	walk(3420) 0.0909090909091
	walk(3422) 0.0909090909091
	walk(3430) 0.0909090909091
	walk(3432) 0.0909090909091
	walk(3502) 0.0909090909091
	walk(3508) 0.0909090909091
	walk(3510) 0.0909090909091
	walk(3512) 0.0909090909091
say_to_user: I am expecting a simple 'yes' or 'no' response.
say_to_user_with_referents: You want me to go somewhere? (not manipulate any objects) {'action': 'walk'}
get_from_user requested feedback
get_from_user (raw): 'yes'
get_from_user (processed): 'yes'
parse_and_ground_utterance: parsed 'yes' to yes
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	yes 1.0
say_to_user_with_referents: Where should I go? {'action': 'walk'}
get_from_user requested feedback
get_from_user (raw): 'Secretary Office'
get_from_user (processed): 'secretary office'
parse_and_ground_utterance: parsed 'secretary office' to lambda 0:l.(and(office(0),kitchen(0)))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	False 0.0714285714286
	False 0.0714285714286
	False 0.0714285714286
	False 0.0714285714286
	False 0.0714285714286
	False 0.0714285714286
	False 0.0714285714286
	False 0.0714285714286
	False 0.0714285714286
	False 0.0714285714286
	False 0.0714285714286
	False 0.0714285714286
	False 0.0714285714286
	False 0.0714285714286
say_to_user: Sorry, I didn't understand that.
say_to_user_with_referents: Where should I go? {'action': 'walk'}
get_from_user requested feedback
get_from_user (raw): 'office'
get_from_user (processed): 'office'
parse_and_ground_utterance: parsed 'office' to office
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	office 1.0
say_to_user: Sorry, I didn't understand that.
say_to_user_with_referents: Where should I go? {'action': 'walk'}
get_from_user requested feedback
get_from_user (raw): 'Please go forward and turn right'
get_from_user (processed): 'please go forward and turn right'
say_to_user: I haven't heard the word 'please' before. Does it refer to properties of things, like a color, shape, or weight?
get_from_user requested feedback
get_from_user (raw): 'no'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
parse_and_ground_utterance: parsed 'please go forward and turn right' to and(walk(and(a_l(lambda 1:l.(east(1))),a_l(lambda 1:l.(east(1))))),walk(and(a_l(lambda 1:l.(east(1))),a_l(lambda 1:l.(east(1))))))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	walk(3414) 0.0909090909091
	walk(3414b) 0.0909090909091
	walk(3422) 0.0909090909091
	walk(3424) 0.0909090909091
	walk(3430) 0.0909090909091
	walk(3432) 0.0909090909091
	walk(3436) 0.0909090909091
	walk(3514) 0.0909090909091
	walk(3516) 0.0909090909091
	walk(3518) 0.0909090909091
	walk(3520) 0.0909090909091
say_to_user: Sorry, I didn't understand that.
say_to_user_with_referents: Where should I go? {'action': 'walk'}
get_from_user requested feedback
get_from_user (raw): 'Go forward and then turn right'
get_from_user (processed): 'go forward and then turn right'
parse_and_ground_utterance: parsed 'go forward and then turn right' to walk(and(a_l(lambda 1:l.(east(1))),a_l(lambda 1:l.(east(1))),a_l(lambda 1:l.(east(1)))))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	walk(3414) 0.0909090909091
	walk(3414b) 0.0909090909091
	walk(3422) 0.0909090909091
	walk(3424) 0.0909090909091
	walk(3430) 0.0909090909091
	walk(3432) 0.0909090909091
	walk(3436) 0.0909090909091
	walk(3514) 0.0909090909091
	walk(3516) 0.0909090909091
	walk(3518) 0.0909090909091
	walk(3520) 0.0909090909091
say_to_user: Sorry, I didn't understand that.
say_to_user_with_referents: Where should I go? {'action': 'walk'}
get_from_user requested feedback
get_from_user (raw): 'Go forward'
get_from_user (processed): 'go forward'
parse_and_ground_utterance: parsed 'go forward' to lambda 1:l.(and(walk(1),walk(1)))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	walk(3402) 0.0384615384615
	walk(3404) 0.0384615384615
	walk(3406) 0.0384615384615
	walk(3408) 0.0384615384615
	walk(3410) 0.0384615384615
	walk(3414) 0.0384615384615
	walk(3414a) 0.0384615384615
	walk(3414b) 0.0384615384615
	walk(3416) 0.0384615384615
	walk(3418) 0.0384615384615
	walk(3420) 0.0384615384615
	walk(3422) 0.0384615384615
	walk(3424) 0.0384615384615
	walk(3430) 0.0384615384615
	walk(3432) 0.0384615384615
	walk(3436) 0.0384615384615
	walk(3502) 0.0384615384615
	walk(3504) 0.0384615384615
	walk(3506) 0.0384615384615
	walk(3508) 0.0384615384615
	walk(3510) 0.0384615384615
	walk(3512) 0.0384615384615
	walk(3514) 0.0384615384615
	walk(3516) 0.0384615384615
	walk(3518) 0.0384615384615
	walk(3520) 0.0384615384615
say_to_user: Sorry, I didn't understand that.
say_to_user_with_referents: Where should I go? {'action': 'walk'}
get_from_user requested feedback
get_from_user (raw): 'turn right'
get_from_user (processed): 'turn right'
parse_and_ground_utterance: parsed 'turn right' to lambda 0:l.(and(lab(0),east(0)))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	False 0.0588235294118
	False 0.0588235294118
	False 0.0588235294118
	False 0.0588235294118
	False 0.0588235294118
	True 0.0588235294118
	True 0.0588235294118
	False 0.0588235294118
	False 0.0588235294118
	False 0.0588235294118
	True 0.0588235294118
	False 0.0588235294118
	False 0.0588235294118
	False 0.0588235294118
	False 0.0588235294118
	False 0.0588235294118
	False 0.0588235294118
say_to_user: Sorry, I didn't understand that.
say_to_user_with_referents: Where should I go? {'action': 'walk'}
get_from_user requested feedback
get_from_user (raw): 'Go see Richard'
get_from_user (processed): 'go see richard'
parse_and_ground_utterance: parsed 'go see richard' to lambda 1:i.(bring(1,r))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	bring(oidx_6,r) 0.125
	bring(oidx_11,r) 0.125
	bring(oidx_12,r) 0.125
	bring(oidx_13,r) 0.125
	bring(oidx_22,r) 0.125
	bring(oidx_25,r) 0.125
	bring(oidx_26,r) 0.125
	bring(oidx_28,r) 0.125
say_to_user_with_referents: You want me to go to <g>here</g> (not manipulate any objects)? {'action': 'walk', 'goal': '3432'}
get_from_user requested feedback
get_from_user (raw): 'Yes'
get_from_user (processed): 'yes'
parse_and_ground_utterance: parsed 'yes' to yes
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	yes 1.0
perform_action: {'action': 'walk', 'recipient': None, 'patient': None, 'goal': '3432', 'source': None}
main: ... done; got action {'action': 'walk', 'recipient': None, 'patient': None, 'goal': '3432', 'source': None}
main: writing new information from dialog(s) to file...
main: ... done; wrote data d = [[{'action': 'walk', 'recipient': None, 'patient': None, 'goal': '3432', 'source': None}], [{'all': ['go to secretary office'], 'patient': [], 'goal': ['secretary office', 'office', 'please go forward and turn right', 'go forward and then turn right', 'go forward', 'turn right', 'go see richard'], 'source': [], 'action': [], 'recipient': []}], [('bean', 10, 0), ('bean', 3, 0), ('bean', 27, 0), ('bean', 7, 0), ('bean', 18, 0), ('bean', 2, 0), ('bean', 20, 0), ('bean', 17, 0), ('coffee', 2, 1), ('cylinder', 3, 1), ('rectangle', 10, 0), ('rectangle', 3, 0), ('rectangle', 27, 0), ('rectangle', 7, 0), ('rectangle', 18, 0), ('rectangle', 2, 0), ('rectangle', 20, 0), ('rectangle', 17, 0), ('metallic', 7, 1)], []]
main: running command dialog...
say_to_user_with_referents: What should I do? {}
get_from_user requested feedback
get_from_user (raw): 'Give Dave the Peanuts'
get_from_user (processed): 'give dave the peanuts'
say_to_user: I haven't heard the word 'peanuts' before. Does it refer to properties of things, like a color, shape, or weight?
get_from_user requested feedback
get_from_user (raw): 'no'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
parse_and_ground_utterance: parsed 'give dave the peanuts' to lambda 1:i.(bring(1,b))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	bring(oidx_6,b) 0.125
	bring(oidx_11,b) 0.125
	bring(oidx_12,b) 0.125
	bring(oidx_13,b) 0.125
	bring(oidx_22,b) 0.125
	bring(oidx_25,b) 0.125
	bring(oidx_26,b) 0.125
	bring(oidx_28,b) 0.125
say_to_user: I'm still learning the meanings of some words. I'm going to ask you a few questions about these nearby objects before we continue.
say_to_user_with_referents: Among these nearby objects, could you show me one you would use the word 'column' when describing, or shake your head if there are none? {}
get_oidx_from_user requested feedback
get_oidx_from_user: 20
parse_and_ground_utterance: parsed 'give dave the peanuts' to lambda 1:i.(bring(1,p))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	bring(oidx_6,p) 0.125
	bring(oidx_11,p) 0.125
	bring(oidx_12,p) 0.125
	bring(oidx_13,p) 0.125
	bring(oidx_22,p) 0.125
	bring(oidx_25,p) 0.125
	bring(oidx_26,p) 0.125
	bring(oidx_28,p) 0.125
say_to_user_with_referents: Among these nearby objects, could you show me one you would use the word 'tower' when describing, or shake your head if there are none? {}
get_oidx_from_user requested feedback
get_oidx_from_user: 7
parse_and_ground_utterance: parsed 'give dave the peanuts' to lambda 1:i.(bring(1,n))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	bring(oidx_6,n) 0.125
	bring(oidx_11,n) 0.125
	bring(oidx_12,n) 0.125
	bring(oidx_13,n) 0.125
	bring(oidx_22,n) 0.125
	bring(oidx_25,n) 0.125
	bring(oidx_26,n) 0.125
	bring(oidx_28,n) 0.125
say_to_user_with_referents: Among these nearby objects, could you show me one you could not use the word 'coffee' when describing, or shake your head if you could use 'coffee' when describing all of them? {}
get_oidx_from_user requested feedback
get_oidx_from_user: 27
parse_and_ground_utterance: parsed 'give dave the peanuts' to lambda 1:i.(bring(1,b))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	bring(oidx_6,b) 0.125
	bring(oidx_11,b) 0.125
	bring(oidx_12,b) 0.125
	bring(oidx_13,b) 0.125
	bring(oidx_22,b) 0.125
	bring(oidx_25,b) 0.125
	bring(oidx_26,b) 0.125
	bring(oidx_28,b) 0.125
say_to_user_with_referents: Among these nearby objects, could you show me one you would use the word 'can' when describing, or shake your head if there are none? {}
get_oidx_from_user requested feedback
get_oidx_from_user: 10
parse_and_ground_utterance: parsed 'give dave the peanuts' to lambda 1:i.(bring(1,m))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	bring(oidx_6,m) 0.125
	bring(oidx_11,m) 0.125
	bring(oidx_12,m) 0.125
	bring(oidx_13,m) 0.125
	bring(oidx_22,m) 0.125
	bring(oidx_25,m) 0.125
	bring(oidx_26,m) 0.125
	bring(oidx_28,m) 0.125
say_to_user_with_referents: Among these nearby objects, could you show me one you would use the word 'clear' when describing, or shake your head if there are none? {}
get_oidx_from_user requested feedback
get_oidx_from_user: None
parse_and_ground_utterance: parsed 'give dave the peanuts' to lambda 1:i.(bring(1,b))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	bring(oidx_6,b) 0.125
	bring(oidx_11,b) 0.125
	bring(oidx_12,b) 0.125
	bring(oidx_13,b) 0.125
	bring(oidx_22,b) 0.125
	bring(oidx_25,b) 0.125
	bring(oidx_26,b) 0.125
	bring(oidx_28,b) 0.125
say_to_user: Thanks. Now, back to business.
say_to_user_with_referents: You want me to deliver something for someone? {'action': 'bring'}
get_from_user requested feedback
get_from_user (raw): 'yes'
get_from_user (processed): 'yes'
parse_and_ground_utterance: parsed 'yes' to yes
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	yes 1.0
say_to_user_with_referents: What should I deliver to <r>this person</r>? {'action': 'bring', 'recipient': 'b'}
get_from_user requested feedback
get_from_user (raw): 'The Peanuts'
get_from_user (processed): 'the peanuts'
parse_and_ground_utterance: parsed 'the peanuts' to lambda 1:p.(and(1))
Traceback (most recent call last):
  File "main.py", line 175, in <module>
    main()
  File "main.py", line 109, in main
    perception_labels_requested)
  File "/var/www/gandalf.nmtechgroup.com/phm/grounded_dialog_agent/Agent.py", line 163, in start_action_dialog
    gprs, pr = self.parse_and_ground_utterance(ur)
  File "/var/www/gandalf.nmtechgroup.com/phm/grounded_dialog_agent/Agent.py", line 870, in parse_and_ground_utterance
    self.budget_for_grounding)
  File "/var/www/gandalf.nmtechgroup.com/phm/grounded_dialog_agent/Agent.py", line 1569, in call_function_with_timeout
    r = f(**args)
  File "/var/www/gandalf.nmtechgroup.com/phm/grounded_dialog_agent/KBGrounder.py", line 42, in ground_semantic_tree
    candidate_groundings = self.ground_semantic_tree(candidate)
  File "/var/www/gandalf.nmtechgroup.com/phm/grounded_dialog_agent/KBGrounder.py", line 75, in ground_semantic_tree
    for cjdx in range(len(child_groundings[1])):
IndexError: list index out of range
