No handlers could be found for logger "gensim.models.doc2vec"
main: loading grounder from file...
main: ... done
main: instantiating IO...
main: ... done
main: instantiating Agent...
main: ... done
main: running command dialog...
say_to_user_with_referents: What should I do? {}
get_from_user requested feedback
get_from_user (raw): 'Go to pod next to conference.'
get_from_user (processed): 'go to pod next to conference'
parse_and_ground_utterance: parsed 'go to pod next to conference' to walk(a_l(lambda 1:l.(and(adjacent(1,a_l(lambda 2:l.(conference(2)))),pod(1)))))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	walk(3408) 0.5
	walk(3518) 0.5
say_to_user: I'm still learning the meanings of some words. I'm going to ask you a few questions about these nearby objects before we continue.
say_to_user_with_referents: Among these nearby objects, could you show me one you would use the word 'pringles' when describing, or shake your head if there are none? {}
get_oidx_from_user requested feedback
get_oidx_from_user: None
parse_and_ground_utterance: parsed 'go to pod next to conference' to walk(a_l(lambda 1:l.(and(adjacent(1,a_l(lambda 2:l.(conference(2)))),pod(1)))))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	walk(3408) 0.5
	walk(3518) 0.5
say_to_user_with_referents: Among these nearby objects, could you show me one you would use the word 'long' when describing, or shake your head if there are none? {}
get_oidx_from_user requested feedback
get_oidx_from_user: None
parse_and_ground_utterance: parsed 'go to pod next to conference' to walk(a_l(lambda 1:l.(and(adjacent(1,a_l(lambda 2:l.(conference(2)))),pod(1)))))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	walk(3408) 0.5
	walk(3518) 0.5
say_to_user_with_referents: Among these nearby objects, could you show me one you would use the word 'empty' when describing, or shake your head if there are none? {}
get_oidx_from_user requested feedback
get_oidx_from_user: 3
parse_and_ground_utterance: parsed 'go to pod next to conference' to walk(a_l(lambda 1:l.(and(adjacent(1,a_l(lambda 2:l.(conference(2)))),pod(1)))))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	walk(3408) 0.5
	walk(3518) 0.5
say_to_user_with_referents: Among these nearby objects, could you show me one you would use the word 'beans' when describing, or shake your head if there are none? {}
get_oidx_from_user requested feedback
get_oidx_from_user: 2
parse_and_ground_utterance: parsed 'go to pod next to conference' to walk(a_l(lambda 1:l.(and(adjacent(1,a_l(lambda 2:l.(conference(2)))),pod(1)))))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	walk(3408) 0.5
	walk(3518) 0.5
say_to_user_with_referents: Among these nearby objects, could you show me one you would use the word 'can' when describing, or shake your head if there are none? {}
get_oidx_from_user requested feedback
get_oidx_from_user: 2
parse_and_ground_utterance: parsed 'go to pod next to conference' to walk(a_l(lambda 1:l.(and(adjacent(1,a_l(lambda 2:l.(conference(2)))),pod(1)))))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	walk(3408) 0.5
	walk(3518) 0.5
say_to_user: Thanks. Now, back to business.
say_to_user_with_referents: You want me to go somewhere? (not manipulate any objects) {'action': 'walk'}
get_from_user requested feedback
get_from_user (raw): 'Yes'
get_from_user (processed): 'yes'
parse_and_ground_utterance: parsed 'yes' to yes
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	yes 1.0
say_to_user_with_referents: Where should I go? {'action': 'walk'}
get_from_user requested feedback
get_from_user (raw): 'Pod next to conference.'
get_from_user (processed): 'pod next to conference'
parse_and_ground_utterance: parsed 'pod next to conference' to lambda 1:l.(and(adjacent(1,a_l(lambda 2:l.(conference(2)))),pod(1)))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	False 0.025
	False 0.025
	False 0.025
	False 0.025
	False 0.025
	False 0.025
	True 0.025
	False 0.025
	False 0.025
	False 0.025
	False 0.025
	False 0.025
	False 0.025
	False 0.025
	False 0.025
	False 0.025
	False 0.025
	False 0.025
	False 0.025
	False 0.025
	False 0.025
	False 0.025
	False 0.025
	False 0.025
	False 0.025
	False 0.025
	False 0.025
	False 0.025
	False 0.025
	False 0.025
	False 0.025
	False 0.025
	False 0.025
	False 0.025
	False 0.025
	False 0.025
	False 0.025
	False 0.025
	True 0.025
	False 0.025
say_to_user: Sorry, I didn't understand that.
say_to_user_with_referents: Where should I go? {'action': 'walk'}
get_from_user requested feedback
get_from_user (raw): 'Go to pod'
get_from_user (processed): 'go to pod'
parse_and_ground_utterance: parsed 'go to pod' to walk(a_l(lambda 1:l.(pod(1))))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	walk(3408) 0.2
	walk(3410) 0.2
	walk(3424) 0.2
	walk(3504) 0.2
	walk(3518) 0.2
say_to_user: Sorry, I didn't understand that.
say_to_user_with_referents: Where should I go? {'action': 'walk'}
get_from_user requested feedback
get_from_user (raw): 'Pod'
get_from_user (processed): 'pod'
parse_and_ground_utterance: parsed 'pod' to pod
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	pod 1.0
say_to_user_with_referents: You want me to go to <g>here</g> (not manipulate any objects)? {'action': 'walk', 'goal': '3408'}
get_from_user requested feedback
get_from_user (raw): 'No.'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
say_to_user_with_referents: Where should I go? {'action': 'walk'}
get_from_user requested feedback
get_from_user (raw): 'Pod'
get_from_user (processed): 'pod'
parse_and_ground_utterance: parsed 'pod' to pod
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	pod 1.0
say_to_user: Sorry, I didn't understand that.
say_to_user_with_referents: Where should I go? {'action': 'walk'}
get_from_user requested feedback
get_from_user (raw): 'Go to Pod'
get_from_user (processed): 'go to pod'
parse_and_ground_utterance: parsed 'go to pod' to walk(a_l(lambda 1:l.(pod(1))))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	walk(3408) 0.2
	walk(3410) 0.2
	walk(3424) 0.2
	walk(3504) 0.2
	walk(3518) 0.2
say_to_user_with_referents: You want me to go to <g>here</g> (not manipulate any objects)? {'action': 'walk', 'goal': '3518'}
get_from_user requested feedback
get_from_user (raw): 'Yes'
get_from_user (processed): 'yes'
parse_and_ground_utterance: parsed 'yes' to yes
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	yes 1.0
perform_action: {'action': 'walk', 'recipient': None, 'patient': None, 'goal': '3518', 'source': None}
main: ... done; got action {'action': 'walk', 'recipient': None, 'patient': None, 'goal': '3518', 'source': None}
main: writing new information from dialog(s) to file...
main: ... done; wrote data d = [[{'action': 'walk', 'recipient': None, 'patient': None, 'goal': '3518', 'source': None}], [{'all': ['go to pod next to conference'], 'patient': [], 'goal': ['pod next to conference', 'go to pod', 'pod', 'pod', 'go to pod'], 'source': [], 'action': [], 'recipient': []}], [('pringles', 10, 0), ('pringles', 3, 0), ('pringles', 27, 0), ('pringles', 7, 0), ('pringles', 18, 0), ('pringles', 2, 0), ('pringles', 20, 0), ('pringles', 17, 0), ('long', 10, 0), ('long', 3, 0), ('long', 27, 0), ('long', 7, 0), ('long', 18, 0), ('long', 2, 0), ('long', 20, 0), ('long', 17, 0), ('empty', 3, 1), ('bean', 2, 1), ('can', 2, 1)], []]
main: running command dialog...
say_to_user_with_referents: What should I do? {}
get_from_user requested feedback
get_from_user (raw): 'Take can to Nancy.'
get_from_user (processed): 'take can to nancy'
parse_and_ground_utterance: parsed 'take can to nancy' to n
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	n 1.0
say_to_user: I'm still learning the meanings of some words. I'm going to ask you a few questions about these nearby objects before we continue.
say_to_user_with_referents: Among these nearby objects, could you show me one you would use the word 'clear' when describing, or shake your head if there are none? {}
get_oidx_from_user requested feedback
get_oidx_from_user: None
parse_and_ground_utterance: parsed 'take can to nancy' to n
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	n 1.0
say_to_user_with_referents: Among these nearby objects, could you show me one you would use the word 'yellow' when describing, or shake your head if there are none? {}
get_oidx_from_user requested feedback
get_oidx_from_user: None
parse_and_ground_utterance: parsed 'take can to nancy' to n
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	n 1.0
say_to_user_with_referents: Among these nearby objects, could you show me one you would use the word 'container' when describing, or shake your head if there are none? {}
get_oidx_from_user requested feedback
get_oidx_from_user: 7
parse_and_ground_utterance: parsed 'take can to nancy' to n
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	n 1.0
say_to_user_with_referents: Among these nearby objects, could you show me one you would use the word 'cylinder' when describing, or shake your head if there are none? {}
get_oidx_from_user requested feedback
get_oidx_from_user: 3
parse_and_ground_utterance: parsed 'take can to nancy' to n
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	n 1.0
say_to_user_with_referents: Among these nearby objects, could you show me one you could not use the word 'container' when describing, or shake your head if you could use 'container' when describing all of them? {}
get_oidx_from_user requested feedback
get_oidx_from_user: 27
parse_and_ground_utterance: parsed 'take can to nancy' to n
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	n 1.0
say_to_user: Thanks. Now, back to business.
say_to_user_with_referents: You want me to deliver something for someone? {'action': 'bring'}
get_from_user requested feedback
get_from_user (raw): 'Yes'
get_from_user (processed): 'yes'
parse_and_ground_utterance: parsed 'yes' to yes
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	yes 1.0
say_to_user_with_referents: What should I find to deliver? {'action': 'bring'}
get_from_user requested feedback
get_from_user (raw): 'Soda can'
get_from_user (processed): 'soda can'
say_to_user: I haven't heard the word 'soda' before. Does it refer to properties of things, like a color, shape, or weight?
get_from_user requested feedback
get_from_user (raw): 'No'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
parse_and_ground_utterance: parsed 'soda can' to lambda 0:i.(and(can(0),long(0)))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	True 0.0625
	False 0.0625
	True 0.0625
	False 0.0625
	True 0.0625
	False 0.0625
	True 0.0625
	False 0.0625
	True 0.0625
	False 0.0625
	True 0.0625
	False 0.0625
	True 0.0625
	False 0.0625
	True 0.0625
	False 0.0625
say_to_user_with_referents: You want me to deliver <p>this</p> to someone? {'action': 'bring', 'patient': 'oidx_6'}
get_from_user requested feedback
get_from_user (raw): 'No'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
say_to_user_with_referents: What should I deliver to <r>this person</r>? {'action': 'bring', 'recipient': 'n'}
get_from_user requested feedback
get_from_user (raw): 'A can'
get_from_user (processed): 'a can'
parse_and_ground_utterance: parsed 'a can' to a_i(lambda 1:i.(can(1)))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	oidx_6 0.125
	oidx_11 0.125
	oidx_12 0.125
	oidx_13 0.125
	oidx_22 0.125
	oidx_25 0.125
	oidx_26 0.125
	oidx_28 0.125
say_to_user_with_referents: You want me to deliver <p>this</p> to someone? {'action': 'bring', 'patient': 'oidx_6'}
get_from_user requested feedback
get_from_user (raw): ''
get_from_user (processed): ''
parse_and_ground_utterance: could not generate a parse for the utterance
say_to_user: I am expecting a simple 'yes' or 'no' response.
say_to_user_with_referents: You want me to deliver <p>this</p> to someone? {'action': 'bring', 'patient': 'oidx_6'}
get_from_user requested feedback
get_from_user (raw): 'No'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
say_to_user_with_referents: What should I find to deliver? {'action': 'bring'}
get_from_user requested feedback
get_from_user (raw): 'Can'
get_from_user (processed): 'can'
parse_and_ground_utterance: parsed 'can' to can
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	can 1.0
say_to_user_with_referents: What should I deliver to <r>this person</r>? {'action': 'bring', 'recipient': 'n'}
get_from_user requested feedback
get_from_user (raw): 'A drink'
get_from_user (processed): 'a drink'
say_to_user: I haven't heard the word 'drink' before. Does it refer to properties of things, like a color, shape, or weight?
get_from_user requested feedback
get_from_user (raw): 'No'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
parse_and_ground_utterance: parsed 'a drink' to lambda 1:<l,t>.(and(a_l(lambda 2:l.(1(2))),a_l(lambda 2:l.(1(2)))))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	3402 0.0125
	3404 0.0125
	3418 0.0125
	3420 0.0125
	3422 0.0125
	3430 0.0125
	3432 0.0125
	3502 0.0125
	3508 0.0125
	3510 0.0125
	3512 0.0125
	3414 0.0125
	3414a 0.0125
	3414b 0.0125
	3436 0.0125
	3416 0.0125
	3516 0.0125
	3506 0.0125
	3406 0.0125
	3514 0.0125
	3520 0.0125
	3408 0.0125
	3410 0.0125
	3424 0.0125
	3504 0.0125
	3518 0.0125
	3418 0.0125
	3432 0.0125
	3410 0.0125
	3414 0.0125
	3420 0.0125
	3510 0.0125
	3402 0.0125
	3404 0.0125
	3408 0.0125
	3414 0.0125
	3416 0.0125
	3418 0.0125
	3420 0.0125
	3422 0.0125
	3424 0.0125
	3430 0.0125
	3432 0.0125
	3436 0.0125
	3414 0.0125
	3414b 0.0125
	3422 0.0125
	3424 0.0125
	3430 0.0125
	3432 0.0125
	3436 0.0125
	3514 0.0125
	3516 0.0125
	3518 0.0125
	3520 0.0125
	3502 0.0125
	3504 0.0125
	3506 0.0125
	3508 0.0125
	3510 0.0125
	3512 0.0125
	3514 0.0125
	3516 0.0125
	3518 0.0125
	3520 0.0125
	3402 0.0125
	3404 0.0125
	3406 0.0125
	3408 0.0125
	3410 0.0125
	3414a 0.0125
	3416 0.0125
	3418 0.0125
	3420 0.0125
	3502 0.0125
	3504 0.0125
	3506 0.0125
	3508 0.0125
	3510 0.0125
	3512 0.0125
say_to_user_with_referents: You want me to deliver <p>this</p> to someone? {'action': 'bring', 'patient': 'oidx_12'}
get_from_user requested feedback
get_from_user (raw): 'N'
get_from_user (processed): 'n'
parse_and_ground_utterance: parsed 'n' to south
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	south 1.0
say_to_user: I am expecting a simple 'yes' or 'no' response.
say_to_user_with_referents: You want me to deliver <p>this</p> to someone? {'action': 'bring', 'patient': 'oidx_12'}
get_from_user requested feedback
get_from_user (raw): 'No.'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
say_to_user_with_referents: What should I deliver to <r>this person</r>? {'action': 'bring', 'recipient': 'n'}
get_from_user requested feedback
get_from_user (raw): 'Soda can'
get_from_user (processed): 'soda can'
parse_and_ground_utterance: parsed 'soda can' to lambda 0:i.(and(empty(0),can(0)))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	True 0.0625
	False 0.0625
	True 0.0625
	False 0.0625
	True 0.0625
	False 0.0625
	True 0.0625
	False 0.0625
	True 0.0625
	False 0.0625
	True 0.0625
	False 0.0625
	True 0.0625
	False 0.0625
	True 0.0625
	False 0.0625
say_to_user_with_referents: What should I find to deliver? {'action': 'bring'}
get_from_user requested feedback
get_from_user (raw): 'Soda can'
get_from_user (processed): 'soda can'
parse_and_ground_utterance: parsed 'soda can' to lambda 0:i.(and(can(0),bean(0)))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	True 0.0625
	False 0.0625
	True 0.0625
	False 0.0625
	True 0.0625
	False 0.0625
	True 0.0625
	False 0.0625
	True 0.0625
	False 0.0625
	True 0.0625
	False 0.0625
	True 0.0625
	False 0.0625
	True 0.0625
	False 0.0625
say_to_user_with_referents: What should I deliver to <r>this person</r>? {'action': 'bring', 'recipient': 'n'}
get_from_user requested feedback
get_from_user (raw): 'Soda can'
get_from_user (processed): 'soda can'
parse_and_ground_utterance: parsed 'soda can' to lambda 0:i.(and(peach(0),can(0)))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	True 0.0625
	False 0.0625
	True 0.0625
	False 0.0625
	True 0.0625
	False 0.0625
	True 0.0625
	False 0.0625
	True 0.0625
	False 0.0625
	True 0.0625
	False 0.0625
	True 0.0625
	False 0.0625
	True 0.0625
	False 0.0625
say_to_user_with_referents: You want me to deliver <p>this</p> to someone? {'action': 'bring', 'patient': 'oidx_25'}
get_from_user requested feedback
get_from_user (raw): 'No.'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
say_to_user_with_referents: What should I deliver to <r>this person</r>? {'action': 'bring', 'recipient': 'n'}
get_from_user requested feedback
get_from_user (raw): 'A pop can'
get_from_user (processed): 'a pop can'
say_to_user: I haven't heard the word 'pop' before. Does it refer to properties of things, like a color, shape, or weight?
get_from_user requested feedback
get_from_user (raw): 'No'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
parse_and_ground_utterance: parsed 'a pop can' to and(a_i(lambda 1:i.(can(1))),a_i(lambda 1:i.(can(1))))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	oidx_6 0.125
	oidx_11 0.125
	oidx_12 0.125
	oidx_13 0.125
	oidx_22 0.125
	oidx_25 0.125
	oidx_26 0.125
	oidx_28 0.125
say_to_user_with_referents: What should I find to deliver? {'action': 'bring'}
get_from_user requested feedback
get_from_user (raw): 'A can of soda'
get_from_user (processed): 'a can of soda'
parse_and_ground_utterance: parsed 'a can of soda' to and(a_i(lambda 1:i.(can(1))),a_i(lambda 0:i.(spice(0))))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	oidx_6 0.125
	oidx_11 0.125
	oidx_12 0.125
	oidx_13 0.125
	oidx_22 0.125
	oidx_25 0.125
	oidx_26 0.125
	oidx_28 0.125
say_to_user_with_referents: You want me to deliver <p>this</p> to someone? {'action': 'bring', 'patient': 'oidx_28'}
get_from_user requested feedback
get_from_user (raw): 'No.'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
say_to_user_with_referents: You want me to deliver <p>this</p> to someone? {'action': 'bring', 'patient': 'oidx_26'}
get_from_user requested feedback
get_from_user (raw): 'Yes'
get_from_user (processed): 'yes'
parse_and_ground_utterance: parsed 'yes' to yes
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	yes 1.0
say_to_user_with_referents: You want me to deliver <p>this</p> to <r>this person</r>? {'action': 'bring', 'recipient': 'n', 'patient': 'oidx_26'}
get_from_user requested feedback
get_from_user (raw): 'Yes'
get_from_user (processed): 'yes'
parse_and_ground_utterance: parsed 'yes' to yes
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	yes 1.0
perform_action: {'action': 'bring', 'recipient': 'n', 'patient': 'oidx_26', 'goal': None, 'source': None}
main: ... done; got action {'action': 'bring', 'recipient': 'n', 'patient': 'oidx_26', 'goal': None, 'source': None}
main