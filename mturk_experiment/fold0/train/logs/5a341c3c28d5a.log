No handlers could be found for logger "gensim.models.doc2vec"
main: loading grounder from file...
main: ... done
main: instantiating IO...
main: ... done
main: instantiating Agent...
main: ... done
main: running command dialog...
say_to_user_with_referents: What should I do? {}
get_from_user requested feedback
get_from_user (raw): ''
get_from_user (processed): ''
parse_and_ground_utterance: could not generate a parse for the utterance
say_to_user_with_referents: You want me to move an item from somewhere to somewhere (not give it to someone)? {'action': 'move'}
get_from_user requested feedback
get_from_user (raw): 'go to the lounge'
get_from_user (processed): 'go to the lounge'
parse_and_ground_utterance: parsed 'go to the lounge' to walk(a_l(lambda 1:l.(lounge(1))))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	walk(3406) 0.5
	walk(3514) 0.5
say_to_user: I am expecting a simple 'yes' or 'no' response.
say_to_user_with_referents: You want me to move an item from somewhere to somewhere (not give it to someone)? {'action': 'move'}
get_from_user requested feedback
get_from_user (raw): 'yes'
get_from_user (processed): 'yes'
parse_and_ground_utterance: parsed 'yes' to yes
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	yes 1.0
say_to_user_with_referents: Where should I move something from on its way somewhere else? {'action': 'move'}
get_from_user requested feedback
get_from_user (raw): 'Go to the red X.'
get_from_user (processed): 'go to the red x'
say_to_user: I haven't heard the word 'red' before. Does it refer to properties of things, like a color, shape, or weight?
get_from_user requested feedback
get_from_user (raw): 'color red.'
get_from_user (processed): 'color red'
parse_and_ground_utterance: parsed 'color red' to lambda 0:l.(and(kitchen(0),middle(0)))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	False 0.047619047619
	False 0.047619047619
	False 0.047619047619
	False 0.047619047619
	False 0.047619047619
	False 0.047619047619
	False 0.047619047619
	False 0.047619047619
	False 0.047619047619
	False 0.047619047619
	False 0.047619047619
	False 0.047619047619
	False 0.047619047619
	False 0.047619047619
	False 0.047619047619
	False 0.047619047619
	False 0.047619047619
	False 0.047619047619
	False 0.047619047619
	False 0.047619047619
	False 0.047619047619
say_to_user: I am expecting a simple 'yes' or 'no' response.
say_to_user: I haven't heard the word 'red' before. Does it refer to properties of things, like a color, shape, or weight?
get_from_user requested feedback
get_from_user (raw): 'yes color'
get_from_user (processed): 'yes color'
parse_and_ground_utterance: parsed 'yes color' to and(yes,no)
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	
say_to_user: I am expecting a simple 'yes' or 'no' response.
say_to_user: I haven't heard the word 'red' before. Does it refer to properties of things, like a color, shape, or weight?
get_from_user requested feedback
get_from_user (raw): 'Go to the X on the map.'
get_from_user (processed): 'go to the x on the map'
parse_and_ground_utterance: could not generate a parse for the utterance
say_to_user: I am expecting a simple 'yes' or 'no' response.
say_to_user: I haven't heard the word 'red' before. Does it refer to properties of things, like a color, shape, or weight?
get_from_user requested feedback
get_from_user (raw): 'yes.'
get_from_user (processed): 'yes'
parse_and_ground_utterance: parsed 'yes' to yes
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	yes 1.0
say_to_user: Does 'red' mean the same thing as 'white'?
get_from_user requested feedback
get_from_user (raw): 'no.'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
say_to_user: Does 'red' mean the same thing as 'yellow'?
get_from_user requested feedback
get_from_user (raw): 'no.'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
say_to_user: Does 'red' mean the same thing as 'blue'?
get_from_user requested feedback
get_from_user (raw): 'no.'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
parse_and_ground_utterance: parsed 'go to the red x' to walk(and(a_l(lambda 1:l.(east(1))),a_l(lambda 1:l.(east(1)))))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	walk(3414) 0.0909090909091
	walk(3414b) 0.0909090909091
	walk(3422) 0.0909090909091
	walk(3424) 0.0909090909091
	walk(3430) 0.0909090909091
	walk(3432) 0.0909090909091
	walk(3436) 0.0909090909091
	walk(3514) 0.0909090909091
	walk(3516) 0.0909090909091
	walk(3518) 0.0909090909091
	walk(3520) 0.0909090909091
say_to_user: I'm still learning the meanings of some words. I'm going to ask you a few questions about these nearby objects before we continue.
say_to_user_with_referents: Among these nearby objects, could you show me one you would use the word 'red' when describing, or shake your head if there are none? {}
get_oidx_from_user requested feedback
get_oidx_from_user: 7
parse_and_ground_utterance: parsed 'go to the red x' to walk(and(a_l(lambda 1:l.(west(1))),a_l(lambda 1:l.(west(1)))))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	walk(3402) 0.0666666666667
	walk(3404) 0.0666666666667
	walk(3406) 0.0666666666667
	walk(3408) 0.0666666666667
	walk(3410) 0.0666666666667
	walk(3414a) 0.0666666666667
	walk(3416) 0.0666666666667
	walk(3418) 0.0666666666667
	walk(3420) 0.0666666666667
	walk(3502) 0.0666666666667
	walk(3504) 0.0666666666667
	walk(3506) 0.0666666666667
	walk(3508) 0.0666666666667
	walk(3510) 0.0666666666667
	walk(3512) 0.0666666666667
say_to_user_with_referents: Among these nearby objects, could you show me one you would use the word 'yellow' when describing, or shake your head if there are none? {}
get_oidx_from_user requested feedback
get_oidx_from_user: 10
parse_and_ground_utterance: parsed 'go to the red x' to walk(and(a_l(lambda 1:l.(office(1))),a_l(lambda 1:l.(office(1)))))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	walk(3402) 0.0909090909091
	walk(3404) 0.0909090909091
	walk(3418) 0.0909090909091
	walk(3420) 0.0909090909091
	walk(3422) 0.0909090909091
	walk(3430) 0.0909090909091
	walk(3432) 0.0909090909091
	walk(3502) 0.0909090909091
	walk(3508) 0.0909090909091
	walk(3510) 0.0909090909091
	walk(3512) 0.0909090909091
say_to_user_with_referents: Among these nearby objects, could you show me one you would use the word 'block' when describing, or shake your head if there are none? {}
get_oidx_from_user requested feedback
get_oidx_from_user: None
parse_and_ground_utterance: parsed 'go to the red x' to walk(and(a_l(lambda 1:l.(lounge(1))),a_l(lambda 1:l.(lounge(1)))))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	walk(3406) 0.5
	walk(3514) 0.5
say_to_user_with_referents: Among these nearby objects, could you show me one you would use the word 'tower' when describing, or shake your head if there are none? {}
get_oidx_from_user requested feedback
get_oidx_from_user: None
parse_and_ground_utterance: parsed 'go to the red x' to walk(and(a_l(lambda 1:l.(lab(1))),a_l(lambda 1:l.(lab(1)))))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	walk(3414) 0.25
	walk(3414a) 0.25
	walk(3414b) 0.25
	walk(3436) 0.25
say_to_user_with_referents: Among these nearby objects, could you show me one you would use the word 'cylinder' when describing, or shake your head if there are none? {}
get_oidx_from_user requested feedback
get_oidx_from_user: 20
parse_and_ground_utterance: parsed 'go to the red x' to walk(and(a_l(lambda 1:l.(unoccupied(1))),a_l(lambda 1:l.(unoccupied(1)))))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	walk(3418) 0.5
	walk(3432) 0.5
say_to_user: Thanks. Now, back to business.
say_to_user_with_referents: I should move something from <s>here</s> to <g>there</g>? {'action': 'move', 'source': '3424', 'goal': '3510'}
get_from_user requested feedback
get_from_user (raw): 'there'
get_from_user (processed): 'there'
parse_and_ground_utterance: parsed 'there' to south
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	south 1.0
say_to_user: I am expecting a simple 'yes' or 'no' response.
say_to_user_with_referents: I should move something from <s>here</s> to <g>there</g>? {'action': 'move', 'source': '3424', 'goal': '3510'}
get_from_user requested feedback
get_from_user (raw): 'yes'
get_from_user (processed): 'yes'
parse_and_ground_utterance: parsed 'yes' to yes
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	yes 1.0
say_to_user_with_referents: What should I move from <s>here</s> to <g>there</g>? {'action': 'move', 'source': '3424', 'goal': '3510'}
get_from_user requested feedback
get_from_user (raw): 'yes'
get_from_user (processed): 'yes'
parse_and_ground_utterance: parsed 'yes' to yes
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	yes 1.0
say_to_user_with_referents: You want me to move <p>this</p> from <s>here</s> to <g>there</g> (not give it to someone)? {'action': 'move', 'source': '3424', 'patient': 'oidx_13', 'goal': '3510'}
get_from_user requested feedback
get_from_user (raw): 'yes'
get_from_user (processed): 'yes'
parse_and_ground_utterance: parsed 'yes' to yes
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	yes 1.0
perform_action: {'action': 'move', 'recipient': None, 'patient': 'oidx_13', 'goal': '3510', 'source': '3424'}
main: ... done; got action {'action': 'move', 'recipient': None, 'patient': 'oidx_13', 'goal': '3510', 'source': '3424'}
main: writing new information from dialog(s) to file...
main: ... done; wrote data d = [[{'action': 'move', 'recipient': None, 'patient': 'oidx_13', 'goal': '3510', 'source': '3424'}], [{'all': [''], 'patient': ['yes'], 'goal': [], 'source': ['go to the red x'], 'action': [], 'recipient': []}], [('red', 7, 1), ('yellow', 10, 1), ('block', 10, 0), ('block', 3, 0), ('block', 27, 0), ('block', 7, 0), ('block', 18, 0), ('block', 2, 0), ('block', 20, 0), ('block', 17, 0), ('tower', 10, 0), ('tower', 3, 0), ('tower', 27, 0), ('tower', 7, 0), ('tower', 18, 0), ('tower', 2, 0), ('tower', 20, 0), ('tower', 17, 0), ('cylinder', 20, 1)], [('red', 'white', False), ('red', 'yellow', False), ('red', 'blue', False)]]
main: running command dialog...
say_to_user_with_referents: What should I do? {}
get_from_user requested feedback
get_from_user (raw): 'get the object'
get_from_user (processed): 'get the object'
say_to_user: I haven't heard the word 'object' before. Does it refer to properties of things, like a color, shape, or weight?
get_from_user requested feedback
get_from_user (raw): 'yes'
get_from_user (processed): 'yes'
parse_and_ground_utterance: parsed 'yes' to yes
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	yes 1.0
say_to_user: Does 'object' mean the same thing as 'container'?
get_from_user requested feedback
get_from_user (raw): 'yes'
get_from_user (processed): 'yes'
parse_and_ground_utterance: parsed 'yes' to yes
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	yes 1.0
parse_and_ground_utterance: parsed 'get the object' to lambda 1:l.(lambda 2:l.(move(a_i(lambda 3:i.(container(3))),1,2)))
parse_and_ground_utterance: grounding timeout for lambda 1:l.(lambda 2:l.(move(a_i(lambda 3:i.(container(3))),1,2)))
say_to_user_with_referents: You want me to deliver something for someone? {'action': 'bring'}
get_from_user requested feedback
get_from_user (raw): 'yes'
get_from_user (processed): 'yes'
parse_and_ground_utterance: parsed 'yes' to yes
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	yes 1.0
say_to_user_with_referents: What should I find to deliver? {'action': 'bring'}
get_from_user requested feedback
get_from_user (raw): 'container'
get_from_user (processed): 'container'
parse_and_ground_utterance: parsed 'container' to container
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	container 1.0
say_to_user: I'm still learning the meanings of some words. I'm going to ask you a few questions about these nearby objects before we continue.
say_to_user_with_referents: Among these nearby objects, could you show me one you would use the word 'rectangle' when describing, or shake your head if there are none? {}
get_oidx_from_user requested feedback
get_oidx_from_user: None
parse_and_ground_utterance: parsed 'container' to container
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	container 1.0
say_to_user_with_referents: Among these nearby objects, could you show me one you would use the word 'peaches' when describing, or shake your head if there are none? {}
get_oidx_from_user requested feedback
get_oidx_from_user: None
parse_and_ground_utterance: parsed 'container' to container
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	container 1.0
say_to_user_with_referents: Among these nearby objects, could you show me one you could not use the word 'cylinder' when describing, or shake your head if you could use 'cylinder' when describing all of them? {}
get_oidx_from_user requested feedback
get_oidx_from_user: 20
parse_and_ground_utterance: parsed 'container' to container
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	container 1.0
say_to_user_with_referents: Among these nearby objects, could you show me one you would use the word 'pringles' when describing, or shake your head if there are none? {}
get_oidx_from_user requested feedback
get_oidx_from_user: None
parse_and_ground_utterance: parsed 'container' to container
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	container 1.0
say_to_user_with_referents: Among these nearby objects, could you show me one you would use the word 'clear' when describing, or shake your head if there are none? {}
get_oidx_from_user requested feedback
get_oidx_from_user: None
parse_and_ground_utterance: parsed 'container' to container
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	container 1.0
say_to_user: Thanks. Now, back to business.
say_to_user_with_referents: You want me to deliver something to <r>this person</r>? {'action': 'bring', 'recipient': 'n'}
get_from_user requested feedback
get_from_user (raw): 'yes'
get_from_user (processed): 'yes'
parse_and_ground_utterance: parsed 'yes' to yes
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	yes 1.0
say_to_user_with_referents: What should I deliver to <r>this person</r>? {'action': 'bring', 'recipient': 'n'}
get_from_user requested feedback
get_from_user (raw): 'container'
get_from_user (processed): 'container'
parse_and_ground_utterance: parsed 'container' to container
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	container 1.0
say_to_user_with_referents: You want me to deliver <p>this</p> to <r>this person</r>? {'action': 'bring', 'recipient': 'n', 'patient': 'oidx_22'}
get_from_user requested feedback
get_from_user (raw): 'yes'
get_from_user (processed): 'yes'
parse_and_ground_utterance: parsed 'yes' to yes
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	yes 1.0
perform_action: {'action': 'bring', 'recipient': 'n', 'patient': 'oidx_22', 'goal': None, 'source': None}
main: ... done; got action {'action': 'bring', 'recipient': 'n', 'patient': 'oidx_22', 'goal': None, 'source': None}
main: writing new information from dialog(s) to file...
main: ... done; wrote data d = [[{'action': 'move', 'recipient': None, 'patient': 'oidx_13', 'goal': '3510', 'source': '3424'}, {'action': 'bring', 'recipient': 'n', 'patient': 'oidx_22', 'goal': None, 'source': None}], [{'all': [''], 'patient': ['yes'], 'goal': [], 'source': ['go to the red x'], 'action': [], 'recipient': []}, {'all': ['get the object'], 'patient': ['container', 'container'], 'goal': [], 'source': [], 'action': [], 'recipient':