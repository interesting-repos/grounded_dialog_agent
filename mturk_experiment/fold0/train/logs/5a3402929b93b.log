No handlers could be found for logger "gensim.models.doc2vec"
main: loading grounder from file...
main: ... done
main: instantiating IO...
main: ... done
main: instantiating Agent...
main: ... done
main: running command dialog...
say_to_user_with_referents: What should I do? {}
get_from_user requested feedback
get_from_user (raw): 'go to the office M'
get_from_user (processed): 'go to the office m'
say_to_user: I haven't heard the word 'm' before. Does it refer to properties of things, like a color, shape, or weight?
get_from_user requested feedback
get_from_user (raw): 'yes'
get_from_user (processed): 'yes'
parse_and_ground_utterance: parsed 'yes' to yes
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	yes 1.0
say_to_user: Does 'm' mean the same thing as 'metallic'?
get_from_user requested feedback
get_from_user (raw): 'no'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
parse_and_ground_utterance: parsed 'go to the office m' to walk(a_l(lambda 1:l.(office(1))))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	walk(3402) 0.0909090909091
	walk(3404) 0.0909090909091
	walk(3418) 0.0909090909091
	walk(3420) 0.0909090909091
	walk(3422) 0.0909090909091
	walk(3430) 0.0909090909091
	walk(3432) 0.0909090909091
	walk(3502) 0.0909090909091
	walk(3508) 0.0909090909091
	walk(3510) 0.0909090909091
	walk(3512) 0.0909090909091
say_to_user: I'm still learning the meanings of some words. I'm going to ask you a few questions about these nearby objects before we continue.
say_to_user_with_referents: Among these nearby objects, could you show me one you would use the word 'tower' when describing, or shake your head if there are none? {}
get_oidx_from_user requested feedback
get_oidx_from_user: None
parse_and_ground_utterance: parsed 'go to the office m' to walk(a_l(lambda 1:l.(office(1))))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	walk(3402) 0.0909090909091
	walk(3404) 0.0909090909091
	walk(3418) 0.0909090909091
	walk(3420) 0.0909090909091
	walk(3422) 0.0909090909091
	walk(3430) 0.0909090909091
	walk(3432) 0.0909090909091
	walk(3502) 0.0909090909091
	walk(3508) 0.0909090909091
	walk(3510) 0.0909090909091
	walk(3512) 0.0909090909091
say_to_user_with_referents: Among these nearby objects, could you show me one you would use the word 'white' when describing, or shake your head if there are none? {}
get_oidx_from_user requested feedback
get_oidx_from_user: None
parse_and_ground_utterance: parsed 'go to the office m' to walk(a_l(lambda 1:l.(office(1))))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	walk(3402) 0.0909090909091
	walk(3404) 0.0909090909091
	walk(3418) 0.0909090909091
	walk(3420) 0.0909090909091
	walk(3422) 0.0909090909091
	walk(3430) 0.0909090909091
	walk(3432) 0.0909090909091
	walk(3502) 0.0909090909091
	walk(3508) 0.0909090909091
	walk(3510) 0.0909090909091
	walk(3512) 0.0909090909091
say_to_user_with_referents: Among these nearby objects, could you show me one you would use the word 'container' when describing, or shake your head if there are none? {}
get_oidx_from_user requested feedback
get_oidx_from_user: None
parse_and_ground_utterance: parsed 'go to the office m' to walk(a_l(lambda 1:l.(office(1))))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	walk(3402) 0.0909090909091
	walk(3404) 0.0909090909091
	walk(3418) 0.0909090909091
	walk(3420) 0.0909090909091
	walk(3422) 0.0909090909091
	walk(3430) 0.0909090909091
	walk(3432) 0.0909090909091
	walk(3502) 0.0909090909091
	walk(3508) 0.0909090909091
	walk(3510) 0.0909090909091
	walk(3512) 0.0909090909091
say_to_user_with_referents: Among these nearby objects, could you show me one you would use the word 'clear' when describing, or shake your head if there are none? {}
get_oidx_from_user requested feedback
get_oidx_from_user: None
parse_and_ground_utterance: parsed 'go to the office m' to walk(a_l(lambda 1:l.(office(1))))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	walk(3402) 0.0909090909091
	walk(3404) 0.0909090909091
	walk(3418) 0.0909090909091
	walk(3420) 0.0909090909091
	walk(3422) 0.0909090909091
	walk(3430) 0.0909090909091
	walk(3432) 0.0909090909091
	walk(3502) 0.0909090909091
	walk(3508) 0.0909090909091
	walk(3510) 0.0909090909091
	walk(3512) 0.0909090909091
say_to_user_with_referents: Among these nearby objects, could you show me one you would use the word 'long' when describing, or shake your head if there are none? {}
get_oidx_from_user requested feedback
get_oidx_from_user: None
parse_and_ground_utterance: parsed 'go to the office m' to walk(a_l(lambda 1:l.(office(1))))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	walk(3402) 0.0909090909091
	walk(3404) 0.0909090909091
	walk(3418) 0.0909090909091
	walk(3420) 0.0909090909091
	walk(3422) 0.0909090909091
	walk(3430) 0.0909090909091
	walk(3432) 0.0909090909091
	walk(3502) 0.0909090909091
	walk(3508) 0.0909090909091
	walk(3510) 0.0909090909091
	walk(3512) 0.0909090909091
say_to_user: Thanks. Now, back to business.
say_to_user_with_referents: You want me to go somewhere? (not manipulate any objects) {'action': 'walk'}
get_from_user requested feedback
get_from_user (raw): 'yes'
get_from_user (processed): 'yes'
parse_and_ground_utterance: parsed 'yes' to yes
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	yes 1.0
say_to_user_with_referents: Where should I go? {'action': 'walk'}
get_from_user requested feedback
get_from_user (raw): 'office M'
get_from_user (processed): 'office m'
parse_and_ground_utterance: parsed 'office m' to m_0
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	m_0 1.0
say_to_user: Sorry, I didn't understand that.
say_to_user_with_referents: Where should I go? {'action': 'walk'}
get_from_user requested feedback
get_from_user (raw): 'TO THE OFFICE M'
get_from_user (processed): 'to the office m'
parse_and_ground_utterance: parsed 'to the office m' to a_l(lambda 1:l.(office(1)))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	3402 0.0909090909091
	3404 0.0909090909091
	3418 0.0909090909091
	3420 0.0909090909091
	3422 0.0909090909091
	3430 0.0909090909091
	3432 0.0909090909091
	3502 0.0909090909091
	3508 0.0909090909091
	3510 0.0909090909091
	3512 0.0909090909091
say_to_user: Sorry, I didn't understand that.
say_to_user_with_referents: Where should I go? {'action': 'walk'}
get_from_user requested feedback
get_from_user (raw): 'GO TO OFFICE'
get_from_user (processed): 'go to office'
parse_and_ground_utterance: parsed 'go to office' to walk(a_l(lambda 1:l.(office(1))))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	walk(3402) 0.0909090909091
	walk(3404) 0.0909090909091
	walk(3418) 0.0909090909091
	walk(3420) 0.0909090909091
	walk(3422) 0.0909090909091
	walk(3430) 0.0909090909091
	walk(3432) 0.0909090909091
	walk(3502) 0.0909090909091
	walk(3508) 0.0909090909091
	walk(3510) 0.0909090909091
	walk(3512) 0.0909090909091
say_to_user_with_referents: You want me to go to <g>here</g> (not manipulate any objects)? {'action': 'walk', 'goal': '3508'}
get_from_user requested feedback
get_from_user (raw): 'NO'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
say_to_user_with_referents: Where should I go? {'action': 'walk'}
get_from_user requested feedback
get_from_user (raw): 'GO TO THE OFFICE'
get_from_user (processed): 'go to the office'
parse_and_ground_utterance: parsed 'go to the office' to walk(a_l(lambda 1:l.(office(1))))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	walk(3402) 0.0909090909091
	walk(3404) 0.0909090909091
	walk(3418) 0.0909090909091
	walk(3420) 0.0909090909091
	walk(3422) 0.0909090909091
	walk(3430) 0.0909090909091
	walk(3432) 0.0909090909091
	walk(3502) 0.0909090909091
	walk(3508) 0.0909090909091
	walk(3510) 0.0909090909091
	walk(3512) 0.0909090909091
say_to_user: Sorry, I didn't understand that.
say_to_user_with_referents: Where should I go? {'action': 'walk'}
get_from_user requested feedback
get_from_user (raw): 'GO TO THE OFFICE M'
get_from_user (processed): 'go to the office m'
parse_and_ground_utterance: parsed 'go to the office m' to walk(a_l(lambda 1:l.(office(1))))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	walk(3402) 0.0909090909091
	walk(3404) 0.0909090909091
	walk(3418) 0.0909090909091
	walk(3420) 0.0909090909091
	walk(3422) 0.0909090909091
	walk(3430) 0.0909090909091
	walk(3432) 0.0909090909091
	walk(3502) 0.0909090909091
	walk(3508) 0.0909090909091
	walk(3510) 0.0909090909091
	walk(3512) 0.0909090909091
say_to_user_with_referents: You want me to go to <g>here</g> (not manipulate any objects)? {'action': 'walk', 'goal': '3422'}
get_from_user requested feedback
get_from_user (raw): 'NO'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
say_to_user_with_referents: Where should I go? {'action': 'walk'}
get_from_user requested feedback
get_from_user (raw): 'GO TO THE OFFICE M'
get_from_user (processed): 'go to the office m'
parse_and_ground_utterance: parsed 'go to the office m' to walk(a_l(lambda 1:l.(office(1))))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	walk(3402) 0.0909090909091
	walk(3404) 0.0909090909091
	walk(3418) 0.0909090909091
	walk(3420) 0.0909090909091
	walk(3422) 0.0909090909091
	walk(3430) 0.0909090909091
	walk(3432) 0.0909090909091
	walk(3502) 0.0909090909091
	walk(3508) 0.0909090909091
	walk(3510) 0.0909090909091
	walk(3512) 0.0909090909091
say_to_user_with_referents: You want me to go to <g>here</g> (not manipulate any objects)? {'action': 'walk', 'goal': '3510'}
get_from_user requested feedback
get_from_user (raw): 'NO'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
say_to_user_with_referents: Where should I go? {'action': 'walk'}
get_from_user requested feedback
get_from_user (raw): 'GO TO THE OFFICE M'
get_from_user (processed): 'go to the office m'
parse_and_ground_utterance: parsed 'go to the office m' to walk(a_l(lambda 1:l.(office(1))))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	walk(3402) 0.0909090909091
	walk(3404) 0.0909090909091
	walk(3418) 0.0909090909091
	walk(3420) 0.0909090909091
	walk(3422) 0.0909090909091
	walk(3430) 0.0909090909091
	walk(3432) 0.0909090909091
	walk(3502) 0.0909090909091
	walk(3508) 0.0909090909091
	walk(3510) 0.0909090909091
	walk(3512) 0.0909090909091
say_to_user: Sorry, I didn't understand that.
say_to_user_with_referents: You want me to go to <g>here</g> (not manipulate any objects)? {'action': 'walk', 'goal': '3402'}
get_from_user requested feedback
get_from_user (raw): 'NO'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
say_to_user_with_referents: Where should I go? {'action': 'walk'}
get_from_user requested feedback
get_from_user (raw): 'GO TO THE OFFICE M'
get_from_user (processed): 'go to the office m'
parse_and_ground_utterance: parsed 'go to the office m' to walk(a_l(lambda 1:l.(office(1))))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	walk(3402) 0.0909090909091
	walk(3404) 0.0909090909091
	walk(3418) 0.0909090909091
	walk(3420) 0.0909090909091
	walk(3422) 0.0909090909091
	walk(3430) 0.0909090909091
	walk(3432) 0.0909090909091
	walk(3502) 0.0909090909091
	walk(3508) 0.0909090909091
	walk(3510) 0.0909090909091
	walk(3512) 0.0909090909091
say_to_user_with_referents: You want me to go to <g>here</g> (not manipulate any objects)? {'action': 'walk', 'goal': '3512'}
get_from_user requested feedback
get_from_user (raw): 'NO'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
say_to_user_with_referents: Where should I go? {'action': 'walk'}
get_from_user requested feedback
get_from_user (raw): 'Mallory "Mal" Maroon'
get_from_user (processed): 'mallory mal maroon'
say_to_user: I haven't heard the word 'maroon' before. Does it refer to properties of things, like a color, shape, or weight?
get_from_user requested feedback
get_from_user (raw): 'NO'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
parse_and_ground_utterance: parsed 'mallory mal maroon' to lambda 1:<l,t>.(a_l(lambda 2:l.(and(1(2),possesses(m,2)))))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	3502 0.333333333333
	3502 0.333333333333
	3502 0.333333333333
say_to_user_with_referents: You want me to go to <g>here</g> (not manipulate any objects)? {'action': 'walk', 'goal': '3508'}
get_from_user requested feedback
get_from_user (raw): 'NO'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
say_to_user_with_referents: You want me to go to <g>here</g> (not manipulate any objects)? {'action': 'walk', 'goal': '3502'}
get_from_user requested feedback
get_from_user (raw): 'YES'
get_from_user (processed): 'yes'
parse_and_ground_utterance: parsed 'yes' to yes
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	yes 1.0
perform_action: {'action': 'walk', 'recipient': None, 'patient': None, 'goal': '3502', 'source': None}
main: ... done; got action {'action': 'walk', 'recipient': None, 'patient': None, 'goal': '3502', 'source': None}
main: writing new information from dialog(s) to file...
main: ... done; wrote data d = [[{'action': 'walk', 'recipient': None, 'patient': None, 'goal': '3502', 'source': None}], [{'all': ['go to the office m'], 'patient': [], 'goal': ['office m', 'to the office m', 'go to office', 'go to the office', 'go to the office m', 'go to the office m', 'go to the office m', 'go to the office m', 'mallory mal maroon'], 'source': [], 'action': [], 'recipient': []}], [('tower', 10, 0), ('tower', 3, 0), ('tower', 27, 0), ('tower', 7, 0), ('tower', 18, 0), ('tower', 2, 0), ('tower', 20, 0), ('tower', 17, 0), ('white', 10, 0), ('white', 3, 0), ('white', 27, 0), ('white', 7, 0), ('white', 18, 0), ('white', 2, 0), ('white', 20, 0), ('white', 17, 0), ('container', 10, 0), ('container', 3, 0), ('container', 27, 0), ('container', 7, 0), ('container', 18, 0), ('container', 2, 0), ('container', 20, 0), ('container', 17, 0), ('clear', 10, 0), ('clear', 3, 0), ('clear', 27, 0), ('clear', 7, 0), ('clear', 18, 0), ('clear', 2, 0), ('clear', 20, 0), ('clear', 17, 0), ('long', 10, 0), ('long', 3, 0), ('long', 27, 0), ('long', 7, 0), ('long', 18, 0), ('long', 2, 0), ('long', 20, 0), ('long', 17, 0)], [('m', 'metallic', False)]]
main: running command dialog...
say_to_user_with_referents: What should I do? {}
get_from_user requested feedback
get_from_user (raw): 'Dr. Heidi Hughes needs a soda can'
get_from_user (processed): 'dr heidi hughes needs a soda can'
say_to_user: I haven't heard the word 'soda' before. Does it refer to properties of things, like a color, shape, or weight?
get_from_user requested feedback
get_from_user (raw): 'no'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
parse_and_ground_utterance: parsed 'dr heidi hughes needs a soda can' to bring(and(a_i(lambda 1:i.(can(1))),a_i(lambda 1:i.(can(1)))),h)
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	bring(oidx_6,h) 0.125
	bring(oidx_11,h) 0.125
	bring(oidx_12,h) 0.125
	bring(oidx_13,h) 0.125
	bring(oidx_22,h) 0.125
	bring(oidx_25,h) 0.125
	bring(oidx_26,h) 0.125
	bring(oidx_28,h) 0.125
say_to_user: I'm still learning the meanings of some words. I'm going to ask you a few questions about th