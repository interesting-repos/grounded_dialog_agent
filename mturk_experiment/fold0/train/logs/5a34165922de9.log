No handlers could be found for logger "gensim.models.doc2vec"
main: loading grounder from file...
main: ... done
main: instantiating IO...
main: ... done
main: instantiating Agent...
main: ... done
main: running command dialog...
say_to_user_with_referents: What should I do? {}
get_from_user requested feedback
get_from_user (raw): 'Go to Bob'sfice.'
get_from_user (processed): 'go to bob'sfice 's'
parse_and_ground_utterance: parsed 'go to bob'sfice 's' to walk(a_l(lambda 1:l.(middle(1))))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	walk(3410) 0.25
	walk(3414) 0.25
	walk(3420) 0.25
	walk(3510) 0.25
say_to_user: I'm still learning the meanings of some words. I'm going to ask you a few questions about these nearby objects before we continue.
say_to_user_with_referents: Among these nearby objects, could you show me one you would use the word 'cylinder' when describing, or shake your head if there are none? {}
get_oidx_from_user requested feedback
get_oidx_from_user: 20
parse_and_ground_utterance: parsed 'go to bob'sfice 's' to walk(a_l(lambda 1:l.(pod(1))))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	walk(3408) 0.2
	walk(3410) 0.2
	walk(3424) 0.2
	walk(3504) 0.2
	walk(3518) 0.2
say_to_user_with_referents: Among these nearby objects, could you show me one you would use the word 'styrofoam' when describing, or shake your head if there are none? {}
get_oidx_from_user requested feedback
get_oidx_from_user: 20
parse_and_ground_utterance: parsed 'go to bob'sfice 's' to walk(a_l(lambda 1:l.(east(1))))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	walk(3414) 0.0909090909091
	walk(3414b) 0.0909090909091
	walk(3422) 0.0909090909091
	walk(3424) 0.0909090909091
	walk(3430) 0.0909090909091
	walk(3432) 0.0909090909091
	walk(3436) 0.0909090909091
	walk(3514) 0.0909090909091
	walk(3516) 0.0909090909091
	walk(3518) 0.0909090909091
	walk(3520) 0.0909090909091
say_to_user_with_referents: Among these nearby objects, could you show me one you would use the word 'beans' when describing, or shake your head if there are none? {}
get_oidx_from_user requested feedback
get_oidx_from_user: None
parse_and_ground_utterance: parsed 'go to bob'sfice 's' to walk(a_l(lambda 1:l.(middle(1))))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	walk(3410) 0.25
	walk(3414) 0.25
	walk(3420) 0.25
	walk(3510) 0.25
say_to_user_with_referents: Among these nearby objects, could you show me one you would use the word 'spices' when describing, or shake your head if there are none? {}
get_oidx_from_user requested feedback
get_oidx_from_user: None
parse_and_ground_utterance: parsed 'go to bob'sfice 's' to walk(a_l(lambda 1:l.(middle(1))))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	walk(3410) 0.25
	walk(3414) 0.25
	walk(3420) 0.25
	walk(3510) 0.25
say_to_user_with_referents: Among these nearby objects, could you show me one you would use the word 'empty' when describing, or shake your head if there are none? {}
get_oidx_from_user requested feedback
get_oidx_from_user: 20
parse_and_ground_utterance: parsed 'go to bob'sfice 's' to walk(a_l(lambda 1:l.(printer(1))))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	walk(3506) 1.0
say_to_user: Thanks. Now, back to business.
say_to_user_with_referents: You want me to go somewhere? (not manipulate any objects) {'action': 'walk'}
get_from_user requested feedback
get_from_user (raw): 'Go to Bob's office'
get_from_user (processed): 'go to bob 's office'
parse_and_ground_utterance: parsed 'go to bob 's office' to walk(a_l(lambda 1:l.(and(possesses(b,1),office(1)))))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	walk(3510) 1.0
say_to_user: I am expecting a simple 'yes' or 'no' response.
say_to_user_with_referents: You want me to go somewhere? (not manipulate any objects) {'action': 'walk'}
get_from_user requested feedback
get_from_user (raw): 'yes'
get_from_user (processed): 'yes'
parse_and_ground_utterance: parsed 'yes' to yes
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	yes 1.0
say_to_user_with_referents: Where should I go? {'action': 'walk'}
get_from_user requested feedback
get_from_user (raw): 'Go to Bob's office'
get_from_user (processed): 'go to bob 's office'
parse_and_ground_utterance: parsed 'go to bob 's office' to walk(a_l(lambda 1:l.(and(possesses(b,1),office(1)))))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	walk(3510) 1.0
say_to_user_with_referents: You want me to go to <g>here</g> (not manipulate any objects)? {'action': 'walk', 'goal': '3510'}
get_from_user requested feedback
get_from_user (raw): 'Yes'
get_from_user (processed): 'yes'
parse_and_ground_utterance: parsed 'yes' to yes
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	yes 1.0
perform_action: {'action': 'walk', 'recipient': None, 'patient': None, 'goal': '3510', 'source': None}
main: ... done; got action {'action': 'walk', 'recipient': None, 'patient': None, 'goal': '3510', 'source': None}
main: writing new information from dialog(s) to file...
main: ... done; wrote data d = [[{'action': 'walk', 'recipient': None, 'patient': None, 'goal': '3510', 'source': None}], [{'all': ["go to bob'sfice 's"], 'patient': [], 'goal': ["go to bob 's office"], 'source': [], 'action': [], 'recipient': []}], [('cylinder', 20, 1), ('styrofoam', 20, 1), ('bean', 10, 0), ('bean', 3, 0), ('bean', 27, 0), ('bean', 7, 0), ('bean', 18, 0), ('bean', 2, 0), ('bean', 20, 0), ('bean', 17, 0), ('spice', 10, 0), ('spice', 3, 0), ('spice', 27, 0), ('spice', 7, 0), ('spice', 18, 0), ('spice', 2, 0), ('spice', 20, 0), ('spice', 17, 0), ('empty', 20, 1)], []]
main: running command dialog...
say_to_user_with_referents: What should I do? {}
get_from_user requested feedback
get_from_user (raw): 'Give Peggy the wet wipes'
get_from_user (processed): 'give peggy the wet wipes'
say_to_user: I haven't heard the word 'wet' before. Does it refer to properties of things, like a color, shape, or weight?
get_from_user requested feedback
get_from_user (raw): 'yes'
get_from_user (processed): 'yes'
parse_and_ground_utterance: parsed 'yes' to yes
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	yes 1.0
say_to_user: Does 'wet' mean the same thing as 'white'?
get_from_user requested feedback
get_from_user (raw): 'no'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
say_to_user: Does 'wet' mean the same thing as 'yellow'?
get_from_user requested feedback
get_from_user (raw): 'no, nevermind the wet'
get_from_user (processed): 'no nevermind the wet'
parse_and_ground_utterance: parsed 'no nevermind the wet' to and(yes,yes,no)
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	
say_to_user: I am expecting a simple 'yes' or 'no' response.
say_to_user: Does 'wet' mean the same thing as 'yellow'?
get_from_user requested feedback
get_from_user (raw): 'no'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
say_to_user: Does 'wet' mean the same thing as 'blue'?
get_from_user requested feedback
get_from_user (raw): 'no'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
say_to_user: I haven't heard the word 'wipes' before. Does it refer to properties of things, like a color, shape, or weight?
get_from_user requested feedback
get_from_user (raw): 'no'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
parse_and_ground_utterance: parsed 'give peggy the wet wipes' to lambda 1:i.(bring(1,and(p,d)))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	
say_to_user_with_referents: You want me to deliver something for someone? {'action': 'bring'}
get_from_user requested feedback
get_from_user (raw): 'yes'
get_from_user (processed): 'yes'
parse_and_ground_utterance: parsed 'yes' to yes
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	yes 1.0
say_to_user_with_referents: What should I find to deliver? {'action': 'bring'}
get_from_user requested feedback
get_from_user (raw): 'A white cylinder'
get_from_user (processed): 'a white cylinder'
parse_and_ground_utterance: parsed 'a white cylinder' to and(a_i(lambda 1:i.(white(1))),a_i(lambda 0:i.(cylinder(0))))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	oidx_6 0.125
	oidx_11 0.125
	oidx_12 0.125
	oidx_13 0.125
	oidx_22 0.125
	oidx_25 0.125
	oidx_26 0.125
	oidx_28 0.125
say_to_user: I'm still learning the meanings of some words. I'm going to ask you a few questions about these nearby objects before we continue.
say_to_user_with_referents: Among these nearby objects, could you show me one you would use the word 'white' when describing, or shake your head if there are none? {}
get_oidx_from_user requested feedback
get_oidx_from_user: 10
parse_and_ground_utterance: parsed 'a white cylinder' to and(a_i(lambda 1:i.(white(1))),a_i(lambda 0:i.(cylinder(0))))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	oidx_6 0.125
	oidx_11 0.125
	oidx_12 0.125
	oidx_13 0.125
	oidx_22 0.125
	oidx_25 0.125
	oidx_26 0.125
	oidx_28 0.125
say_to_user_with_referents: Among these nearby objects, could you show me one you could not use the word 'white' when describing, or shake your head if you could use 'white' when describing all of them? {}
get_oidx_from_user requested feedback
get_oidx_from_user: 7
parse_and_ground_utterance: parsed 'a white cylinder' to and(a_i(lambda 1:i.(white(1))),a_i(lambda 0:i.(cylinder(0))))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	oidx_22 0.20618556701
	oidx_25 0.151202749141
	oidx_12 0.134020618557
	oidx_6 0.13058419244
	oidx_26 0.113402061856
	oidx_28 0.109965635739
	oidx_11 0.0996563573883
	oidx_13 0.0549828178694
say_to_user_with_referents: Among these nearby objects, could you show me one you would use the word 'white' when describing, or shake your head if there are none? {}
get_oidx_from_user requested feedback
get_oidx_from_user: 10
parse_and_ground_utterance: parsed 'a white cylinder' to and(a_i(lambda 1:i.(white(1))),a_i(lambda 0:i.(cylinder(0))))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	oidx_22 0.20618556701
	oidx_25 0.151202749141
	oidx_12 0.134020618557
	oidx_6 0.13058419244
	oidx_26 0.113402061856
	oidx_28 0.109965635739
	oidx_11 0.0996563573883
	oidx_13 0.0549828178694
say_to_user_with_referents: Among these nearby objects, could you show me one you could not use the word 'cylinder' when describing, or shake your head if you could use 'cylinder' when describing all of them? {}
get_oidx_from_user requested feedback
get_oidx_from_user: 27
parse_and_ground_utterance: parsed 'a white cylinder' to and(a_i(lambda 1:i.(white(1))),a_i(lambda 0:i.(cylinder(0))))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	oidx_22 0.218882241354
	oidx_28 0.151758354006
	oidx_25 0.134831460674
	oidx_6 0.130307894353
	oidx_12 0.128046111192
	oidx_26 0.1227929374
	oidx_13 0.0583685976944
	oidx_11 0.055012403327
say_to_user_with_referents: Among these nearby objects, could you show me one you would use the word 'cylinder' when describing, or shake your head if there are none? {}
get_oidx_from_user requested feedback
get_oidx_from_user: 10
parse_and_ground_utterance: parsed 'a white cylinder' to and(a_i(lambda 1:i.(white(1))),a_i(lambda 0:i.(cylinder(0))))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	oidx_22 0.219601058078
	oidx_25 0.142008684224
	oidx_12 0.138847759903
	oidx_26 0.117486566072
	oidx_6 0.115689830142
	oidx_28 0.112329268496
	oidx_11 0.0960089171339
	oidx_13 0.0580279159527
say_to_user: Thanks. Now, back to business.
say_to_user_with_referents: You want me to deliver something to <r>this person</r>? {'action': 'bring', 'recipient': 'd'}
get_from_user requested feedback
get_from_user (raw): 'no'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
say_to_user_with_referents: What should I find to deliver? {'action': 'bring'}
get_from_user requested feedback
get_from_user (raw): 'white cylinder'
get_from_user (processed): 'white cylinder'
parse_and_ground_utterance: parsed 'white cylinder' to lambda 0:i.(and(cylinder(0),white(0)))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	True 0.202165622655
	True 0.130733769317
	True 0.127823809597
	True 0.10815860812
	True 0.106504525753
	True 0.103410779103
	True 0.0883861976016
	True 0.0534207342288
	False 0.026633789227
	False 0.0180111191092
	False 0.0163264055871
	False 0.00730553045503
	False 0.00477846017184
	False 0.00422709938278
	False 0.00211354969139
say_to_user_with_referents: You want me to deliver something to <r>this person</r>? {'action': 'bring', 'recipient': 'd'}
get_from_user requested feedback
get_from_user (raw): 'Peggy Parker'
get_from_user (processed): 'peggy parker'
parse_and_ground_utterance: parsed 'peggy parker' to p
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	p 1.0
say_to_user: I am expecting a simple 'yes' or 'no' response.
say_to_user_with_referents: You want me to deliver something to <r>this person</r>? {'action': 'bring', 'recipient': 'd'}
get_from_user requested feedback
get_from_user (raw): 'no'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
say_to_user_with_referents: What should I find to deliver? {'action': 'bring'}
get_from_user requested feedback
get_from_user (raw): 'white cylinder'
get_from_user (processed): 'white cylinder'
parse_and_ground_utterance: parsed 'white cylinder' to lambda 0:i.(and(cylinder(0),white(0)))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	True 0.202165622655
	True 0.130733769317
	True 0.127823809597
	True 0.10815860812
	True 0.106504525753
	True 0.103410779103
	True 0.0883861976016
	True 0.0534207342288
	False 0.026633789227
	False 0.0180111191092
	False 0.0163264055871
	False 0.00730553045503
	False 0.00477846017184
	False 0.00422709938278
	False 0.00211354969139
say_to_user_with_referents: You want me to deliver <p>this</p> to someone? {'action': 'bring', 'patient': 'oidx_11'}
get_from_user requested feedback
get_from_user (raw): 'no'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
say_to_user_with_referents: What should I find to deliver? {'action': 'bring'}
get_from_user requested feedback
get_from_user (raw): 'white cylinder with red top\'
get_from_user (processed): 'white cylinder with red top'
say_to_user: I haven't heard the word 'red' before. Does it refer to properties of things, like a color, shape, or weight?
get_from_user requested feedback
get_from_user (raw): 'yes'
get_from_user (processed): 'yes'
parse_and_ground_utterance: parsed 'yes' to yes
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	yes 1.0
say_to_user: Does 'red' mean the same thing as 'white'?
get_from_user requested feedback
get_from_user (raw): 'no'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
say_to_user: Does 'red' mean the same thing as 'yellow'?
get_from_user requested feedback
get_from_user (raw): 'no'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
say_to_user: Does 'red' mean the same thing as 'blue'?
get_from_user requested feedback
get_from_user (raw): 'no'
get_from_user (processed): 'no'
parse_