No handlers could be found for logger "gensim.models.doc2vec"
main: loading grounder from file...
main: ... done
main: instantiating IO...
main: ... done
main: instantiating Agent...
main: ... done
main: running command dialog...
say_to_user_with_referents: What should I do? {}
get_from_user requested feedback
get_from_user (raw): 'Go to David's office'
get_from_user (processed): 'go to david 's office'
parse_and_ground_utterance: parsed 'go to david 's office' to walk(a_l(lambda 1:l.(and(possesses(d,1),office(1)))))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	walk(3420) 1.0
say_to_user: I'm still learning the meanings of some words. I'm going to ask you a few questions about these nearby objects before we continue.
say_to_user_with_referents: Among these nearby objects, could you show me one you would use the word 'coffee' when describing, or shake your head if there are none? {}
get_oidx_from_user requested feedback
get_oidx_from_user: None
parse_and_ground_utterance: parsed 'go to david 's office' to walk(a_l(lambda 1:l.(and(possesses(d,1),office(1)))))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	walk(3420) 1.0
say_to_user_with_referents: Among these nearby objects, could you show me one you would use the word 'clear' when describing, or shake your head if there are none? {}
get_oidx_from_user requested feedback
get_oidx_from_user: None
parse_and_ground_utterance: parsed 'go to david 's office' to walk(a_l(lambda 1:l.(and(possesses(d,1),office(1)))))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	walk(3420) 1.0
say_to_user_with_referents: Among these nearby objects, could you show me one you would use the word 'spices' when describing, or shake your head if there are none? {}
get_oidx_from_user requested feedback
get_oidx_from_user: None
parse_and_ground_utterance: parsed 'go to david 's office' to walk(a_l(lambda 1:l.(and(possesses(d,1),office(1)))))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	walk(3420) 1.0
say_to_user_with_referents: Among these nearby objects, could you show me one you would use the word 'long' when describing, or shake your head if there are none? {}
get_oidx_from_user requested feedback
get_oidx_from_user: 3
parse_and_ground_utterance: parsed 'go to david 's office' to walk(a_l(lambda 1:l.(and(possesses(d,1),office(1)))))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	walk(3420) 1.0
say_to_user_with_referents: Among these nearby objects, could you show me one you would use the word 'cylinder' when describing, or shake your head if there are none? {}
get_oidx_from_user requested feedback
get_oidx_from_user: 3
parse_and_ground_utterance: parsed 'go to david 's office' to walk(a_l(lambda 1:l.(and(possesses(d,1),office(1)))))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	walk(3420) 1.0
say_to_user: Thanks. Now, back to business.
say_to_user_with_referents: You want me to go somewhere? (not manipulate any objects) {'action': 'walk'}
get_from_user requested feedback
get_from_user (raw): 'yes'
get_from_user (processed): 'yes'
parse_and_ground_utterance: parsed 'yes' to yes
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	yes 1.0
say_to_user_with_referents: You want me to go to <g>here</g> (not manipulate any objects)? {'action': 'walk', 'goal': '3420'}
get_from_user requested feedback
get_from_user (raw): 'yes'
get_from_user (processed): 'yes'
parse_and_ground_utterance: parsed 'yes' to yes
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	yes 1.0
perform_action: {'action': 'walk', 'recipient': None, 'patient': None, 'goal': '3420', 'source': None}
main: ... done; got action {'action': 'walk', 'recipient': None, 'patient': None, 'goal': '3420', 'source': None}
main: writing new information from dialog(s) to file...
main: ... done; wrote data d = [[{'action': 'walk', 'recipient': None, 'patient': None, 'goal': '3420', 'source': None}], [{'all': ["go to david 's office"], 'patient': [], 'goal': [], 's