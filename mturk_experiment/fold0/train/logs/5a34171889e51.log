No handlers could be found for logger "gensim.models.doc2vec"
main: loading grounder from file...
main: ... done
main: instantiating IO...
main: ... done
main: instantiating Agent...
main: ... done
main: running command dialog...
say_to_user_with_referents: What should I do? {}
get_from_user requested feedback
get_from_user (raw): 'turn right'
get_from_user (processed): 'turn right'
parse_and_ground_utterance: parsed 'turn right' to lambda 0:l.(and(east(0),east(0)))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	False 0.0384615384615
	False 0.0384615384615
	False 0.0384615384615
	False 0.0384615384615
	False 0.0384615384615
	True 0.0384615384615
	False 0.0384615384615
	True 0.0384615384615
	False 0.0384615384615
	False 0.0384615384615
	False 0.0384615384615
	True 0.0384615384615
	True 0.0384615384615
	True 0.0384615384615
	True 0.0384615384615
	True 0.0384615384615
	False 0.0384615384615
	False 0.0384615384615
	False 0.0384615384615
	False 0.0384615384615
	False 0.0384615384615
	False 0.0384615384615
	True 0.0384615384615
	True 0.0384615384615
	True 0.0384615384615
	True 0.0384615384615
say_to_user: I'm still learning the meanings of some words. I'm going to ask you a few questions about these nearby objects before we continue.
say_to_user_with_referents: Among these nearby objects, could you show me one you would use the word 'pringles' when describing, or shake your head if there are none? {}
get_oidx_from_user requested feedback
get_oidx_from_user: None
parse_and_ground_utterance: parsed 'turn right' to lambda 0:l.(and(east(0),west(0)))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	
say_to_user_with_referents: Among these nearby objects, could you show me one you would use the word 'block' when describing, or shake your head if there are none? {}
get_oidx_from_user requested feedback
get_oidx_from_user: None
parse_and_ground_utterance: parsed 'turn right' to lambda 0:l.(and(east(0),south(0)))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	False 0.0769230769231
	False 0.0769230769231
	False 0.0769230769231
	False 0.0769230769231
	False 0.0769230769231
	False 0.0769230769231
	False 0.0769230769231
	False 0.0769230769231
	False 0.0769230769231
	True 0.0769230769231
	True 0.0769230769231
	True 0.0769230769231
	True 0.0769230769231
say_to_user_with_referents: Among these nearby objects, could you show me one you would use the word 'coffee' when describing, or shake your head if there are none? {}
get_oidx_from_user requested feedback
get_oidx_from_user: None
parse_and_ground_utterance: parsed 'turn right' to lambda 0:l.(and(lab(0),east(0)))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	False 0.0588235294118
	False 0.0588235294118
	False 0.0588235294118
	False 0.0588235294118
	False 0.0588235294118
	True 0.0588235294118
	True 0.0588235294118
	False 0.0588235294118
	False 0.0588235294118
	False 0.0588235294118
	True 0.0588235294118
	False 0.0588235294118
	False 0.0588235294118
	False 0.0588235294118
	False 0.0588235294118
	False 0.0588235294118
	False 0.0588235294118
say_to_user_with_referents: Among these nearby objects, could you show me one you would use the word 'column' when describing, or shake your head if there are none? {}
get_oidx_from_user requested feedback
get_oidx_from_user: 3
parse_and_ground_utterance: parsed 'turn right' to lambda 0:l.(and(lab(0),east(0)))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	False 0.0588235294118
	False 0.0588235294118
	False 0.0588235294118
	False 0.0588235294118
	False 0.0588235294118
	True 0.0588235294118
	True 0.0588235294118
	False 0.0588235294118
	False 0.0588235294118
	False 0.0588235294118
	True 0.0588235294118
	False 0.0588235294118
	False 0.0588235294118
	False 0.0588235294118
	False 0.0588235294118
	False 0.0588235294118
	False 0.0588235294118
say_to_user_with_referents: Among these nearby objects, could you show me one you would use the word 'yellow' when describing, or shake your head if there are none? {}
get_oidx_from_user requested feedback
get_oidx_from_user: None
parse_and_ground_utterance: parsed 'turn right' to lambda 0:l.(and(east(0),east(0)))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	False 0.0384615384615
	False 0.0384615384615
	False 0.0384615384615
	False 0.0384615384615
	False 0.0384615384615
	True 0.0384615384615
	False 0.0384615384615
	True 0.0384615384615
	False 0.0384615384615
	False 0.0384615384615
	False 0.0384615384615
	True 0.0384615384615
	True 0.0384615384615
	True 0.0384615384615
	True 0.0384615384615
	True 0.0384615384615
	False 0.0384615384615
	False 0.0384615384615
	False 0.0384615384615
	False 0.0384615384615
	False 0.0384615384615
	False 0.0384615384615
	True 0.0384615384615
	True 0.0384615384615
	True 0.0384615384615
	True 0.0384615384615
say_to_user: Thanks. Now, back to business.
say_to_user_with_referents: You want me to deliver something for someone? {'action': 'bring'}
get_from_user requested feedback
get_from_user (raw): 'P'
get_from_user (processed): 'p'
parse_and_ground_utterance: parsed 'p' to south
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	south 1.0
say_to_user: I am expecting a simple 'yes' or 'no' response.
say_to_user_with_referents: You want me to deliver something for someone? {'action': 'bring'}
get_from_user requested feedback
get_from_user (raw): 'yes'
get_from_user (processed): 'yes'
parse_and_ground_utterance: parsed 'yes' to yes
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	yes 1.0
say_to_user_with_referents: What should I find to deliver? {'action': 'bring'}
get_from_user requested feedback
get_from_user (raw): 'peggy parker'
get_from_user (processed): 'peggy parker'
parse_and_ground_utterance: parsed 'peggy parker' to p
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	p 1.0
say_to_user_with_referents: You want me to deliver <p>this</p> to someone? {'action': 'bring', 'patient': 'oidx_11'}
get_from_user requested feedback
get_from_user (raw): 'yes'
get_from_user (processed): 'yes'
parse_and_ground_utterance: parsed 'yes' to yes
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	yes 1.0
say_to_user_with_referents: To whom should I deliver <p>this</p>? {'action': 'bring', 'patient': 'oidx_11'}
get_from_user requested feedback
get_from_user (raw): 'peggy parker'
get_from_user (processed): 'peggy parker'
parse_and_ground_utterance: parsed 'peggy parker' to p
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	p 1.0
say_to_user_with_referents: You want me to deliver <p>this</p> to <r>this person</r>? {'action': 'bring', 'recipient': 'p', 'patient': 'oidx_11'}
get_from_user requested feedback
get_from_user (raw): 'yes'
get_from_user (processed): 'yes'
parse_and_ground_utterance: parsed 'yes' to yes
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	yes 1.0
perform_action: {'action': 'bring', 'recipient': 'p', 'patient': 'oidx_11', 'goal': None, 'source': None}
main: ... done; got action {'action': 'bring', 'recipient': 'p', 'patient': 'oidx_11', 'goal': None, 'source': None}
main: writing new information from dialog(s) to file...
main: ... done; wrote data d = [[{'action': 'bring', 'recipient': 'p', 'patient': 'oidx_11', 'goal': None, 'source': None}], [{'all': ['turn right'], 'patient': ['peggy parker'], 'goal': [], 'source': [], 'action': [], 'recipient': ['peggy parker']}], [('pringles', 10, 0), ('pringles', 3, 0), ('pringles', 27, 0), ('pringles', 7, 0), ('pringles', 18, 0), ('pringles', 2, 0), ('pringles', 20, 0), ('pringles', 17, 0), ('block', 10, 0), ('block', 3, 0), ('block', 27, 0), ('block', 7, 0), ('block', 18, 0), ('block', 2, 0), ('block', 20, 0), ('block', 17, 0), ('coffee', 10, 0), ('coffee', 3, 0), ('coffee', 27, 0), ('coffee', 7, 0), ('coffee', 18, 0), ('coffee', 2, 0), ('coffee', 20, 0), ('coffee', 17, 0), ('column', 3, 1), ('yellow', 10, 0), ('yellow', 3, 0), ('yellow', 27, 0), ('yellow', 7, 0), ('yellow', 18, 0), ('yellow', 2, 0), ('yellow', 20, 0), ('yellow', 17, 0)], []]
main: running command dialog...
say_to_user_with_referents: What should I do? {}
get_from_user requested feedback
get_from_user (raw): 'pick up the item'
get_from_user (processed): 'pick up the item'
say_to_user: I haven't heard the word 'item' before. Does it refer to properties of things, like a color, shape, or weight?
get_from_user requested feedback
get_from_user (raw): 'no'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
parse_and_ground_utterance: parsed 'pick up the item' to lambda 1:p.(and(1))
Traceback (most recent call last):
  File "main.py", line 175, in <module>
    main()
  File "main.py", line 109, in main
    perception_labels_requested)
  File "/var/www/gandalf.nmtechgroup.com/phm/grounded_dialog_agent/Agent.py", line 163, in start_action_dialog
    gprs, pr = self.parse_and_ground_utterance(ur)
  File "/var/www/gandalf.nmtechgroup.com/phm/grounded_dialog_agent/Agent.py", line 870, in parse_and_ground_utterance
    self.budget_for_grounding)
  File "/var/www/gandalf.nmtechgroup.com/phm/grounded_dialog_agent/Agent.py", line 1569, in call_function_with_timeout
    r = f(**args)
  File "/var/www/gandalf.nmtechgroup.com/phm/grounded_dialog_agent/KBGrounder.py", line 42, in ground_semantic_tree
    candidate_groundings = self.ground_semantic_tree(candidate)
  File "/var/www/gandalf.nmtechgroup.com/phm/grounded_dialog_agent/KBGrounder.py", line 75, in ground_semantic_tree
    for cjdx in range(len(child_groundings[1])):
IndexError: list index out of range
