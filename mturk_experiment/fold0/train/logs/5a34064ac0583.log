No handlers could be found for logger "gensim.models.doc2vec"
main: loading grounder from file...
main: ... done
main: instantiating IO...
main: ... done
main: instantiating Agent...
main: ... done
main: running command dialog...
say_to_user_with_referents: What should I do? {}
get_from_user requested feedback
get_from_user (raw): 'There is no problem listed'
get_from_user (processed): 'there is no problem listed'
say_to_user: I haven't heard the word 'is' before. Does it refer to properties of things, like a color, shape, or weight?
get_from_user requested feedback
get_from_user (raw): 'No.'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
parse_and_ground_utterance: parsed 'there is no problem listed' to and(yes,no,no,no,no)
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	
say_to_user_with_referents: You want me to deliver something for someone? {'action': 'bring'}
get_from_user requested feedback
get_from_user (raw): 'Yes, take the documents to Bob.'
get_from_user (processed): 'yes take the documents to bob'
parse_and_ground_utterance: could not generate a parse for the utterance
say_to_user: I am expecting a simple 'yes' or 'no' response.
say_to_user_with_referents: You want me to deliver something for someone? {'action': 'bring'}
get_from_user requested feedback
get_from_user (raw): 'Yes'
get_from_user (processed): 'yes'
parse_and_ground_utterance: parsed 'yes' to yes
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	yes 1.0
say_to_user_with_referents: What should I find to deliver? {'action': 'bring'}
get_from_user requested feedback
get_from_user (raw): 'documents'
get_from_user (processed): 'documents'
parse_and_ground_utterance: parsed 'documents' to south
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	south 1.0
say_to_user: I'm still learning the meanings of some words. I'm going to ask you a few questions about these nearby objects before we continue.
say_to_user_with_referents: Among these nearby objects, could you show me one you would use the word 'can' when describing, or shake your head if there are none? {}
get_oidx_from_user requested feedback
get_oidx_from_user: 2
parse_and_ground_utterance: parsed 'documents' to south
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	south 1.0
say_to_user_with_referents: Among these nearby objects, could you show me one you would use the word 'styrofoam' when describing, or shake your head if there are none? {}
get_oidx_from_user requested feedback
get_oidx_from_user: 20
parse_and_ground_utterance: parsed 'documents' to south
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	south 1.0
say_to_user_with_referents: Among these nearby objects, could you show me one you would use the word 'yellow' when describing, or shake your head if there are none? {}
get_oidx_from_user requested feedback
get_oidx_from_user: None
parse_and_ground_utterance: parsed 'documents' to south
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	south 1.0
say_to_user_with_referents: Among these nearby objects, could you show me one you would use the word 'coffee' when describing, or shake your head if there are none? {}
get_oidx_from_user requested feedback
get_oidx_from_user: 2
parse_and_ground_utterance: parsed 'documents' to south
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	south 1.0
say_to_user_with_referents: Among these nearby objects, could you show me one you would use the word 'metallic' when describing, or shake your head if there are none? {}
get_oidx_from_user requested feedback
get_oidx_from_user: None
parse_and_ground_utterance: parsed 'documents' to south
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	south 1.0
say_to_user: Thanks. Now, back to business.
say_to_user_with_referents: You want me to deliver something to <r>this person</r>? {'action': 'bring', 'recipient': 'p'}
get_from_user requested feedback
get_from_user (raw): 'No, to Bob'
get_from_user (processed): 'no to bob'
parse_and_ground_utterance: parsed 'no to bob' to b
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	b 1.0
say_to_user: I am expecting a simple 'yes' or 'no' response.
say_to_user_with_referents: You want me to deliver something to <r>this person</r>? {'action': 'bring', 'recipient': 'p'}
get_from_user requested feedback
get_from_user (raw): 'No'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
say_to_user_with_referents: What should I find to deliver? {'action': 'bring'}
get_from_user requested feedback
get_from_user (raw): 'Coffee'
get_from_user (processed): 'coffee'
parse_and_ground_utterance: parsed 'coffee' to coffee
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	coffee 1.0
say_to_user_with_referents: You want me to deliver <p>this</p> to someone? {'action': 'bring', 'patient': 'oidx_6'}
get_from_user requested feedback
get_from_user (raw): 'No'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
say_to_user_with_referents: Who should receive what I deliver? {'action': 'bring'}
get_from_user requested feedback
get_from_user (raw): 'Bob'
get_from_user (processed): 'bob'
parse_and_ground_utterance: parsed 'bob' to lambda 1:<l,t>.(a_l(lambda 2:l.(and(1(2),possesses(b,2)))))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	3510 0.25
	3510 0.25
	3510 0.25
	3510 0.25
say_to_user_with_referents: You want me to deliver <p>this</p> to someone? {'action': 'bring', 'patient': 'oidx_13'}
get_from_user requested feedback
get_from_user (raw): 'No'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
say_to_user_with_referents: Who should receive what I deliver? {'action': 'bring'}
get_from_user requested feedback
get_from_user (raw): 'Bob'
get_from_user (processed): 'bob'
parse_and_ground_utterance: parsed 'bob' to lambda 1:<l,t>.(a_l(lambda 2:l.(and(1(2),possesses(b,2)))))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	3510 0.25
	3510 0.25
	3510 0.25
	3510 0.25
say_to_user_with_referents: You want me to deliver <p>this</p> to someone? {'action': 'bring', 'patient': 'oidx_12'}
get_from_user requested feedback
get_from_user (raw): 'No'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
say_to_user_with_referents: Who should receive what I deliver? {'action': 'bring'}
get_from_user requested feedback
get_from_user (raw): 'Bob'
get_from_user (processed): 'bob'
parse_and_ground_utterance: parsed 'bob' to lambda 1:<l,t>.(a_l(lambda 2:l.(and(1(2),possesses(b,2)))))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	3510 0.25
	3510 0.25
	3510 0.25
	3510 0.25
say_to_user_with_referents: You want me to deliver <p>this</p> to someone? {'action': 'bring', 'patient': 'oidx_25'}
get_from_user requested feedback
get_from_user (raw): 'No'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
say_to_user_with_referents: Who should receive what I deliver? {'action': 'bring'}
get_from_user requested feedback
get_from_user (raw): 'Bob'
get_from_user (processed): 'bob'
parse_and_ground_utterance: parsed 'bob' to lambda 1:<l,t>.(a_l(lambda 2:l.(and(1(2),possesses(b,2)))))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	3510 0.25
	3510 0.25
	3510 0.25
	3510 0.25
say_to_user_with_referents: You want me to deliver something to <r>this person</r>? {'action': 'bring', 'recipient': 'r'}
get_from_user requested feedback
get_from_user (raw): 'No'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
say_to_user_with_referents: Who should receive what I deliver? {'action': 'bring'}
get_from_user requested feedback
get_from_user (raw): 'Robert'
get_from_user (processed): 'robert'
parse_and_ground_utterance: parsed 'robert' to b
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	b 1.0
say_to_user_with_referents: You want me to deliver something to <r>this person</r>? {'action': 'bring', 'recipient': 'b'}
get_from_user requested feedback
get_from_user (raw): 'Yes'
get_from_user (processed): 'yes'
parse_and_ground_utterance: parsed 'yes' to yes
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	yes 1.0
say_to_user_with_referents: What should I deliver to <r>this person</r>? {'action': 'bring', 'recipient': 'b'}
get_from_user requested feedback
get_from_user (raw): 'Coffee'
get_from_user (processed): 'coffee'
parse_and_ground_utterance: parsed 'coffee' to coffee
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	coffee 1.0
say_to_user_with_referents: You want me to deliver <p>this</p> to <r>this person</r>? {'action': 'bring', 'recipient': 'b', 'patient': 'oidx_22'}
get_from_user requested feedback
get_from_user (raw): 'Yes'
get_from_user (processed): 'yes'
parse_and_ground_utterance: parsed 'yes' to yes
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	yes 1.0
perform_action: {'action': 'bring', 'recipient': 'b', 'patient': 'oidx_22', 'goal': None, 'source': None}
main: ... done; got action {'action': 'bring', 'recipient': 'b', 'patient': 'oidx_22', 'goal': None, 'source': None}
main: writing new information from dialog(s) to file...
main: ... done; wrote data d = [[{'action': 'bring', 'recipient': 'b', 'patient': 'oidx_22', 'goal': None, 'source': None}], [{'all': ['there is no problem listed'], 'patient': ['documents', 'coffee', 'coffee'], 'goal': [], 'source': [], 'action': [], 'recipient': ['bob', 'bob', 'bob', 'bob', 'robert']}], [('can', 2, 1), ('styrofoam', 20, 1), ('yellow', 10, 0), ('yellow', 3, 0), ('yellow', 27, 0), ('yellow', 7, 0), ('yellow', 18, 0), ('yellow', 2, 0), ('yellow', 20, 0), ('yellow', 17, 0), ('coffee', 2, 1), ('metallic', 10, 0), ('metallic', 3, 0), ('metallic', 27, 0), ('metallic', 7, 0), ('metallic', 18, 0), ('metallic', 2, 0), ('metallic', 20, 0), ('metallic', 17, 0)], []]
main: running command dialog...
say_to_user_with_referents: What should I do? {}
get_from_user requested feedback
get_from_user (raw): 'Deliver the aspirin to Mallory'
get_from_user (processed): 'deliver the aspirin to mallory'
say_to_user: I haven't heard the word 'aspirin' before. Does it refer to properties of things, like a color, shape, or weight?
get_from_user requested feedback
get_from_user (raw): 'No'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
parse_and_ground_utterance: parsed 'deliver the aspirin to mallory' to lambda 1:i.(bring(1,m))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	bring(oidx_6,m) 0.125
	bring(oidx_11,m) 0.125
	bring(oidx_12,m) 0.125
	bring(oidx_13,m) 0.125
	bring(oidx_22,m) 0.125
	bring(oidx_25,m) 0.125
	bring(oidx_26,m) 0.125
	bring(oidx_28,m) 0.125
say_to_user: I'm still learning the meanings of some words. I'm going to ask you a few questions about these nearby objects before we continue.
say_to_user_with_referents: Among these nearby objects, could you show me one you would use the word 'tower' when describing, or shake your head if there are none? {}
get_oidx_from_user requested feedback
get_oidx_from_user: None
parse_and_ground_utterance: parsed 'deliver the aspirin to mallory' to lambda 1:i.(bring(1,m))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	bring(oidx_6,m) 0.125
	bring(oidx_11,m) 0.125
	bring(oidx_12,m) 0.125
	bring(oidx_13,m) 0.125
	bring(oidx_22,m) 0.125
	bring(oidx_25,m) 0.125
	bring(oidx_26,m) 0.125
	bring(oidx_28,m) 0.125
say_to_user_with_referents: Among these nearby objects, could you show me one you would use the word 'there' when describing, or shake your head if there are none? {}
get_oidx_from_user requested feedback
get_oidx_from_user: None
parse_and_ground_utterance: parsed 'deliver the aspirin to mallory' to lambda 1:i.(bring(1,m))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	bring(oidx_6,m) 0.125
	bring(oidx_11,m) 0.125
	bring(oidx_12,m) 0.125
	bring(oidx_13,m) 0.125
	bring(oidx_22,m) 0.125
	bring(oidx_25,m) 0.125
	bring(oidx_26,m) 0.125
	bring(oidx_28,m) 0.125
say_to_user_with_referents: Among these nearby objects, could you show me one you would use the word 'cylinder' when describing, or shake your head if there are none? {}
get_oidx_from_user requested feedback
get_oidx_from_user: 3
parse_and_ground_utterance: parsed 'deliver the aspirin to mallory' to lambda 1:i.(bring(1,m))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	bring(oidx_6,m) 0.125
	bring(oidx_11,m) 0.125
	bring(oidx_12,m) 0.125
	bring(oidx_13,m) 0.125
	bring(oidx_22,m) 0.125
	bring(oidx_25,m) 0.125
	bring(oidx_26,m) 0.125
	bring(oidx_28,m) 0.125
say_to_user_with_referents: Among these nearby objects, could you show me one you could not use the word 'styrofoam' when describing, or shake your head if you could use 'styrofoam' when describing all of them? {}
get_oidx_from_user requested feedback
get_oidx_from_user: 17
parse_and_ground_utterance: parsed 'deliver the aspirin to mallory' to lambda 1:i.(bring(1,m))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	bring(oidx_6,m) 0.125
	bring(oidx_11,m) 0.125
	bring(oidx_12,m) 0.125
	bring(oidx_13,m) 0.125
	bring(oidx_22,m) 0.125
	bring(oidx_25,m) 0.125
	bring(oidx_26,m) 0.125
	bring(oidx_28,m) 0.125
say_to_user_with_referents: Among these nearby objects, could you show me one you would use the word 'beans' when describing, or shake your head if there are none? {}
get_oidx_from_user requested feedback
get_oidx_from_user: None
parse_and_ground_utterance: parsed 'deliver the aspirin to mallory' to lambda 1:i.(bring(1,m))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	bring(oidx_6,m) 0.125
	bring(oidx_11,m) 0.125
	bring(oidx_12,m) 0.125
	bring(oidx_13,m) 0.125
	bring(oidx_22,m) 0.125
	bring(oidx_25,m) 0.125
	bring(oidx_26,m) 0.125
	bring(oidx_28,m) 0.125
say_to_user: Thanks. Now, back to business.
say_to_user_with_referents: You want me to deliver something to <r>this person</r>? {'action': 'bring', 'recipient': 'm'}
get_from_user requested feedback
get_from_user (raw): 'Yes'
get_from_user (processed): 'yes'
parse_and_ground_utterance: parsed 'yes' to yes
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	yes 1.0
say_to_user_with_referents: What should I deliver to <r>this person</r>? {'action': 'bring', 'recipient': 'm'}
get_from_user requested feedback
get_from_user (raw): 'Aspirin'
get_from_user (processed): 'aspirin'
parse_and_ground_utterance: parsed 'aspirin' to south
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	south 1.0
say_to_user_with_referents: You want me to deliver <p>this</p> to <r>this person</r>? {'action': 'bring', 'recipient': 'm', 'patient': 'oidx_26'}
get_from_user requested feedback
get_from_user (raw): 'No'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
say_to_user_with_referents: What should I deliver to <r>this person</r>? {'action': 'bring', 'recipient': 'm'}
get_from_user requested feedback
get_from_user (raw): 'Medicine'
get_from_user (processed): 'medicine'
say_to_user: I haven't heard the word 'medicine' before. Does it refer to properties of things, like a color, shape, or weight?
get_from_user requested feedback
get_from_user (raw): 'No'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
parse_and_ground_utterance: parsed 'medicine' to south
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	south 1.0
say_to_user_with_referents: You want me to deliver <p>this</p> to <r>this person</r>? {'action': 'bring', 'recipient': 'm', 'patient': 'oidx_13'}
get_from_user requested feedback
get_from_user (raw): 'No'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
say_to_user_with_referents: What should I deliver to <r>this person</r>? {'action': 'bring', 'recipient': 'm'}
get_from_user requested feedback
get_from_user (raw): 'pill bottle'
get_from_user (processed): 'pill bottle'
say_to_user: I haven't heard the word 'pill' before. Does it refer to properties of things, like a color, shape, or weight?
get_from_user requested feedback
get_from_user (raw): 'no'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
say_to_user: I haven't heard the word 'bottle' before. Does it refer to properties of things, like a color, shape, or weight?
get_from_user requested feedback
get_from_user (raw): 'no'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
parse_and_ground_utterance: parsed 'pill bottle' to lambda 0:l.(and(lab(0),east(0)))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	False 0.0588235294118
	False 0.0588235294118
	False 0.0588235294118
	False 0.0588235294118
	False 0.0588235294118
	True 0.0588235294118
	True 0.0588235294118
	False 0.0588235294118
	False 0.0588235294118
	False 0.0588235294118
	True 0.0588235294118
	False 0.0588235294118
	False 0.0588235294118
	False 0.0588235294118
	False 0.0588235294118
	False 0.0588235294118
	False 0.0588235294118
say_to_user_with_referents: You want me to deliver <p>this</p> to <r>this person</r>? {'action': 'bring', 'recipient': 'm', 'patient': 'oidx_22'}
get_from_user requested feedback
get_from_user (raw): 'No'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
say_to_user_with_referents: What should I deliver to <r>this person</r>? {'action': 'bring', 'recipient': 'm'}
get_from_user requested feedback
get_from_user (raw): 'medicine'
get_from_user (processed): 'medicine'
parse_and_ground_utterance: parsed 'medicine' to south
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	south 1.0
say_to_user_with_referents: You want me to deliver <p>this</p> to <r>this person</r>? {'action': 'bring', 'recipient': 'm', 'patient': 'oidx_22'}
get_from_user requested feedback
get_from_user (raw): 'No'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
say_to_user_with_referents: What should I deliver to <r>this person</r>? {'action': 'bring', 'recipient': 'm'}
get_from_user requested feedback
get_from_user (raw): 'white container'
get_from_user (processed): 'white container'
parse_and_ground_utterance: parsed 'white container' to lambda 0:i.(and(container(0),white(0)))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	True 0.0625
	False 0.0625
	True 0.0625
	False 0.0625
	True 0.0625
	False 0.0625
	True 0.0625
	False 0.0625
	True 0.0625
	False 0.0625
	True 0.0625
	False 0.0625
	True 0.0625
	False 0.0625
	True 0.0625
	False 0.0625
say_to_user_with_referents: You want me to deliver <p>this</p> to <r>this person</r>? {'action': 'bring', 'recipient': 'm', 'patient': 'oidx_28'}
get_from_user requested feedback
get_from_user (raw): 'No'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
say_to_user_with_referents: What should I deliver to <r>this person</r>? {'action': 'bring', 'recipient': 'm'}
get_from_user requested feedback
get_from_user (raw): 'white container'
get_from_user (processed): 'white container'
parse_and_ground_utterance: parsed 'white container' to lambda 0:i.(and(container(0),white(0)))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	True 0.0625
	False 0.0625
	True 0.0625
	False 0.0625
	True 0.0625
	False 0.0625
	True 0.0625
	False 0.0625
	True 0.0625
	False 0.0625
	True 0.0625
	False 0.0625
	True 0.0625
	False 0.0625
	True 0.0625
	False 0.0625
say_to_user_with_referents: You want me to deliver <p>this</p> to <r>this person</r>? {'action': 'bring', 'recipient': 'm', 'patient': 'oidx_28'}
get_from_user requested feedback
get_from_user (raw): 'No'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
say_to_user_with_referents: What should I deliver to <r>this person</r>? {'action': 'bring', 'recipient': 'm'}
get_from_user requested feedback
get_from_user (raw): 'White plastic container'
get_from_user (processed): 'white plastic container'
say_to_user: I haven't heard the word 'plastic' before. Does it refer to properties of things, like a color, shape, or weight?
get_from_user requested feedback
get_from_user (raw): 'Yes'
get_from_user (processed): 'yes'
parse_and_ground_utterance: parsed 'yes' to yes
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	yes 1.0
say_to_user: Does 'plastic' mean the same thing as 'container'?
get_from_user requested feedback
get_from_user (raw): 'no'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
say_to_user: Does 'plastic' mean the same thing as 'white'?
get_from_user requested feedback
get_from_user (raw): 'no'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
say_to_user: Does 'plastic' mean the same thing as 'metallic'?
get_from_user requested feedback
get_from_user (raw): 'no'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
parse_and_ground_utterance: parsed 'white plastic container' to and(container,white,plastic)
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	
say_to_user_with_referents: You want me to deliver <p>this</p> to <r>this person</r>? {'action': 'bring', 'recipient': 'm', 'patient': 'oidx_25'}
get_from_user requested feedback
get_from_user (raw): 'No'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
say_to_user_with_referents: What should I deliver to <r>this person</r>? {'action': 'bring', 'recipient': 'm'}
get_from_user requested feedback
get_from_user (raw): 'white non-Styrofoam container'
get_from_user (processed): 'white non-styrofoam container'
parse_and_ground_utterance: parsed 'white non-styrofoam container' to lambda 0:i.(and(container(0),white(0)))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	True 0.0625
	False 0.0625
	True 0.0625
	False 0.0625
	True 0.0625
	False 0.0625
	True 0.0625
	False 0.0625
	True 0.0625
	False 0.0625
	True 0.0625
	False 0.0625
	True 0.0625
	False 0.0625
	True 0.0625
	False 0.0625
say_to_user_with_referents: You want me to deliver <p>this</p> to <r>this person</r>? {'action': 'bring', 'recipient': 'm', 'patient': 'oidx_11'}
get_from_user requested feedback
get_from_user (raw): 'No'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: r