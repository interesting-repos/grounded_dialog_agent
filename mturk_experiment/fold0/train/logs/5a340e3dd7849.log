No handlers could be found for logger "gensim.models.doc2vec"
main: loading grounder from file...
main: ... done
main: instantiating IO...
main: ... done
main: instantiating Agent...
main: ... done
main: running command dialog...
say_to_user_with_referents: What should I do? {}
get_from_user requested feedback
get_from_user (raw): 'N'
get_from_user (processed): 'n'
say_to_user: I haven't heard the word 'n' before. Does it refer to properties of things, like a color, shape, or weight?
get_from_user requested feedback
get_from_user (raw): 'YES'
get_from_user (processed): 'yes'
parse_and_ground_utterance: parsed 'yes' to yes
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	yes 1.0
say_to_user: Does 'n' mean the same thing as 'bean'?
get_from_user requested feedback
get_from_user (raw): 'NO'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
say_to_user: Does 'n' mean the same thing as 'block'?
get_from_user requested feedback
get_from_user (raw): 'YES'
get_from_user (processed): 'yes'
parse_and_ground_utterance: parsed 'yes' to yes
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	yes 1.0
parse_and_ground_utterance: parsed 'n' to block
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	block 1.0
say_to_user: I'm still learning the meanings of some words. I'm going to ask you a few questions about these nearby objects before we continue.
say_to_user_with_referents: Among these nearby objects, could you show me one you would use the word 'blue' when describing, or shake your head if there are none? {}
get_oidx_from_user requested feedback
get_oidx_from_user: 27
parse_and_ground_utterance: parsed 'n' to block
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	block 1.0
say_to_user_with_referents: Among these nearby objects, could you show me one you would use the word 'cylinder' when describing, or shake your head if there are none? {}
get_oidx_from_user requested feedback
get_oidx_from_user: 17
parse_and_ground_utterance: parsed 'n' to block
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	block 1.0
say_to_user_with_referents: Among these nearby objects, could you show me one you would use the word 'can' when describing, or shake your head if there are none? {}
get_oidx_from_user requested feedback
get_oidx_from_user: 27
parse_and_ground_utterance: parsed 'n' to block
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	block 1.0
say_to_user_with_referents: Among these nearby objects, could you show me one you would use the word 'clear' when describing, or shake your head if there are none? {}
get_oidx_from_user requested feedback
get_oidx_from_user: 7
parse_and_ground_utterance: parsed 'n' to block
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	block 1.0
say_to_user_with_referents: Among these nearby objects, could you show me one you would use the word 'pringles' when describing, or shake your head if there are none? {}
get_oidx_from_user requested feedback
get_oidx_from_user: 18
parse_and_ground_utterance: parsed 'n' to block
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	block 1.0
say_to_user: Thanks. Now, back to business.
say_to_user_with_referents: You want me to deliver something for someone? {'action': 'bring'}
get_from_user requested feedback
get_from_user (raw): 'YES'
get_from_user (processed): 'yes'
parse_and_ground_utterance: parsed 'yes' to yes
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	yes 1.0
say_to_user_with_referents: What should I find to deliver? {'action': 'bring'}
get_from_user requested feedback
get_from_user (raw): 'NO'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
say_to_user_with_referents: You want me to deliver something to <r>this person</r>? {'action': 'bring', 'recipient': 'd'}
get_from_user requested feedback
get_from_user (raw): 'YES'
get_from_user (processed): 'yes'
parse_and_ground_utterance: parsed 'yes' to yes
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	yes 1.0
say_to_user_with_referents: What should I deliver to <r>this person</r>? {'action': 'bring', 'recipient': 'd'}
get_from_user requested feedback
get_from_user (raw): 'NO'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
say_to_user_with_referents: You want me to deliver <p>this</p> to <r>this person</r>? {'action': 'bring', 'recipient': 'd', 'patient': 'oidx_22'}
get_from_user requested feedback
get_from_user (raw): 'YES'
get_from_user (processed): 'yes'
parse_and_ground_utterance: parsed 'yes' to yes
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	yes 1.0
perform_action: {'action': 'bring', 'recipient': 'd', 'patient': 'oidx_22', 'goal': None, 'source': None}
main: ... done; got action {'action': 'bring', 'recipient': 'd', 'patient': 'oidx_22', 'goal': None, 'source': None}
main: writing new information from dialog(s) to file...
main: ... done; wrote data d = [[{'action': 'bring', 'recipient': 'd', 'patient': 'oidx_22', 'goal': None, 'source': None}], [{'all': ['n'], 'patient': ['no', 'no'], 'goal': [], 'source': [], 'action': [], 'recipient': []}], [('blue', 27, 1), ('cylinder', 17, 1), ('can', 27, 1), ('clear', 7, 1), ('pringles', 18, 1)], [('n', 'bean', False), ('n', 'block', True)]]
main: running command dialog...
say_to_user_with_referents: What should I do? {}
get_from_user requested feedback
get_from_user (raw): 'YES'
get_from_user (processed): 'yes'
parse_and_ground_utterance: parsed 'yes' to yes
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	yes 1.0
say_to_user: I'm still learning the meanings of some words. I'm going to ask you a few questions about these nearby objects before we continue.
say_to_user_with_referents: Among these nearby objects, could you show me one you could not use the word 'can' when describing, or shake your head if you could use 'can' when describing all of them? {}
get_oidx_from_user requested feedback
get_oidx_from_user: None
parse_and_ground_utterance: parsed 'yes' to yes
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	yes 1.0
say_to_user_with_referents: Among these nearby objects, could you show me one you would use the word 'styrofoam' when describing, or shake your head if there are none? {}
get_oidx_from_user requested feedback
get_oidx_from_user: 7
parse_and_ground_utterance: parsed 'yes' to yes
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	yes 1.0
say_to_user_with_referents: Among these nearby objects, could you show me one you could not use the word 'pringles' when describing, or shake your head if you could use 'pringles' when describing all of them? {}
get_oidx_from_user requested feedback
get_oidx_from_user: 7
parse_and_ground_utterance: parsed 'yes' to yes
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	yes 1.0
say_to_user_with_referents: Among these nearby objects, could you show me one you could not use the word 'cylinder' when describing, or shake your head if you could use 'cylinder' when describing all of them? {}
get_oidx_from_user requested feedback
get_oidx_from_user: None
parse_and_ground_utterance: parsed 'yes' to yes
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	yes 1.0
say_to_user_with_referents: Among these nearby objects, could you show me one you would use the word 'white' when describing, or shake your head if there are none? {}
get_oidx_from_user requested feedback
get_oidx_from_user: 18
parse_and_ground_utterance: parsed 'yes' to yes
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	yes 1.0
say_to_user: Thanks. Now, back to business.
say_to_user_with_referents: You want me to deliver something for someone? {'action': 'bring'}
get_from_user requested feedback
get_from_user (raw): 'YES'
get_from_user (processed): 'yes'
parse_and_ground_utterance: parsed 'yes' to yes
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	yes 1.0
say_to_user_with_referents: What should I find to deliver? {'action': 'bring'}
get_from_user requested feedback
get_from_user (raw): 'NO'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
say_to_user_with_referents: You want me to deliver something to <r>this person</r>? {'action': 'bring', 'recipient': 'w'}
get_from_user requested feedback
get_from_user (raw): 'YES'
get_from_user (processed): 'yes'
parse_and_ground_utterance: parsed 'yes' to yes
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	yes 1.0
say_to_user_with_referents: What should I deliver to <r>this person</r>? {'action': 'bring', 'recipient': 'w'}
get_from_user requested feedback
get_from_user (raw): 'YES'
get_from_user (processed): 'yes'
parse_and_ground_utterance: parsed 'yes' to yes
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	yes 1.0
say_to_user_with_referents: You want me to deliver <p>this</p> to <r>this person</r>? {'action': 'bring', 'recipient': 'w', 'patient': 'oidx_25'}
get_from_user requested feedback
get_from_user (raw): 'YES'
get_from_user (processed): 'yes'
parse_and_ground_utterance: parsed 'yes' to yes
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	yes 1.0
perform_action: {'action': 'bring', 'recipient': 'w', 'patient': 'oidx_25', 'goal': None, 'source': None}
main: ... done; got action {'action': 'bring', 'recipient': 'w', 'patient': 'oidx_25', 'goal': None, 'source': None}
main: writing new information from dialog(s) to file...
main: ... done; wrote data d = [[{'action': 'bring', 'recipient': 'd', 'patient': 'oidx_22', 'goal': None, 'source': None}, {'action': 'bring', 'recipient': 'w', 'patient': 'oidx_25', 'goal': None, 'source': None}], [{'all': ['n'], 'patient': ['no', 'no'], 'goal': [], 'source': [], 'action': [], 'recipient': []}, {'all': ['yes'], 'patient': ['no', 'yes'], 'goal': [], 'source': [], 'action': [], 'recipient': []}], [('blue', 27, 1), ('cylinder', 17, 1), ('can', 27, 1), ('clear', 7, 1), ('pringles', 18, 1), ('can', 10, 1), ('can', 3, 1), ('can', 27, 1), ('can', 7, 1), ('can', 18, 1), ('can', 2, 1), ('can', 20, 1), ('can', 17, 1), ('styrofoam', 7, 1), ('pringles', 7, 0), ('cylinder', 10, 1), ('cylinder', 3, 1), ('cylinder', 27, 1), ('cylinder', 7, 1), ('cylinder', 18, 1), ('cylinder', 2, 1), ('cylinder', 20, 1), ('cylinder', 17, 1), ('white', 18, 1)], [('n', 'bean', False), ('n', 'block', True)]]
main: running command dialog...
say_to_user_with_referents: What should I do? {}
get_from_user requested feedback
get_from_user (raw): 'YES'
get_from_user (processed): 'yes'
parse_and_ground_utterance: parsed 'yes' to yes
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	yes 1.0
say_to_user: I'm still learning the meanings of some words. I'm going to ask you a few questions about these nearby objects before we continue.
say_to_user_with_referents: Among these nearby objects, could you show me one you would use the word 'block' when describing, or shake your head if there are none? {}
get_oidx_from_user requested feedback
get_oidx_from_user: 18
parse_and_ground_utterance: parsed 'yes' to yes
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	yes 1.0
say_to_user_with_referents: Among these nearby objects, could you show me one you would use the word 'pringles' when describing, or shake your head if there are none? {}
get_oidx_from_user requested feedback
get_oidx_from_user: 18
parse_and_ground_utterance: parsed 'yes' to yes
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	yes 1.0
say_to_user_with_referents: Among these nearby objects, could you show me one you could not use the word 'pringles' when describing, or shake your head if you could use 'pringles' when describing all of them? {}
get_oidx_from_user requested feedback
get_oidx_from_user: 27
parse_and_ground_utterance: parsed 'yes' to yes
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	yes 1.0
say_to_user_with_referents: Among these nearby objects, could you show me one you would use the word 'pringles' when describing, or shake your head if there are none? {}
get_oidx_from_user requested feedback
get_oidx_from_user: 18
parse_and_ground_utterance: parsed 'yes' to yes
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	yes 1.0
say_to_user_with_referents: Among these nearby objects, could you show me one you would use the word 'empty' when describing, or shake your head if there are none? {}
get_oidx_from_user requested feedback
get_oidx_from_user: 27
parse_and_ground_utterance: parsed 'yes' to yes
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	yes 1.0
say_to_user: Thanks. Now, back to business.
say_to_user_with_referents: You want me to deliver something for someone? {'action': 'bring'}
get_from_user requested feedback
get_from_user (raw): 'YES'
get_from_user (processed): 'yes'
parse_and_ground_utterance: parsed 'yes' to yes
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	yes 1.0
say_to_user_with_referents: What should I find to deliver? {'action': 'bring'}
get_from_user requested feedback
get_from_user (raw): 'NO'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
say_to_user_with_referents: You want me to deliver <p>this</p> to someone? {'action': 'bring', 'patient': 'oidx_6'}
get_from_user requested feedback
get_from_user (raw): 'YES'
get_from_user (processed): 'yes'
parse_and_ground_utterance: parsed 'yes' to yes
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	yes 1.0
say_to_user_with_referents: To whom should I deliver <p>this</p>? {'action': 'bring', 'patient': 'oidx_6'}
get_from_user requested feedback
get_from_user (raw): 'YES'
get_from_user (processed): 'yes'
parse_and_ground_utterance: parsed 'yes' to yes
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	yes 1.0
say_to_user_with_referents: You want me to deliver <p>this</p> to <r>this person</r>? {'action': 'bring', 'recipient': 'n', 'patient': 'oidx_6'}
get_from_user requested feedback
get_from_user (raw): 'YES'
get_from_user (processed): 'yes'
parse_and_ground_utterance: parsed 'yes' to yes
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	yes 1.0
perform_action: {'action': 'bring', 'recipient': 'n', 'patient': 'oidx_6', 'goal': None, 'source': None}
main: ... done; got action {'action': 'bring', 'recipient': 'n', 'patient': 'oidx_6', 'goal': None, 'source': None}
main: writing new information from dialog(s) to file...
main: ... done; wrote data d = [[{'action': 'bring', 'recipient': 'd', 'patient': 'oidx_22', 'goal': None, 'source': None}, {'action': 'bring', 'recipient': 'w', 'patient': 'oidx_25', 'goal': None, 'source': None}, {'action': 'bring', 'recipient': 'n', 'patient': 'oidx_6', 'goal': None, 'source': None}], [{'all': ['n'], 'patient': ['no', 'no'], 'goal': [], 'source': [], 'action': [], 'recipient': []}, {'all': ['yes'], 'patient': ['no', 'yes'], 'goal': [], 'source': [], 'action': [], 'recipient': []}, {'all': ['yes'], 'patient': ['no'], 'goal': [], 'source': [], 'action': [], 'recipient': ['yes']}], [('blue', 27, 1), ('cylinder', 17, 1), ('can', 27, 1), ('clear', 7, 1), ('pringles', 18, 1), ('can', 10, 1), ('can', 3, 1), ('can', 27, 1), ('can', 7, 1), ('can', 18, 1), ('can', 2, 1), ('can', 20, 1), ('can', 17, 1), ('styrofoam', 7, 1), ('pringles', 7, 0), ('cylinder', 10, 1), ('cylinder', 3, 1), ('cylinder', 27, 1), ('cylinder', 7, 1), ('cylinder', 18, 1), ('cylinder', 2, 1), ('cylinder', 20, 1), ('cylinder', 17, 1), ('white', 18, 1), ('block', 18, 1), ('pringles', 18, 1), ('pringles', 27, 0), ('pringles', 18, 1), ('empty', 27, 1)], [('n', 'bean', False), ('n', 'block', True)]]
