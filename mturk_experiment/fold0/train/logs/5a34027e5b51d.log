No handlers could be found for logger "gensim.models.doc2vec"
main: loading grounder from file...
main: ... done
main: instantiating IO...
main: ... done
main: instantiating Agent...
main: ... done
main: running command dialog...
say_to_user_with_referents: What should I do? {}
get_from_user requested feedback
get_from_user (raw): 'go to the kitchen'
get_from_user (processed): 'go to the kitchen'
parse_and_ground_utterance: parsed 'go to the kitchen' to walk(a_l(lambda 1:l.(kitchen(1))))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	walk(3520) 1.0
say_to_user: I'm still learning the meanings of some words. I'm going to ask you a few questions about these nearby objects before we continue.
say_to_user_with_referents: Among these nearby objects, could you show me one you would use the word 'styrofoam' when describing, or shake your head if there are none? {}
get_oidx_from_user requested feedback
get_oidx_from_user: None
parse_and_ground_utterance: parsed 'go to the kitchen' to walk(a_l(lambda 1:l.(kitchen(1))))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	walk(3520) 1.0
say_to_user_with_referents: Among these nearby objects, could you show me one you would use the word 'coffee' when describing, or shake your head if there are none? {}
get_oidx_from_user requested feedback
get_oidx_from_user: None
parse_and_ground_utterance: parsed 'go to the kitchen' to walk(a_l(lambda 1:l.(kitchen(1))))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	walk(3520) 1.0
say_to_user_with_referents: Among these nearby objects, could you show me one you would use the word 'can' when describing, or shake your head if there are none? {}
get_oidx_from_user requested feedback
get_oidx_from_user: 2
parse_and_ground_utterance: parsed 'go to the kitchen' to walk(a_l(lambda 1:l.(kitchen(1))))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	walk(3520) 1.0
say_to_user_with_referents: Among these nearby objects, could you show me one you would use the word 'beans' when describing, or shake your head if there are none? {}
get_oidx_from_user requested feedback
get_oidx_from_user: None
parse_and_ground_utterance: parsed 'go to the kitchen' to walk(a_l(lambda 1:l.(kitchen(1))))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	walk(3520) 1.0
say_to_user_with_referents: Among these nearby objects, could you show me one you would use the word 'peaches' when describing, or shake your head if there are none? {}
get_oidx_from_user requested feedback
get_oidx_from_user: None
parse_and_ground_utterance: parsed 'go to the kitchen' to walk(a_l(lambda 1:l.(kitchen(1))))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	walk(3520) 1.0
say_to_user: Thanks. Now, back to business.
say_to_user_with_referents: You want me to go somewhere? (not manipulate any objects) {'action': 'walk'}
get_from_user requested feedback
get_from_user (raw): 'yes'
get_from_user (processed): 'yes'
parse_and_ground_utterance: parsed 'yes' to yes
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	yes 1.0
say_to_user_with_referents: You want me to go to <g>here</g> (not manipulate any objects)? {'action': 'walk', 'goal': '3520'}
get_from_user requested feedback
get_from_user (raw): 'yes'
get_from_user (processed): 'yes'
parse_and_ground_utterance: parsed 'yes' to yes
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	yes 1.0
perform_action: {'action': 'walk', 'recipient': None, 'patient': None, 'goal': '3520', 'source': None}
main: ... done; got action {'action': 'walk', 'recipient': None, 'patient': None, 'goal': '3520', 'source': None}
main: writing new information from dialog(s) to file...
main: ... done; wrote data d = [[{'action': 'walk', 'recipient': None, 'patient': None, 'goal': '3520', 'source': None}], [{'all': ['go to the kitchen'], 'patient': [], 'goal': [], 'source': [], 'action': [], 'recipient': []}], [('styrofoam', 10, 0), ('styrofoam', 3, 0), ('styrofoam', 27, 0), ('styrofoam', 7, 0), ('styrofoam', 18, 0), ('styrofoam', 2, 0), ('styrofoam', 20, 0), ('styrofoam', 17, 0), ('coffee', 10, 0), ('coffee', 3, 0), ('coffee', 27, 0), ('coffee', 7, 0), ('coffee', 18, 0), ('coffee', 2, 0), ('coffee', 20, 0), ('coffee', 17, 0), ('can', 2, 1), ('bean', 10, 0), ('bean', 3, 0), ('bean', 27, 0), ('bean', 7, 0), ('bean', 18, 0), ('bean', 2, 0), ('bean', 20, 0), ('bean', 17, 0), ('peach', 10, 0), ('peach', 3, 0), ('peach', 27, 0), ('peach', 7, 0), ('peach', 18, 0), ('peach', 2, 0), ('peach', 20, 0), ('peach', 17, 0)], []]
main: running command dialog...
say_to_user_with_referents: What should I do? {}
get_from_user requested feedback
get_from_user (raw): 'take the pringles containter to Dr. Nancy Nagel'
get_from_user (processed): 'take the pringles containter to dr nancy nagel'
parse_and_ground_utterance: could not generate a parse for the utterance
say_to_user_with_referents: You want me to go somewhere? (not manipulate any objects) {'action': 'walk'}
get_from_user requested feedback
get_from_user (raw): 'no'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
say_to_user_with_referents: You want me to move an item from somewhere to somewhere (not give it to someone)? {'action': 'move'}
get_from_user requested feedback
get_from_user (raw): 'no'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
say_to_user_with_referents: You want me to deliver something for someone? {'action': 'bring'}
get_from_user requested feedback
get_from_user (raw): 'yes'
get_from_user (processed): 'yes'
parse_and_ground_utterance: parsed 'yes' to yes
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	yes 1.0
say_to_user_with_referents: What should I find to deliver? {'action': 'bring'}
get_from_user requested feedback
get_from_user (raw): 'the pringles container'
get_from_user (processed): 'the pringles container'
parse_and_ground_utterance: parsed 'the pringles container' to and(a_i(lambda 1:i.(pringles(1))),a_i(lambda 0:i.(container(0))))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	oidx_6 0.125
	oidx_11 0.125
	oidx_12 0.125
	oidx_13 0.125
	oidx_22 0.125
	oidx_25 0.125
	oidx_26 0.125
	oidx_28 0.125
say_to_user: I'm still learning the meanings of some words. I'm going to ask you a few questions about these nearby objects before we continue.
say_to_user_with_referents: Among these nearby objects, could you show me one you would use the word 'container' when describing, or shake your head if there are none? {}
get_oidx_from_user requested feedback
get_oidx_from_user: 7
parse_and_ground_utterance: parsed 'the pringles container' to and(a_i(lambda 1:i.(pringles(1))),a_i(lambda 0:i.(container(0))))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	oidx_6 0.125
	oidx_11 0.125
	oidx_12 0.125
	oidx_13 0.125
	oidx_22 0.125
	oidx_25 0.125
	oidx_26 0.125
	oidx_28 0.125
say_to_user_with_referents: Among these nearby objects, could you show me one you would use the word 'pringles' when describing, or shake your head if there are none? {}
get_oidx_from_user requested feedback
get_oidx_from_user: None
parse_and_ground_utterance: parsed 'the pringles container' to and(a_i(lambda 1:i.(pringles(1))),a_i(lambda 0:i.(container(0))))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	oidx_6 0.125
	oidx_11 0.125
	oidx_12 0.125
	oidx_13 0.125
	oidx_22 0.125
	oidx_25 0.125
	oidx_26 0.125
	oidx_28 0.125
say_to_user_with_referents: Among these nearby objects, could you show me one you could not use the word 'container' when describing, or shake your head if you could use 'container' when describing all of them? {}
get_oidx_from_user requested feedback
get_oidx_from_user: 3
parse_and_ground_utterance: parsed 'the pringles container' to and(a_i(lambda 1:i.(pringles(1))),a_i(lambda 0:i.(container(0))))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	oidx_11 0.182835820896
	oidx_22 0.171641791045
	oidx_12 0.160447761194
	oidx_13 0.126865671642
	oidx_26 0.10447761194
	oidx_25 0.0932835820896
	oidx_6 0.0858208955224
	oidx_28 0.0746268656716
say_to_user_with_referents: Among these nearby objects, could you show me one you would use the word 'container' when describing, or shake your head if there are none? {}
get_oidx_from_user requested feedback
get_oidx_from_user: 2
parse_and_ground_utterance: parsed 'the pringles container' to and(a_i(lambda 1:i.(pringles(1))),a_i(lambda 0:i.(container(0))))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	oidx_22 0.174953959484
	oidx_11 0.169889502762
	oidx_12 0.159760589319
	oidx_13 0.106813996317
	oidx_25 0.105893186004
	oidx_26 0.0999079189687
	oidx_28 0.0934622467772
	oidx_6 0.0893186003683
say_to_user_with_referents: Among these nearby objects, could you show me one you could not use the word 'container' when describing, or shake your head if you could use 'container' when describing all of them? {}
get_oidx_from_user requested feedback
get_oidx_from_user: 20
parse_and_ground_utterance: parsed 'the pringles container' to and(a_i(lambda 1:i.(pringles(1))),a_i(lambda 0:i.(container(0))))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	oidx_22 0.293428757319
	oidx_12 0.242029928432
	oidx_11 0.230318802863
	oidx_26 0.110605074821
	oidx_13 0.0611581001952
	oidx_6 0.0351333767079
	oidx_25 0.0227716330514
	oidx_28 0.00455432661028
say_to_user: Thanks. Now, back to business.
say_to_user_with_referents: You want me to deliver something to <r>this person</r>? {'action': 'bring', 'recipient': 'r'}
get_from_user requested feedback
get_from_user (raw): 'no'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
say_to_user_with_referents: What should I find to deliver? {'action': 'bring'}
get_from_user requested feedback
get_from_user (raw): 'the blue container'
get_from_user (processed): 'the blue container'
parse_and_ground_utterance: parsed 'the blue container' to and(a_i(lambda 1:i.(blue(1))),a_i(lambda 0:i.(container(0))))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	oidx_22 0.293428757319
	oidx_12 0.242029928432
	oidx_11 0.230318802863
	oidx_26 0.110605074821
	oidx_13 0.0611581001952
	oidx_6 0.0351333767079
	oidx_25 0.0227716330514
	oidx_28 0.00455432661028
say_to_user_with_referents: You want me to deliver something to <r>this person</r>? {'action': 'bring', 'recipient': 'h'}
get_from_user requested feedback
get_from_user (raw): 'no'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
say_to_user_with_referents: What should I find to deliver? {'action': 'bring'}
get_from_user requested feedback
get_from_user (raw): 'the tall blue container'
get_from_user (processed): 'the tall blue container'
say_to_user: I haven't heard the word 'tall' before. Does it refer to properties of things, like a color, shape, or weight?
get_from_user requested feedback
get_from_user (raw): 'yes'
get_from_user (processed): 'yes'
parse_and_ground_utterance: parsed 'yes' to yes
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	yes 1.0
say_to_user: Does 'tall' mean the same thing as 'tower'?
get_from_user requested feedback
get_from_user (raw): 'no'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
say_to_user: Does 'tall' mean the same thing as 'white'?
get_from_user requested feedback
get_from_user (raw): 'no'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
say_to_user: Does 'tall' mean the same thing as 'long'?
get_from_user requested feedback
get_from_user (raw): 'no'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
parse_and_ground_utterance: parsed 'the tall blue container' to and(a_i(lambda 1:i.(and(blue(1),tall(1)))),a_i(lambda 0:i.(container(0))))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	oidx_22 0.293428757319
	oidx_12 0.242029928432
	oidx_11 0.230318802863
	oidx_26 0.110605074821
	oidx_13 0.0611581001952
	oidx_6 0.0351333767079
	oidx_25 0.0227716330514
	oidx_28 0.00455432661028
say_to_user_with_referents: You want me to deliver <p>this</p> to someone? {'action': 'bring', 'patient': 'oidx_22'}
get_from_user requested feedback
get_from_user (raw): ''
get_from_user (processed): ''
parse_and_ground_utterance: could not generate a parse for the utterance
say_to_user: I am expecting a simple 'yes' or 'no' response.
say_to_user_with_referents: You want me to deliver <p>this</p> to someone? {'action': 'bring', 'patient': 'oidx_22'}
get_from_user requested feedback
get_from_user (raw): 'no'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
say_to_user_with_referents: You want me to deliver <p>this</p> to someone? {'action': 'bring', 'patient': 'oidx_11'}
get_from_user requested feedback
get_from_user (raw): 'no'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
say_to_user_with_referents: You want me to deliver <p>this</p> to someone? {'action': 'bring', 'patient': 'oidx_12'}
get_from_user requested feedback
get_from_user (raw): 'no'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
say_to_user_with_referents: You want me to deliver <p>this</p> to someone? {'action': 'bring', 'patient': 'oidx_26'}
get_from_user requested feedback
get_from_user (raw): 'no'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
say_to_user_with_referents: What should I find to deliver? {'action': 'bring'}
get_from_user requested feedback
get_from_user (raw): 'the blue cylinder'
get_from_user (processed): 'the blue cylinder'
parse_and_ground_utterance: parsed 'the blue cylinder' to and(a_i(lambda 1:i.(blue(1))),a_i(lambda 0:i.(cylinder(0))))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	oidx_6 0.125
	oidx_11 0.125
	oidx_12 0.125
	oidx_13 0.125
	oidx_22 0.125
	oidx_25 0.125
	oidx_26 0.125
	oidx_28 0.125
say_to_user_with_referents: You want me to deliver <p>this</p> to someone? {'action': 'bring', 'patient': 'oidx_22'}
get_from_user requested feedback
get_from_user (raw): 'no'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
say_to_user_with_referents: You want me to deliver <p>this</p> to someone? {'action': 'bring', 'patient': 'oidx_11'}
get_from_user requested feedback
get_from_user (raw): 'no'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
say_to_user_with_referents: You want me to deliver <p>this</p> to someone? {'action': 'bring', 'patient': 'oidx_13'}
get_from_user requested feedback
get_from_user (raw): 'YES'
get_from_user (processed): 'yes'
parse_and_ground_utterance: parsed 'yes' to yes
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	yes 1.0
say_to_user_with_referents: To whom should I deliver <p>this</p>? {'action': 'bring', 'patient': 'oidx_13'}
get_from_user requested feedback
get_from_user (raw): 'N'
get_from_user (processed): 'n'
say_to_user: I haven't heard the word 'n' before. Does it refer to properties of things, like a color, shape, or weight?
get_from_user requested feedback
get_from_user (raw): 'no'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
parse_and_ground_utterance: parsed 'n' to south
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	south 1.0
say_to_user_with_referents: You want me to deliver <p>this</p> to <r>this person</r>? {'action': 'bring', 'recipient': 'p', 'patient': 'oidx_13'}
get_from_user requested feedback
get_from_user (raw): 'no'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
say_to_user_with_referents: To whom should I deliver <p>this</p>? {'action': 'bring', 'patient': 'oidx_13'}
get_from_user requested feedback
get_from_user (raw): 'Nancy Nagel'
get_from_user (processed): 'nancy nagel'
parse_and_ground_utterance: parsed 'nancy nagel' to n
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	n 1.0
say_to_user_with_referents: You want me to deliver <p>this</p> to <r>this person</r>? {'action': 'bring', 'recipient': 'n', 'patient': 'oidx_13'}
get_from_user requested feedback
get_from_user (raw): 'YES'
get_from_user (processed): 'yes'
parse_and_ground_utterance: parsed 'yes' to yes
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	yes 1.0
perform_action: {'action': 'bring', 'recipient': 'n', 'patient': 'oidx_13', 'goal': None, 'source': None}
main: ... done; got action {'action': 'bring', 'recipient': 'n', 'patient': 'oidx_13', 'goal': None, 'source': None}
main: writing new information from dialog(s) to file...
main: ... done; wrote data d = [[{'action': 'walk', 'recipient': None, 'patient': None, 'goal': '3520', 'source': None}, {'action': 'bring', 'recipient': 'n', 'patient': 'oidx_13', 'goal': None, 'source': None}], [{'all': ['go to the kitchen'], 'patient': [], 'goal': [], 'source': [], 'action': [], 'recipient': []}, {'all': ['take the pringles containter to dr nancy nagel'], 'patient': ['the pringles container', 'the blue container', 'the tall blue container', 'the blue cylinder'], 'goal': [], 'source': [], 'action': [], 'recipient': ['n', 'nancy nagel']}], [('styrofoam', 10, 0), ('styrofoam', 3, 0), ('styrofoam', 27, 0), ('styrofoam', 7, 0), ('styrofoam', 18, 0), ('styrofoam', 2, 0), ('styrofoam', 20, 0), ('styrofoam', 17, 0), ('coffee', 10, 0), ('coffee', 3, 0), ('coffee', 27, 0), ('coffee', 7, 0), ('coffee', 18, 0), ('coffee', 2, 0), ('coffee', 20, 0), ('coffee', 17, 0), ('can', 2, 1), ('bean', 10, 0), ('bean', 3, 0), ('bean', 27, 0), ('bean', 7, 0), ('bean', 18, 0), ('bean', 2, 0), ('bean', 20, 0), ('bean', 17, 0), ('peach', 10, 0), ('peach', 3, 0), ('peach', 27, 0), ('peach', 7, 0), ('peach', 18, 0), ('peach', 2, 0), ('peach', 20, 0), ('peach', 17, 0), ('container', 7, 1), ('pringles', 10, 0), ('pringles', 3, 0), ('pringles', 27, 0), ('pringles', 7, 0), ('pringles', 18, 0), ('pringles', 2, 0), ('pringles', 20, 0), ('pringles', 17, 0), ('container', 3, 0), ('container', 2, 1), ('container', 20, 0)], [('tall', 'tower', False), ('tall', 'white', False), ('tall', 'long', False)]]
main: running command dialog...
say_to_user_with_referents: What should I do? {}
get_from_user requested feedback
get_from_user (raw): 'Take the coffee beans to the office next to David Daniel's office'
get_from_user (processed): 'take the coffee beans to the office next to david daniel 's office'
parse_and_ground_utterance: could not generate a parse for the utterance
say_to_user_with_referents: You want me to move an item from somewhere to somewhere (not give it to someone)? {'action': 'move'}
get_from_user requested feedback
get_from_user (raw): 'yes'
get_from_user (processed): 'yes'
parse_and_ground_utterance: parsed 'yes' to yes
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	yes 1.0
say_to_user_with_referents: Where should I move something from on its way somewhere else? {'action': 'move'}
get_from_user requested feedback
get_from_user (raw): 'take the coffee beans from the office next to David Daniel's office and bring them to the office next to the pod'
get_from_user (processed): 'take the coffee beans from the office next to david daniel 's office and bring them to the office next to the pod'
say_to_user: I haven't heard the word 'them' before. Does it refer to properties of things, like a color, shape, or weight?
get_from_user requested feedback
get_from_user (raw): 'no'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
parse_and_ground_utterance: could not generate a parse for the utterance
say_to_user_with_referents: I should move something from somewhere to <g>there</g>? {'action': 'move', 'goal': '3414a'}
get_from_user requested feedback
get_from_user (raw): 'no'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
say_to_user_with_referents: Where should I move something from on its way somewhere else? {'action': 'move'}
get_from_user requested feedback
get_from_user (raw): 'to the office next to the pod'
get_from_user (processed): 'to the office next to the pod'
parse_and_ground_utterance: parsed 'to the office next to the pod' to a_l(lambda 1:l.(and(adjacent(1,a_l(lambda 2:l.(pod(2)))),office(1))))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	3404 0.2
	3422 0.2
	3430 0.2
	3502 0.2
	3508 0.2
say_to_user: I'm still learning the meanings of some words. I'm going to ask you a few questions about these nearby objects before we continue.
say_to_user_with_referents: Among these nearby objects, could you show me one you would use the word 'column' when describing, or shake your head if there are none? {}
get_oidx_from_user requested feedback
get_oidx_from_user: 3
parse_and_ground_utterance: parsed 'to the office next to the pod' to a_l(lambda 1:l.(and(adjacent(1,a_l(lambda 2:l.(pod(2)))),office(1))))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	3404 0.2
	3422 0.2
	3430 0.2
	3502 0.2
	3508 0.2
say_to_user_with_referents: Among these nearby objects, could you show me one you would use the word 'block' when describing, or shake your head if there are none? {}
get_oidx_from_user requested feedback
get_oidx_from_user: None
parse_and_ground_utterance: parsed 'to the office next to the pod' to a_l(lambda 1:l.(and(adjacent(1,a_l(lambda 2:l.(pod(2)))),office(1))))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	3404 0.2
	3422 0.2
	3430 0.2
	3502 0.2
	3508 0.2
say_to_user_with_referents: Among these nearby objects, could you show me one you would use the word 'empty' when describing, or shake your head if there are none? {}
get_oidx_from_user requested feedback
get_oidx_from_user: None
parse_and_ground_utterance: parsed 'to the office next to the pod' to a_l(lambda 1:l.(and(adjacent(1,a_l(lambda 2:l.(pod(2)))),office(1))))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	3404 0.2
	3422 0.2
	3430 0.2
	3502 0.2
	3508 0.2
say_to_user_with_referents: Among these nearby objects, could you show me one you would use the word 'spices' when describing, or shake your head if there are none? {}
get_oidx_from_user requested feedback
get_oidx_from_user: None
parse_and_ground_utterance: parsed 'to the office next to the pod' to a_l(lambda 1:l.(and(adjacent(1,a_l(lambda 2:l.(pod(2)))),office(1))))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	3404 0.2
	3422 0.2
	3430 0.2
	3502 0.2
	3508 0.2
say_to_user_with_referents: Among these nearby objects, could you show me one you would use the word 'metallic' when describing, or shake your head if there are none? {}
get_oidx_from_user requested feedback
get_oidx_from_user: 7
parse_and_ground_utterance: parsed 'to the office next to the pod' to a_l(lambda 1:l.(and(adjacent(1,a_l(lambda 2:l.(pod(2)))),office(1))))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	3404 0.2
	3422 0.2
	3430 0.2
	3502 0.2
	3508 0.2
say_to_user: Thanks. Now, back to business.
say_to_user_with_referents: I should move something from <s>here</s> somewhere else? {'action': 'move', 'source': '3508'}
get_from_user requested feedback
get_from_user (raw): 'no'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
say_to_user_with_referents: Where should I move something from on its way somewhere else? {'action': 'move'}
get_from_user requested feedback
get_from_user (raw): 'take the coffee beans from the office next to David Daniel's office and bring them to the office next to the pod'
get_from_user (processed): 'take the coffee beans from the office next to david daniel 's office and bring them to the office next to the pod'
parse_and_ground_utterance: could not generate a parse for the utterance
say_to_user_with_referents: I should move something from somewhere to <g>there</g>? {'action': 'move', 'goal': '3432'}
get_from_user requested feedback
get_from_user (raw): 'no'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
say_to_user_with_referents: Where should I move something from on its way somewhere else? {'action': 'move'}
get_from_user requested feedback
get_from_user (raw): 'take the coffee beans from the office next to David Daniel's office and bring them to the office next to the pod'
get_from_user (processed): 'take the coffee beans from the office next to david daniel 's office and bring them to the office next to the pod'
parse_and_ground_utterance: could not generate a parse for the utterance
say_to_user_with_referents: I should move something from <s>here</s> somewhere else? {'action': 'move', 'source': '3506'}
get_from_user requested feedback
get_from_user (raw): 'no'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
say_to_user_with_referents: Where should I move something from on its way somewhere else? {'action': 'move'}
get_from_user requested feedback
get_from_user (raw): 'from the office to the office'
get_from_user (processed): 'from the office to the office'
parse_and_ground_utterance: parsed 'from the office to the office' to and(a_l(lambda 1:l.(office(1))),a_l(lambda 1:l.(office(1))))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	3402 0.0909090909091
	3404 0.0909090909091
	3418 0.0909090909091
	3420 0.0909090909091
	3422 0.0909090909091
	3430 0.0909090909091
	3432 0.0909090909091
	3502 0.0909090909091
	3508 0.0909090909091
	3510 0.0909090909091
	3512 0.0909090909091
say_to_user_with_referents: You want me to move <p>this</p> from somewhere to somewhere (not give it to someone)? {'action': 'move', 'patient': 'oidx_25'}
get_from_user requested feedback
get_from_user (raw): 'no'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
say_to_user_with_referents: Where should I move something from on its way somewhere else? {'action': 'move'}
get_from_user requested feedback
get_from_user (raw): 'from the office to the office'
get_from_user (processed): 'from the office to the office'
parse_and_ground_utterance: parsed 'from the office to the office' to and(a_l(lambda 1:l.(office(1))),a_l(lambda 1:l.(office(1))))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	3402 0.0909090909091
	3404 0.0909090909091
	3418 0.0909090909091
	3420 0.0909090909091
	3422 0.0909090909091
	3430 0.0909090909091
	3432 0.0909090909091
	3502 0.0909090909091
	3508 0.0909090909091
	3510 0.0909090909091
	3512 0.0909090909091
say_to_user_with_referents: I should move something from somewhere to <g>there</g>? {'action': 'move', 'goal': '3516'}
get_from_user requested feedback
get_from_user (raw): 'no'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
say_to_user_with_referents: Where should I move something from on its way somewhere else? {'action': 'move'}
get_from_user requested feedback
get_from_user (raw): 'take the coffee beans from the office next to David Daniel's office and bring them to the office next to the pod'
get_from_user (processed): 'take the coffee beans from the office next to david daniel 's office and bring them to the office next to the pod'
parse_and_ground_utterance: could not generate a parse for the utterance
say_to_user_with_referents: I should move something from somewhere to <g>there</g>? {'action': 'move', 'goal': '3402'}
get_from_user requested feedback
get_from_user (raw): 'yes'
get_from_user (processed): 'yes'
parse_and_ground_utterance: parsed 'yes' to yes
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	yes 1.0
say_to_user_with_referents: Where should I move something from on its way to <g>there</g>? {'action': 'move', 'goal': '3402'}
get_from_user requested feedback
get_from_user (raw): 'office'
get_from_user (processed): 'office'
parse_and_ground_utterance: parsed 'office' to office
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	office 1.0
say_to_user_with_referents: I should move something from <s>here</s> to <g>there</g>? {'action': 'move', 'source': '3432', 'goal': '3402'}
get_from_user requested feedback
get_from_user (raw): 'yes'
get_from_user (processed): 'yes'
parse_and_ground_utterance: parsed 'yes' to yes
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	yes 1.0
say_to_user_with_referents: What should I move from <s>here</s> to <g>there</g>? {'action': 'move', 'source': '3432', 'goal': '3402'}
get_from_user requested feedback
get_from_user (raw): 'anything'
get_from_user (processed): 'anything'
say_to_user: I haven't heard the word 'anything' before. Does it refer to properties of things, like a color, shape, or weight?
get_from_user requested feedback
get_from_user (raw): 'no'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
parse_and_ground_utterance: parsed 'anything' to south
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	south 1.0
say_to_user_with_referents: You want me to move <p>this</p> from <s>here</s> to <g>there</g> (not give it to someone)? {'action': 'move', 'source': '3432', 'patient': 'oidx_28', 'goal': '3402'}
get_from_user requested feedback
get_from_user (raw): 'yes'
get_from_user (processed): 'yes'
parse_and_ground_utterance: parsed 'yes' to yes
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	yes 1.0
perform_action: {'action': 'move', 'recipient': None, 'patient': 'oidx_28', 'goal': '3402', 'source': '3432'}
main: ... done; got action {'action': 'move', 'recipient': None, 'patient': 'oidx_28', 'goal': '3402', 'source': '3432'}
main: writing new information from dialog(s) to file...
main: ... done; wrote data d = [[{'action': 'walk', 'recipient': None, 'patient': None, 'goal': '3520', 'source': None}, {'action': 'bring', 'recipient': 'n', 'patient': 'oidx_13', 'goal': None, 'source': None}, {'action': 'move', 'recipient': None, 'patient': 'oidx_28', 'goal': '3402', 'source': '3432'}], [{'all': ['go to the kitchen'], 'patient': [], 'goal': [], 'source': [], 'action': [], 'recipient': []}, {'all': ['take the pringles containter to dr nancy nagel'], 'patient': ['the pringles container', 'the blue container', 'the tall blue container', 'the blue cylinder'], 'goal': [], 'source': [], 'action': [], 'recipient': ['n', 'nancy nagel']}, {'all': ["take the coffee beans to the office next to david daniel 's office"], 'patient': ['anything'], 'goal': [], 'source': ["take the coffee beans from the office next to david daniel 's office and bring them to the office next to the pod", 'to the office next to the pod', "take the coffee beans from the office next to david daniel 's office and bring them to the office next to the pod", "take the coffee beans from the office next to david daniel 's office and bring them to the office next to the pod", 'from the office to the office', 'from the office to the office', "take the coffee beans from the office next to david daniel 's office and bring them to the office next to the pod", 'office'], 'action': [], 'recipient': []}], [('styrofoam', 10, 0), ('styrofoam', 3, 0), ('styrofoam', 27, 0), ('styrofoam', 7, 0), ('styrofoam', 18, 0), ('styrofoam', 2, 0), ('styrofoam', 20, 0), ('styrofoam', 17, 0), ('coffee', 10, 0), ('coffee', 3, 0), ('coffee', 27, 0), ('coffee', 7, 0), ('coffee', 18, 0), ('coffee', 2, 0), ('coffee', 20, 0), ('coffee', 17, 0), ('can', 2, 1), ('bean', 10, 0), ('bean', 3, 0), ('bean', 27, 0), ('bean', 7, 0), ('bean', 18, 0), ('bean', 2, 0), ('bean', 20, 0), ('bean', 17, 0), ('peach', 10, 0), ('peach', 3, 0), ('peach', 27, 0), ('peach', 7, 0), ('peach', 18, 0), ('peach', 2, 0), ('peach', 20, 0), ('peach', 17, 0), ('container', 7, 1), ('pringles', 10, 0), ('pringles', 3, 0), ('pringles', 27, 0), ('pringles', 7, 0), ('pringles', 18, 0), ('pringles', 2, 0), ('pringles', 20, 0), ('pringles', 17, 0), ('container', 3, 0), ('container', 2, 1), ('container', 20, 0), ('column', 3, 1), ('block', 10, 0), ('block', 3, 0), ('block', 27, 0), ('block', 7, 0), ('block', 18, 0), ('block', 2, 0), ('block', 20, 0), ('block', 17, 0), ('empty', 10, 0), ('empty', 3, 0), ('empty', 27, 0), ('empty', 7, 0), ('empty', 18, 0), ('empty', 2, 0), ('empty', 20, 0), ('empty', 17, 0), ('spice', 10, 0), ('spice', 3, 0), ('spice', 27, 0), ('spice', 7, 0), ('spice', 18, 0), ('spice', 2, 0), ('spice', 20, 0), ('spice', 17, 0), ('metallic', 7, 1)], [('tall', 'tower', False), ('tall', 'white', False), ('tall', 'long', False)]]
