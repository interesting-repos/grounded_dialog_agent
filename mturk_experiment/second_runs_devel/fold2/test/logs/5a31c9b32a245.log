No handlers could be found for logger "gensim.models.doc2vec"
main: loading grounder from file...
main: ... done
main: instantiating IO...
main: ... done
main: instantiating Agent...
main: ... done
main: running command dialog...
say_to_user_with_referents: What should I do? {}
get_from_user requested feedback
get_from_user (raw): 'Go into the office of Dr. Nancy Nagel.'
get_from_user (processed): 'go into the office of dr nancy nagel'
parse_and_ground_utterance: parsed 'go into the office of dr nancy nagel' to a_l(lambda 1:l.(and(possesses(n,1),office(1))))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	3404 1.0
say_to_user: I'm still learning the meanings of some words. I'm going to ask you a few questions about these nearby objects before we continue.
say_to_user_with_referents: Would you use the word 'cylinder' when describing <p>this</p> object? {'patient': 'oidx_19'}
get_from_user requested feedback
get_from_user (raw): 'Yes.'
get_from_user (processed): 'yes'
parse_and_ground_utterance: parsed 'yes' to yes
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	yes 1.0
parse_and_ground_utterance: parsed 'go into the office of dr nancy nagel' to a_l(lambda 1:l.(and(possesses(n,1),office(1))))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	3404 1.0
say_to_user_with_referents: Would you use the word 'yellow' when describing <p>this</p> object? {'patient': 'oidx_19'}
get_from_user requested feedback
get_from_user (raw): 'Yes.'
get_from_user (processed): 'yes'
parse_and_ground_utterance: parsed 'yes' to yes
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	yes 1.0
parse_and_ground_utterance: parsed 'go into the office of dr nancy nagel' to a_l(lambda 1:l.(and(possesses(n,1),office(1))))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	3404 1.0
say_to_user_with_referents: Would you use the word 'cylinder' when describing <p>this</p> object? {'patient': 'oidx_0'}
get_from_user requested feedback
get_from_user (raw): 'No.'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
parse_and_ground_utterance: parsed 'go into the office of dr nancy nagel' to a_l(lambda 1:l.(and(possesses(n,1),office(1))))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	3404 1.0
say_to_user_with_referents: Among these nearby objects, could you show me one you would use the word 'pringles' when describing, or shake your head if there are none? {}
get_oidx_from_user requested feedback
get_oidx_from_user: 0
parse_and_ground_utterance: parsed 'go into the office of dr nancy nagel' to a_l(lambda 1:l.(and(possesses(n,1),office(1))))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	3404 1.0
say_to_user_with_referents: Would you use the word 'empty' when describing <p>this</p> object? {'patient': 'oidx_21'}
get_from_user requested feedback
get_from_user (raw): 'No.'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
parse_and_ground_utterance: parsed 'go into the office of dr nancy nagel' to a_l(lambda 1:l.(and(possesses(n,1),office(1))))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	3404 1.0
say_to_user: Thanks. Now, back to business.
say_to_user_with_referents: You want me to go somewhere? (not manipulate any objects) {'action': 'walk'}
get_from_user requested feedback
get_from_user (raw): 'Go into the office of Dr. Nancy Nagel.'
get_from_user (processed): 'go into the office of dr nancy nagel'
parse_and_ground_utterance: parsed 'go into the office of dr nancy nagel' to a_l(lambda 1:l.(and(possesses(n,1),office(1))))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	3404 1.0
say_to_user: I am expecting a simple 'yes' or 'no' response.
say_to_user_with_referents: You want me to go somewhere? (not manipulate any objects) {'action': 'walk'}
get_from_user requested feedback
get_from_user (raw): 'Yes.'
get_from_user (processed): 'yes'
parse_and_ground_utterance: parsed 'yes' to yes
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	yes 1.0
say_to_user_with_referents: Where should I go? {'action': 'walk'}
get_from_user requested feedback
get_from_user (raw): 'Into the office of Dr. Nancy Nagel.'
get_from_user (processed): 'into the office of dr nancy nagel'
parse_and_ground_utterance: parsed 'into the office of dr nancy nagel' to a_l(lambda 1:l.(and(possesses(n,1),office(1))))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	3404 1.0
say_to_user_with_referents: You want me to go to <g>here</g> (not manipulate any objects)? {'action': 'walk', 'goal': '3404'}
get_from_user requested feedback
get_from_user (raw): 'Yes.'
get_from_user (processed): 'yes'
parse_and_ground_utterance: parsed 'yes' to yes
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	yes 1.0
perform_action: {'action': 'walk', 'recipient': None, 'patient': None, 'goal': '3404', 'source': None}
main: ... done; got action {'action': 'walk', 'recipient': None, 'patient': None, 'goal': '3404', 'source': None}
main: writing new information from dialog(s) to file...
main: ... done; wrote data d = [[{'action': 'walk', 'recipient': None, 'patient': None, 'goal': '3404', 'source': None}], [{'all': ['go into the office of dr nancy nagel'], 'patient': [], 'goal': ['into the office of dr nancy nagel'], 'source': [], 'action': [], 'recipient': []}], [('cylinder', 19, 1), ('yellow', 19, 1), ('cylinder', 0, 0), ('pringles', 0, 1), ('empty', 21, 0)], []]
main: running command dialog...
say_to_user_with_referents: What should I do? {}
get_from_user requested feedback
get_from_user (raw): 'Please bring the block of foam to Bob Brown.'
get_from_user (processed): 'please bring the block of foam to bob brown'
say_to_user: I haven't heard the word 'please' before. Does it refer to properties of things, like a color, shape, or weight?
get_from_user requested feedback
get_from_user (raw): 'No.'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
say_to_user: I haven't heard the word 'foam' before. Does it refer to properties of things, like a color, shape, or weight?
get_from_user requested feedback
get_from_user (raw): 'No.'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
say_to_user: I haven't heard the word 'bob' before. Does it refer to properties of things, like a color, shape, or weight?
get_from_user requested feedback
get_from_user (raw): 'No.'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
say_to_user: I haven't heard the word 'brown' before. Does it refer to properties of things, like a color, shape, or weight?
get_from_user requested feedback
get_from_user (raw): 'Sometimes, but not now.'
get_from_user (processed): 'sometimes but not now'
parse_and_ground_utterance: parsed 'sometimes but not now' to lambda 1:<l,t>.(a_l(lambda 2:l.(and(1(2),possesses(s,2)))))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	3430 0.333333333333
	3430 0.333333333333
	3430 0.333333333333
say_to_user: I am expecting a simple 'yes' or 'no' response.
say_to_user: I haven't heard the word 'brown' before. Does it refer to properties of things, like a color, shape, or weight?
get_from_user requested feedback
get_from_user (raw): 'No.'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
parse_and_ground_utterance: could not generate a parse for the utterance
say_to_user_with_referents: You want me to go somewhere? (not manipulate any objects) {'action': 'walk'}
get_from_user requested feedback
get_from_user (raw): 'No.'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
say_to_user_with_referents: You want me to relocate an item from somewhere to somewhere (not give it to someone)? {'action': 'move'}
get_from_user requested feedback
get_from_user (raw): 'No.'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
say_to_user_with_referents: You want me to deliver something for someone? {'action': 'bring'}
get_from_user requested feedback
get_from_user (raw): 'Yes.'
get_from_user (processed): 'yes'
parse_and_ground_utterance: parsed 'yes' to yes
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	yes 1.0
say_to_user_with_referents: What should I find to deliver? {'action': 'bring'}
get_from_user requested feedback
get_from_user (raw): 'Deliver the block of foam to Bob Brown.'
get_from_user (processed): 'deliver the block of foam to bob brown'
parse_and_ground_utterance: could not generate a parse for the utterance
say_to_user_with_referents: You want me to deliver <p>this</p> to someone? {'action': 'bring', 'patient': 'oidx_25'}
get_from_user requested feedback
get_from_user (raw): 'No.'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
say_to_user_with_referents: Who should receive what I deliver? {'action': 'bring'}
get_from_user requested feedback
get_from_user (raw): 'Bob Brown.'
get_from_user (processed): 'bob brown'
parse_and_ground_utterance: parsed 'bob brown' to lambda 1:<l,t>.(a_l(lambda 2:l.(and(1(2),possesses(r,2)))))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	3512 0.333333333333
	3512 0.333333333333
	3512 0.333333333333
say_to_user: I'm still learning the meanings of some words. I'm going to ask you a few questions about these nearby objects before we continue.
say_to_user_with_referents: Among these nearby objects, could you show me one you would use the word 'coffee' when describing, or shake your head if there are none? {}
get_oidx_from_user requested feedback
get_oidx_from_user: 9
parse_and_ground_utterance: parsed 'bob brown' to lambda 1:<l,t>.(a_l(lambda 2:l.(and(1(2),possesses(s,2)))))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	3430 0.333333333333
	3430 0.333333333333
	3430 0.333333333333
say_to_user_with_referents: Would you use the word 'empty' when describing <p>this</p> object? {'patient': 'oidx_19'}
get_from_user requested feedback
get_from_user (raw): 'No.'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
parse_and_ground_utterance: parsed 'bob brown' to lambda 1:<l,t>.(a_l(lambda 2:l.(and(1(2),possesses(m,2)))))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	3502 0.333333333333
	3502 0.333333333333
	3502 0.333333333333
say_to_user_with_referents: Would you use the word 'styrofoam' when describing <p>this</p> object? {'patient': 'oidx_19'}
get_from_user requested feedback
get_from_user (raw): 'No.'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
parse_and_ground_utterance: parsed 'bob brown' to lambda 1:<l,t>.(a_l(lambda 2:l.(and(1(2),possesses(s,2)))))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	3430 0.333333333333
	3430 0.333333333333
	3430 0.333333333333
say_to_user_with_referents: Would you use the word 'styrofoam' when describing <p>this</p> object? {'patient': 'oidx_4'}
get_from_user requested feedback
get_from_user (raw): 'No.'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
parse_and_ground_utterance: parsed 'bob brown' to lambda 1:<l,t>.(a_l(lambda 2:l.(and(1(2),possesses(s,2)))))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	3430 0.333333333333
	3430 0.333333333333
	3430 0.333333333333
say_to_user_with_referents: Among these nearby objects, could you show me one you could not use the word 'can' when describing, or shake your head if you could use 'can' when describing all of them? {}
get_oidx_from_user requested feedback
get_oidx_from_user: 23
parse_and_ground_utterance: parsed 'bob brown' to lambda 1:<l,t>.(a_l(lambda 2:l.(and(1(2),possesses(s,2)))))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	3430 0.333333333333
	3430 0.333333333333
	3430 0.333333333333
say_to_user: Thanks. Now, back to business.
say_to_user_with_referents: You want me to deliver something to <r>this person</r>? {'action': 'bring', 'recipient': 'n'}
get_from_user requested feedback
get_from_user (raw): 'No.'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
say_to_user_with_referents: Who should receive what I deliver? {'action': 'bring'}
get_from_user requested feedback
get_from_user (raw): 'Bob Brown.'
get_from_user (processed): 'bob brown'
parse_and_ground_utterance: parsed 'bob brown' to lambda 1:<l,t>.(a_l(lambda 2:l.(and(1(2),possesses(s,2)))))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	3430 0.333333333333
	3430 0.333333333333
	3430 0.333333333333
say_to_user_with_referents: You want me to deliver something to <r>this person</r>? {'action': 'bring', 'recipient': 'd'}
get_from_user requested feedback
get_from_user (raw): 'No.'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
say_to_user_with_referents: What should I find to deliver? {'action': 'bring'}
get_from_user requested feedback
get_from_user (raw): 'The white styrofoam block.'
get_from_user (processed): 'the white styrofoam block'
parse_and_ground_utterance: parsed 'the white styrofoam block' to a_i(lambda 1:i.(and(styrofoam(1),white(1),block(1))))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	oidx_13 0.266666666667
	oidx_26 0.266666666667
	oidx_25 0.215053763441
	oidx_12 0.144086021505
	oidx_6 0.10752688172
say_to_user_with_referents: You want me to deliver <p>this</p> to <r>this person</r>? {'action': 'bring', 'recipient': 'w', 'patient': 'oidx_6'}
get_from_user requested feedback
get_from_user (raw): 'No.'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
say_to_user_with_referents: What should I find to deliver? {'action': 'bring'}
get_from_user requested feedback
get_from_user (raw): 'Styrofoam.'
get_from_user (processed): 'styrofoam'
parse_and_ground_utterance: parsed 'styrofoam' to lambda 1:<i,t>.(and(styrofoam,1))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	styrofoam 1.0
say_to_user_with_referents: You want me to deliver <p>this</p> to someone? {'action': 'bring', 'patient': 'oidx_12'}
get_from_user requested feedback
get_from_user (raw): 'No.'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
say_to_user_with_referents: What should I find to deliver? {'action': 'bring'}
get_from_user requested feedback
get_from_user (raw): 'A piece of styrofoam.'
get_from_user (processed): 'a piece of styrofoam'
say_to_user: I haven't heard the word 'piece' before. Does it refer to properties of things, like a color, shape, or weight?
get_from_user requested feedback
get_from_user (raw): 'Yes.'
get_from_user (processed): 'yes'
parse_and_ground_utterance: pa