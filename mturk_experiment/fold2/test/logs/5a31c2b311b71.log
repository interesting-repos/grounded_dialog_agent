No handlers could be found for logger "gensim.models.doc2vec"
main: loading grounder from file...
main: ... done
main: instantiating IO...
main: ... done
main: instantiating Agent...
main: ... done
main: running command dialog...
say_to_user_with_referents: What should I do? {}
get_from_user requested feedback
get_from_user (raw): 'Tell me where you are.'
get_from_user (processed): 'tell me where you are'
say_to_user: I haven't heard the word 'me' before. Does it refer to properties of things, like a color, shape, or weight?
get_from_user requested feedback
get_from_user (raw): 'Go to the kitchen.'
get_from_user (processed): 'go to the kitchen'
parse_and_ground_utterance: parsed 'go to the kitchen' to a_l(lambda 1:l.(kitchen(1)))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	3520 1.0
say_to_user: I am expecting a simple 'yes' or 'no' response.
say_to_user: I haven't heard the word 'me' before. Does it refer to properties of things, like a color, shape, or weight?
get_from_user requested feedback
get_from_user (raw): 'no'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
say_to_user: I haven't heard the word 'are' before. Does it refer to properties of things, like a color, shape, or weight?
get_from_user requested feedback
get_from_user (raw): 'no'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
parse_and_ground_utterance: parsed 'tell me where you are' to lambda 1:<l,t>.(a_l(lambda 2:l.(and(1(2),possesses(s,2)))))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	3430 0.333333333333
	3430 0.333333333333
	3430 0.333333333333
say_to_user: I'm still learning the meanings of some words. I'm going to ask you a few questions about these nearby objects before we continue.
say_to_user_with_referents: Among these nearby objects, could you show me one you would use the word 'column' when describing, or shake your head if there are none? {}
get_oidx_from_user requested feedback
get_oidx_from_user: None
parse_and_ground_utterance: parsed 'tell me where you are' to lambda 1:<l,t>.(a_l(lambda 2:l.(and(1(2),possesses(r,2)))))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	3512 0.333333333333
	3512 0.333333333333
	3512 0.333333333333
say_to_user_with_referents: Would you use the word 'empty' when describing <p>this</p> object? {'patient': 'oidx_0'}
get_from_user requested feedback
get_from_user (raw): 'no'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
parse_and_ground_utterance: parsed 'tell me where you are' to lambda 1:<l,t>.(a_l(lambda 2:l.(and(1(2),possesses(b,2)))))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	3510 0.333333333333
	3510 0.333333333333
	3510 0.333333333333
say_to_user_with_referents: Among these nearby objects, could you show me one you would use the word 'pringles' when describing, or shake your head if there are none? {}
get_oidx_from_user requested feedback
get_oidx_from_user: None
parse_and_ground_utterance: parsed 'tell me where you are' to lambda 1:<l,t>.(a_l(lambda 2:l.(and(1(2),possesses(h,2)))))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	3402 0.333333333333
	3402 0.333333333333
	3402 0.333333333333
say_to_user_with_referents: Among these nearby objects, could you show me one you would use the word 'beans' when describing, or shake your head if there are none? {}
get_oidx_from_user requested feedback
get_oidx_from_user: None
parse_and_ground_utterance: parsed 'tell me where you are' to lambda 1:<l,t>.(a_l(lambda 2:l.(and(1(2),possesses(s,2)))))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	3430 0.333333333333
	3430 0.333333333333
	3430 0.333333333333
say_to_user_with_referents: Among these nearby objects, could you show me one you could not use the word 'can' when describing, or shake your head if you could use 'can' when describing all of them? {}
get_oidx_from_user requested feedback
get_oidx_from_user: 24
parse_and_ground_utterance: parsed 'tell me where you are' to lambda 1:<l,t>.(a_l(lambda 2:l.(and(1(2),possesses(p,2)))))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	3508 0.333333333333
	3508 0.333333333333
	3508 0.333333333333
say_to_user: Thanks. Now, back to business.
say_to_user_with_referents: You want me to relocate an item from somewhere to <g>there</g> (not give it to someone)? {'action': 'move', 'goal': '3430'}
get_from_user requested feedback
get_from_user (raw): 'yes'
get_from_user (processed): 'yes'
parse_and_ground_utterance: parsed 'yes' to yes
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	yes 1.0
say_to_user_with_referents: I should move something from <s>here</s> to <g>there</g>? {'action': 'move', 'source': '3430', 'goal': '3430'}
get_from_user requested feedback
get_from_user (raw): 'no'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
say_to_user_with_referents: Where should I move something from on its way to <g>there</g>? {'action': 'move', 'goal': '3430'}
get_from_user requested feedback
get_from_user (raw): 'From your present position.'
get_from_user (processed): 'from your present position'
say_to_user: I haven't heard the word 'your' before. Does it refer to properties of things, like a color, shape, or weight?
get_from_user requested feedback
get_from_user (raw): 'no'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
parse_and_ground_utterance: parsed 'from your present position' to lambda 1:<l,t>.(a_l(lambda 2:l.(and(1(2),possesses(m,2)))))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	3502 0.333333333333
	3502 0.333333333333
	3502 0.333333333333
say_to_user_with_referents: I should move something from <s>here</s> to <g>there</g>? {'action': 'move', 'source': '3502', 'goal': '3430'}
get_from_user requested feedback
get_from_user (raw): 'no'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
say_to_user_with_referents: Where should I move something from on its way to <g>there</g>? {'action': 'move', 'goal': '3430'}
get_from_user requested feedback
get_from_user (raw): 'From the lab on the far right.'
get_from_user (processed): 'from the lab on the far right'
say_to_user: I haven't heard the word 'far' before. Does it refer to properties of things, like a color, shape, or weight?
get_from_user requested feedback
get_from_user (raw): 'yes'
get_from_user (processed): 'yes'
parse_and_ground_utterance: parsed 'yes' to yes
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	yes 1.0
say_to_user: Does 'far' mean the same thing as 'long'?
get_from_user requested feedback
get_from_user (raw): 'yes'
get_from_user (processed): 'yes'
parse_and_ground_utterance: parsed 'yes' to yes
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	yes 1.0
parse_and_ground_utterance: could not generate a parse for the utterance
say_to_user_with_referents: I should move something from <s>here</s> to <g>there</g>? {'action': 'move', 'source': '3414', 'goal': '3430'}
get_from_user requested feedback
get_from_user (raw): 'no.'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
say_to_user_with_referents: Where should I move something from on its way to <g>there</g>? {'action': 'move', 'goal': '3430'}
get_from_user requested feedback
get_from_user (raw): 'The lab at the right side of the map.'
get_from_user (processed): 'the lab at the right side of the map'
Traceback (most recent call last):
  File "main.py", line 175, in <module>
    main()
  File "main.py", line 109, in main
    perception_labels_requested)
  File "/var/www/gandalf.nmtechgroup.com/phm/grounded_dialog_agent/Agent.py", line 163, in start_action_dialog
    gprs, pr = self.parse_and_ground_utterance(ur)
  File "/var/www/gandalf.nmtechgroup.com/phm/grounded_dialog_agent/Agent.py", line 861, in parse_and_ground_utterance
    cgtr = self.call_generator_with_timeout(parse_generator, self.budget_for_parsing)
  File "/var/www/gandalf.nmtechgroup.com/phm/grounded_dialog_agent/Agent.py", line 1554, in call_generator_with_timeout
    r = next(g)
  File "../tsp/CKYParser.py", line 834, in most_likely_cky_parse
    parse_tree, parse_score, new_lexicon_entries = next(parse_tree_generator)
  File "../tsp/CKYParser.py", line 953, in most_likely_reranked_cky_parse
    for curr_tree, curr_new_lex in curr_generator:
  File "../tsp/CKYParser.py", line 988, in most_likely_tree_generator
    parse_roots, parse_leaves_keys = self.form_root_from_leaves(parse_leaves, ccg_tree)
  File "../tsp/CKYParser.py", line 1154, in form_root_from_leaves
    root = self.perform_fa(l, r, top_level_call=True)
  File "../tsp/CKYParser.py", line 1994, in perform_fa
    ab.renumerate_lambdas([])
  File "../tsp/SemanticNode.py", line 101, in renumerate_lambdas
    c.renumerate_lambdas(lambdas[:])
  File "../tsp/SemanticNode.py", line 101, in renumerate_lambdas
    c.renumerate_lambdas(lambdas[:])
  File "../tsp/SemanticNode.py", line 101, in renumerate_lambdas
    c.renumerate_lambdas(lambdas[:])
  File "../tsp/SemanticNode.py", line 101, in renumerate_lambdas
    c.renumerate_lambdas(lambdas[:])
  File "../tsp/SemanticNode.py", line 101, in renumerate_lambdas
    c.renumerate_lambdas(lambdas[:])
  File "../tsp/SemanticNode.py", line 98, in renumerate_lambdas
    self.lambda_name = lambdas.index(self.lambda_name) + 1
ValueError: 5 is not in list
