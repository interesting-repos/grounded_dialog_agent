No handlers could be found for logger "gensim.models.doc2vec"
main: loading grounder from file...
main: ... done
main: instantiating IO...
main: ... done
main: instantiating Agent...
main: ... done
main: running command dialog...
say_to_user_with_referents: What should I do? {}
get_from_user requested feedback
get_from_user (raw): 'go to the biggest lab'
get_from_user (processed): 'go to the biggest lab'
say_to_user: I haven't heard the word 'biggest' before. Does it refer to properties of things, like a color, shape, or weight?
get_from_user requested feedback
get_from_user (raw): 'shape'
get_from_user (processed): 'shape'
parse_and_ground_utterance: parsed 'shape' to lambda 1:<l,t>.(a_l(lambda 2:l.(1(2))))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	3402 0.0131578947368
	3404 0.0131578947368
	3418 0.0131578947368
	3420 0.0131578947368
	3422 0.0131578947368
	3430 0.0131578947368
	3432 0.0131578947368
	3502 0.0131578947368
	3508 0.0131578947368
	3510 0.0131578947368
	3512 0.0131578947368
	3414 0.0131578947368
	3414a 0.0131578947368
	3414b 0.0131578947368
	3436 0.0131578947368
	3416 0.0131578947368
	3516 0.0131578947368
	3506 0.0131578947368
	3406 0.0131578947368
	3514 0.0131578947368
	3520 0.0131578947368
	3408 0.0131578947368
	3410 0.0131578947368
	3424 0.0131578947368
	3504 0.0131578947368
	3518 0.0131578947368
	3418 0.0131578947368
	3432 0.0131578947368
	3402 0.0131578947368
	3404 0.0131578947368
	3408 0.0131578947368
	3414 0.0131578947368
	3416 0.0131578947368
	3418 0.0131578947368
	3420 0.0131578947368
	3422 0.0131578947368
	3424 0.0131578947368
	3430 0.0131578947368
	3432 0.0131578947368
	3436 0.0131578947368
	3414 0.0131578947368
	3414b 0.0131578947368
	3422 0.0131578947368
	3424 0.0131578947368
	3430 0.0131578947368
	3432 0.0131578947368
	3436 0.0131578947368
	3514 0.0131578947368
	3516 0.0131578947368
	3518 0.0131578947368
	3520 0.0131578947368
	3502 0.0131578947368
	3504 0.0131578947368
	3506 0.0131578947368
	3508 0.0131578947368
	3510 0.0131578947368
	3512 0.0131578947368
	3514 0.0131578947368
	3516 0.0131578947368
	3518 0.0131578947368
	3520 0.0131578947368
	3402 0.0131578947368
	3404 0.0131578947368
	3406 0.0131578947368
	3408 0.0131578947368
	3410 0.0131578947368
	3414a 0.0131578947368
	3416 0.0131578947368
	3418 0.0131578947368
	3420 0.0131578947368
	3502 0.0131578947368
	3504 0.0131578947368
	3506 0.0131578947368
	3508 0.0131578947368
	3510 0.0131578947368
	3512 0.0131578947368
say_to_user: I am expecting a simple 'yes' or 'no' response.
say_to_user: I haven't heard the word 'biggest' before. Does it refer to properties of things, like a color, shape, or weight?
get_from_user requested feedback
get_from_user (raw): 'yes'
get_from_user (processed): 'yes'
parse_and_ground_utterance: parsed 'yes' to yes
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	yes 1.0
say_to_user: Does 'biggest' mean the same thing as 'should'?
get_from_user requested feedback
get_from_user (raw): 'no'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
parse_and_ground_utterance: parsed 'go to the biggest lab' to walk(a_l(lambda 1:l.(lab(1))))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	walk(3414) 0.25
	walk(3414a) 0.25
	walk(3414b) 0.25
	walk(3436) 0.25
say_to_user: I'm still learning the meanings of some words. I'm going to ask you a few questions about these nearby objects before we continue.
say_to_user_with_referents: Would you use the word 'container' when describing <p>this</p> object? {'patient': 'oidx_9'}
get_from_user requested feedback
get_from_user (raw): 'yes'
get_from_user (processed): 'yes'
parse_and_ground_utterance: parsed 'yes' to yes
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	yes 1.0
parse_and_ground_utterance: parsed 'go to the biggest lab' to walk(a_l(lambda 1:l.(lab(1))))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	walk(3414) 0.25
	walk(3414a) 0.25
	walk(3414b) 0.25
	walk(3436) 0.25
say_to_user_with_referents: Would you use the word 'large' when describing <p>this</p> object? {'patient': 'oidx_24'}
get_from_user requested feedback
get_from_user (raw): 'yes'
get_from_user (processed): 'yes'
parse_and_ground_utterance: parsed 'yes' to yes
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	yes 1.0
parse_and_ground_utterance: parsed 'go to the biggest lab' to walk(a_l(lambda 1:l.(lab(1))))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	walk(3414) 0.25
	walk(3414a) 0.25
	walk(3414b) 0.25
	walk(3436) 0.25
say_to_user_with_referents: Among these nearby objects, could you show me one you would use the word 'column' when describing, or shake your head if there are none? {}
get_oidx_from_user requested feedback
get_oidx_from_user: None
parse_and_ground_utterance: parsed 'go to the biggest lab' to walk(a_l(lambda 1:l.(lab(1))))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	walk(3414) 0.25
	walk(3414a) 0.25
	walk(3414b) 0.25
	walk(3436) 0.25
say_to_user_with_referents: Would you use the word 'metallic' when describing <p>this</p> object? {'patient': 'oidx_21'}
get_from_user requested feedback
get_from_user (raw): 'not sure'
get_from_user (processed): 'not sure'
parse_and_ground_utterance: parsed 'not sure' to yes
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	yes 1.0
parse_and_ground_utterance: parsed 'go to the biggest lab' to walk(a_l(lambda 1:l.(lab(1))))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	walk(3414) 0.25
	walk(3414a) 0.25
	walk(3414b) 0.25
	walk(3436) 0.25
say_to_user_with_referents: Would you use the word 'styrofoam' when describing <p>this</p> object? {'patient': 'oidx_19'}
get_from_user requested feedback
get_from_user (raw): 'no'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
parse_and_ground_utterance: parsed 'go to the biggest lab' to walk(a_l(lambda 1:l.(lab(1))))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	walk(3414) 0.25
	walk(3414a) 0.25
	walk(3414b) 0.25
	walk(3436) 0.25
say_to_user: Thanks. Now, back to business.
say_to_user_with_referents: You want me to go somewhere? (not manipulate any objects) {'action': 'walk'}
get_from_user requested feedback
get_from_user (raw): 'yes'
get_from_user (processed): 'yes'
parse_and_ground_utterance: parsed 'yes' to yes
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	yes 1.0
say_to_user_with_referents: Where should I go? {'action': 'walk'}
get_from_user requested feedback
get_from_user (raw): 'lab'
get_from_user (processed): 'lab'
parse_and_ground_utterance: parsed 'lab' to a_l(lambda 1:l.(lab(1)))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	3414 0.25
	3414a 0.25
	3414b 0.25
	3436 0.25
say_to_user_with_referents: You want me to go to <g>here</g> (not manipulate any objects)? {'action': 'walk', 'goal': '3414b'}
get_from_user requested feedback
get_from_user (raw): 'no'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
say_to_user_with_referents: Where should I go? {'action': 'walk'}
get_from_user requested feedback
get_from_user (raw): 'lab'
get_from_user (processed): 'lab'
parse_and_ground_utterance: parsed 'lab' to a_l(lambda 1:l.(lab(1)))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	3414 0.25
	3414a 0.25
	3414b 0.25
	3436 0.25
say_to_user_with_referents: You want me to go to <g>here</g> (not manipulate any objects)? {'action': 'walk', 'goal': '3414a'}
get_from_user requested feedback
get_from_user (raw): 'lab next to the office'
get_from_user (processed): 'lab next to the office'
parse_and_ground_utterance: parsed 'lab next to the office' to lambda 1:l.(and(adjacent(1,a_l(lambda 2:l.(office(2)))),lab(1)))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	True 0.00444444444444
	True 0.00444444444444
	True 0.00444444444444
	True 0.00444444444444
	True 0.00444444444444
	True 0.00444444444444
	True 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	True 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
say_to_user: I am expecting a simple 'yes' or 'no' response.
say_to_user_with_referents: You want me to go to <g>here</g> (not manipulate any objects)? {'action': 'walk', 'goal': '3414a'}
get_from_user requested feedback
get_from_user (raw): 'no'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
say_to_user_with_referents: Where should I go? {'action': 'walk'}
get_from_user requested feedback
get_from_user (raw): 'lab next to the office'
get_from_user (processed): 'lab next to the office'
parse_and_ground_utterance: parsed 'lab next to the office' to lambda 1:l.(and(adjacent(1,a_l(lambda 2:l.(office(2)))),lab(1)))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	True 0.00444444444444
	True 0.00444444444444
	True 0.00444444444444
	True 0.00444444444444
	True 0.00444444444444
	True 0.00444444444444
	True 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	True 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
	False 0.00444444444444
say_to_user: Sorry, I didn't understand that.
say_to_user_with_referents: Where should I go? {'action': 'walk'}
get_from_user requested feedback
get_from_user (raw): 'lab'
get_from_user (processed): 'lab'
parse_and_ground_utterance: parsed 'lab' to a_l(lambda 1:l.(lab(1)))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	3414 0.25
	3414a 0.25
	3414b 0.25
	3436 0.25
say_to_user: Sorry, I didn't understand that.
say_to_user_with_referents: Where should I go? {'action': 'walk'}
get_from_user requested feedback
get_from_user (raw): 'larg lab'
get_from_user (processed): 'larg lab'
parse_and_ground_utterance: parsed 'larg lab' to a_l(lambda 1:l.(lab(1)))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	3414 0.25
	3414a 0.25
	3414b 0.25
	3436 0.25
say_to_user_with_referents: You want me to go to <g>here</g> (not manipulate any objects)? {'action': 'walk', 'goal': '3414b'}
get_from_user requested feedback
get_from_user (raw): 'no'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
say_to_user_with_referents: Where should I go? {'action': 'walk'}
get_from_user requested feedback
get_from_user (raw): 'lab'
get_from_user (processed): 'lab'
parse_and_ground_utterance: parsed 'lab' to a_l(lambda 1:l.(lab(1)))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	3414 0.25
	3414a 0.25
	3414b 0.25
	3436 0.25
say_to_user_with_referents: You want me to go to <g>here</g> (not manipulate any objects)? {'action': 'walk', 'goal': '3436'}
get_from_user requested feedback
get_from_user (raw): 'yes'
get_from_user (processed): 'yes'
parse_and_ground_utterance: parsed 'yes' to yes
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	yes 1.0
perform_action: {'action': 'walk', 'recipient': None, 'patient': None, 'goal': '3436', 'source': None}
main: ... done; got action {'action': 'walk', 'recipient': None, 'patient': None, 'goal': '3436', 'source': None}
main: writing new information from dialog(s) to file...
main: ... done; wrote data d = [[{'action': 'walk', 'recipient': None, 'patient': None, 'goal': '3436', 'source': None}], [{'all': ['go to the biggest lab'], 'patient': [], 'goal': ['lab', 'lab', 'lab next to the office', 'lab', 'larg lab', 'lab'], 'source': [], 'action': [], 'recipient': []}], [('container', 9, 1), ('large', 24, 1), ('column', 21, 0), ('column', 24, 0), ('column', 19, 0), ('column', 23, 0), ('column', 16, 0), ('column', 0, 0), ('column', 4, 0), ('column', 9, 0), ('metallic', 21, 1), ('styrofoam', 19, 0)], [('biggest', 'should', False)]]
main: running command dialog...
say_to_user_with_referents: What should I do? {}
get_from_user requested feedback
get_from_user (raw): 'give Dr. Heidi the bottle'
get_from_user (processed): 'give dr heidi the bottle'
parse_and_ground_utterance: parsed 'give dr heidi the bottle' to bring(a_i(lambda 1:i.(container(1))),h)
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	bring(oidx_22,h) 0.145612101783
	bring(oidx_12,h) 0.145386696053
	bring(oidx_11,h) 0.142556601883
	bring(oidx_25,h) 0.12762973352
	bring(oidx_6,h) 0.121694049289
	bring(oidx_26,h) 0.111350430775
	bring(oidx_13,h) 0.110824484071
	bring(oidx_28,h) 0.0949459026247
say_to_user: I'm still learning the meanings of some words. I'm going to ask you a few questions about these nearby objects before we continue.
say_to_user_with_referents: Would you use the word 'container' when describing <p>this</p> object? {'patient': 'oidx_16'}
get_from_user requested feedback
get_from_user (raw): 'yes'
get_from_user (processed): 'yes'
parse_and_ground_utterance: parsed 'yes' to yes
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	yes 1.0
parse_and_ground_utterance: parsed 'give dr heidi the bottle' to bring(a_i(lambda 1:i.(container(1))),h)
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	bring(oidx_11,h) 0.145814602209
	bring(oidx_22,h) 0.145814602209
	bring(oidx_12,h) 0.144085575305
	bring(oidx_25,h) 0.128132420407
	bring(oidx_6,h) 0.120432487263
	bring(oidx_13,h) 0.111326278904
	bring(oidx_26,h) 0.110404131222
	bring(oidx_28,h) 0.0939899024829
say_to_user_with_referents: Would you use the word 'container' when describing <p>this</p> object? {'patient': 'oidx_19'}
get_from_user requested feedback
get_from_user (raw): 'yes'
get_from_user (processed): 'yes'
parse_and_ground_utterance: parsed 'yes' to yes
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	yes 1.0
parse_and_ground_utterance: parsed 'give dr heidi the bottle' to bring(a_i(lambda 1:i.(container(1))),h)
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	bring(oidx_11,h) 0.142316794861
	bring(oidx_22,h) 0.142316794861
	bring(oidx_12,h) 0.140689713465
	bring(oidx_25,h) 0.134836446623
	bring(oidx_6,h) 0.125834671625
	bring(oidx_13,h) 0.113578733835
	bring(oidx_26,h) 0.108063561829
	bring(oidx_28,h) 0.0923632829009
say_to_user_with_referents: Would you use the word 'container' when describing <p>this</p> object? {'patient': 'oidx_4'}
get_from_user requested feedback
get_from_user (raw): 'yes'
get_from_user (processed): 'yes'
parse_and_ground_utterance: parsed 'yes' to yes
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	yes 1.0
parse_and_ground_utterance: parsed 'give dr heidi the bottle' to bring(a_i(lambda 1:i.(container(1))),h)
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	bring(oidx_11,h) 0.142236074165
	bring(oidx_22,h) 0.142236074165
	bring(oidx_12,h) 0.140608250288
	bring(oidx_25,h) 0.134811609163
	bring(oidx_6,h) 0.125858577838
	bring(oidx_13,h) 0.113649898757
	bring(oidx_26,h) 0.108170881804
	bring(oidx_28,h) 0.092428633819
say_to_user_with_referents: Would you use the word 'container' when describing <p>this</p> object? {'patient': 'oidx_23'}
get_from_user requested feedback
get_from_user (raw): 'yes'
get_from_user (processed): 'yes'
parse_and_ground_utterance: parsed 'yes' to yes
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	yes 1.0
parse_and_ground_utterance: parsed 'give dr heidi the bottle' to bring(a_i(lambda 1:i.(container(1))),h)
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	bring(oidx_11,h) 0.14217743144
	bring(oidx_22,h) 0.14217743144
	bring(oidx_12,h) 0.140547729657
	bring(oidx_25,h) 0.134796942904
	bring(oidx_6,h) 0.125880413607
	bring(oidx_13,h) 0.113704480743
	bring(oidx_26,h) 0.108253409261
	bring(oidx_28,h) 0.0924621609471
say_to_user_with_referents: Would you use the word 'empty' when describing <p>this</p> object? {'patient': 'oidx_19'}
get_from_user requested feedback
get_from_user (raw): 'no'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
parse_and_ground_utterance: parsed 'give dr heidi the bottle' to bring(a_i(lambda 1:i.(container(1))),h)
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	bring(oidx_11,h) 0.14217743144
	bring(oidx_22,h) 0.14217743144
	bring(oidx_12,h) 0.140547729657
	bring(oidx_25,h) 0.134796942904
	bring(oidx_6,h) 0.125880413607
	bring(oidx_13,h) 0.113704480743
	bring(oidx_26,h) 0.108253409261
	bring(oidx_28,h) 0.0924621609471
say_to_user: Thanks. Now, back to business.
say_to_user_with_referents: You want me to deliver something for someone? {'action': 'bring'}
get_from_user requested feedback
get_from_user (raw): 'yes'
get_from_user (processed): 'yes'
parse_and_ground_utterance: parsed 'yes' to yes
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	yes 1.0
say_to_user_with_referents: What should I deliver to <r>this person</r>? {'action': 'bring', 'recipient': 'h'}
get_from_user requested feedback
get_from_user (raw): 'medicine bottle'
get_from_user (processed): 'medicine bottle'
say_to_user: I haven't heard the word 'medicine' before. Does it refer to properties of things, like a color, shape, or weight?
get_from_user requested feedback
get_from_user (raw): 'no'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
parse_and_ground_utterance: parsed 'medicine bottle' to lambda 1:<i,t>.(and(1,container))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	
say_to_user_with_referents: You want me to deliver <p>this</p> to someone? {'action': 'bring', 'patient': 'oidx_26'}
get_from_user requested feedback
get_from_user (raw): 'no'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
say_to_user_with_referents: What should I find to deliver? {'action': 'bring'}
get_from_user requested feedback
get_from_user (raw): 'medicine bottle'
get_from_user (processed): 'medicine bottle'
parse_and_ground_utterance: parsed 'medicine bottle' to lambda 1:<i,t>.(and(1,container))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	
say_to_user_with_referents: What should I deliver to <r>this person</r>? {'action': 'bring', 'recipient': 'h'}
get_from_user requested feedback
get_from_user (raw): 'medicine bottle'
get_from_user (processed): 'medicine bottle'
parse_and_ground_utterance: parsed 'medicine bottle' to lambda 1:<i,t>.(and(1,container))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	
say_to_user_with_referents: What should I find to deliver? {'action': 'bring'}
get_from_user requested feedback
get_from_user (raw): 'the bottle'
get_from_user (processed): 'the bottle'
parse_and_ground_utterance: parsed 'the bottle' to a_i(lambda 1:i.(container(1)))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	oidx_11 0.14217743144
	oidx_22 0.14217743144
	oidx_12 0.140547729657
	oidx_25 0.134796942904
	oidx_6 0.125880413607
	oidx_13 0.113704480743
	oidx_26 0.108253409261
	oidx_28 0.0924621609471
say_to_user_with_referents: You want me to deliver something to <r>this person</r>? {'action': 'bring', 'recipient': 'w'}
get_from_user requested feedback
get_from_user (raw): 'no'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
say_to_user_with_referents: What should I find to deliver? {'action': 'bring'}
get_from_user requested feedback
get_from_user (raw): 'bottle'
get_from_user (processed): 'bottle'
parse_and_ground_utterance: parsed 'bottle' to lambda 1:<i,t>.(a_i(lambda 2:i.(1(2))))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	oidx_11 0.0101528661538
	oidx_12 0.0101528661538
	oidx_13 0.0101528661538
	oidx_22 0.0101528661538
	oidx_26 0.0101528661538
	oidx_28 0.0101528661538
	oidx_11 0.0101528661538
	oidx_22 0.0101528661538
	oidx_12 0.0100364894272
	oidx_22 0.0100259553269
	oidx_22 0.0100259553269
	oidx_6 0.00993249386523
	oidx_25 0.00993249386523
	oidx_11 0.00985023264348
	oidx_11 0.00985023264348
	oidx_25 0.00962582672503
	oidx_12 0.00937187644969
	oidx_12 0.00937187644969
	oidx_6 0.00898909888719
	oidx_25 0.00854207488904
	oidx_25 0.00854207488904
	oidx_13 0.00815158003697
	oidx_13 0.00815158003697
	oidx_13 0.00811961759602
	oidx_6 0.00777666343698
	oidx_6 0.00777666343698
	oidx_26 0.0077708475562
	oidx_26 0.0077708475562
	oidx_22 0.00773345975122
	oidx_22 0.00773345975122
	oidx_26 0.00773035751028
	oidx_12 0.00769025606546
	oidx_12 0.00769025606546
	oidx_28 0.00762441198668
	oidx_28 0.00762441198668
	oidx_25 0.00743103395089
	oidx_25 0.00743103395089
	oidx_6 0.00735106559023
	oidx_6 0.00735106559023
	oidx_28 0.00734462657937
	oidx_28 0.00734462657937
	oidx_28 0.00660270715881
	oidx_26 0.00604851600654
	oidx_26 0.00604851600654
	oidx_6 0.00507643307692
	oidx_11 0.00507643307692
	oidx_12 0.00507643307692
	oidx_13 0.00507643307692
	oidx_22 0.00507643307692
	oidx_25 0.00507643307692
	oidx_26 0.00507643307692
	oidx_28 0.00507643307692
	oidx_6 0.00507643307692
	oidx_11 0.00507643307692
	oidx_12 0.00507643307692
	oidx_13 0.00507643307692
	oidx_22 0.00507643307692
	oidx_25 0.00507643307692
	oidx_26 0.00507643307692
	oidx_28 0.00507643307692
	oidx_6 0.00507643307692
	oidx_11 0.00507643307692
	oidx_12 0.00507643307692
	oidx_13 0.00507643307692
	oidx_22 0.00507643307692
	oidx_25 0.00507643307692
	oidx_26 0.00507643307692
	oidx_28 0.00507643307692
	oidx_6 0.00507643307692
	oidx_11 0.00507643307692
	oidx_12 0.00507643307692
	oidx_13 0.00507643307692
	oidx_22 0.00507643307692
	oidx_25 0.00507643307692
	oidx_26 0.00507643307692
	oidx_28 0.00507643307692
	oidx_6 0.00507643307692
	oidx_11 0.00507643307692
	oidx_12 0.00507643307692
	oidx_13 0.00507643307692
	oidx_22 0.00507643307692
	oidx_25 0.00507643307692
	oidx_26 0.00507643307692
	oidx_28 0.00507643307692
	oidx_6 0.00507643307692
	oidx_11 0.00507643307692
	oidx_12 0.00507643307692
	oidx_13 0.00507643307692
	oidx_22 0.00507643307692
	oidx_25 0.00507643307692
	oidx_26 0.00507643307692
	oidx_28 0.00507643307692
	oidx_6 0.00507643307692
	oidx_11 0.00507643307692
	oidx_12 0.00507643307692
	oidx_13 0.00507643307692
	oidx_22 0.00507643307692
	oidx_25 0.00507643307692
	oidx_26 0.00507643307692
	oidx_28 0.00507643307692
	oidx_6 0.00507643307692
	oidx_11 0.00507643307692
	oidx_12 0.00507643307692
	oidx_13 0.00507643307692
	oidx_22 0.00507643307692
	oidx_25 0.00507643307692
	oidx_26 0.00507643307692
	oidx_28 0.00507643307692
	oidx_6 0.00507643307692
	oidx_11 0.00507643307692
	oidx_12 0.00507643307692
	oidx_13 0.00507643307692
	oidx_22 0.00507643307692
	oidx_25 0.00507643307692
	oidx_26 0.00507643307692
	oidx_28 0.00507643307692
	oidx_6 0.00507643307692
	oidx_11 0.00507643307692
	oidx_12 0.00507643307692
	oidx_13 0.00507643307692
	oidx_22 0.00507643307692
	oidx_25 0.00507643307692
	oidx_26 0.00507643307692
	oidx_28 0.00507643307692
	oidx_6 0.00507643307692
	oidx_11 0.00507643307692
	oidx_12 0.00507643307692
	oidx_13 0.00507643307692
	oidx_22 0.00507643307692
	oidx_25 0.00507643307692
	oidx_26 0.00507643307692
	oidx_28 0.00507643307692
	oidx_6 0.00507643307692
	oidx_11 0.00507643307692
	oidx_12 0.00507643307692
	oidx_13 0.00507643307692
	oidx_22 0.00507643307692
	oidx_25 0.00507643307692
	oidx_26 0.00507643307692
	oidx_28 0.00507643307692
	oidx_6 0.00507643307692
	oidx_11 0.00507643307692
	oidx_12 0.00507643307692
	oidx_13 0.00507643307692
	oidx_22 0.00507643307692
	oidx_25 0.00507643307692
	oidx_26 0.00507643307692
	oidx_28 0.00507643307692
	oidx_6 0.00507643307692
	oidx_11 0.00507643307692
	oidx_12 0.00507643307692
	oidx_13 0.00507643307692
	oidx_22 0.00507643307692
	oidx_25 0.00507643307692
	oidx_26 0.00507643307692
	oidx_28 0.00507643307692
	oidx_11 0.00440677594762
	oidx_11 0.00440677594762
	oidx_13 0.00406114646153
	oidx_13 0.00406114646153
	oidx_11 0.00339853835465
	oidx_6 0.0031919186224
	oidx_26 0.00298886129932
	oidx_22 0.00289267625155
	oidx_28 0.00268856385955
	oidx_12 0.00233694041997
	oidx_13 0.00198782432065
	oidx_25 0.00169570676815
	oidx_13 0.00152116113106
	oidx_26 0.0014131692079
	oidx_6 0.00108250071187
	oidx_11 0.000898665855508
	oidx_22 0.000891471174483
	oidx_26 0.000693366469042
	oidx_26 0.000660298532737
	oidx_6 0.000651704246361
	oidx_13 0.000651704246361
	oidx_25 0.000651704246361
	oidx_28 0.000651704246361
	oidx_12 0.000601389284374
	oidx_11 0.000560943267623
	oidx_25 0.000558873366266
	oidx_28 0.000558873366266
	oidx_13 0.000549374651404
	oidx_13 0.000548523859483
	oidx_11 0.000445735587242
	oidx_12 0.000439499721123
	oidx_12 0.000310988693
	oidx_13 0.000212120660384
	oidx_26 0.000212120660384
	oidx_25 0.000176879201286
	oidx_26 0.000120439827423
	oidx_11 0.000120369031721
	oidx_12 0.000119558917671
	oidx_28 0.000106872275304
	oidx_26 0.000106413201956
	oidx_11 0.000106060330192
	oidx_6 8.29198945138e-05
say_to_user_with_referents: You want me to deliver <p>this</p> to someone? {'action': 'bring', 'patient': 'oidx_6'}
get_from_user requested feedback
get_from_user (raw): 'yes'
get_from_user (processed): 'yes'
parse_and_ground_utterance: parsed 'yes' to yes
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	yes 1.0
say_to_user_with_referents: You want me to deliver <p>this</p> to <r>this person</r>? {'action': 'bring', 'recipient': 'h', 'patient': 'oidx_6'}
get_from_user requested feedback
get_from_user (raw): 'yes'
get_from_user (processed): 'yes'
parse_and_ground_utterance: parsed 'yes' to yes
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	yes 1.0
perform_action: {'action': 'bring', 'recipient': 'h', 'patient': 'oidx_6', 'goal': None, 'source': None}
main: ... done; got action {'action': 'bring', 'recipient': 'h', 'patient': 'oidx_6', 'goal': None, 'source': None}
main: writing new information from dialog(s) to file...
main: ... done; wrote data d = [[{'action': 'walk', 'recipient': None, 'patient': None, 'goal': '3436', 'source': None}, {'action': 'bring', 'recipient': 'h', 'patient': 'oidx_6', 'goal': None, 'source': None}], [{'all': ['go to the biggest lab'], 'patient': [], 'goal': ['lab', 'lab', 'lab next to the office', 'lab', 'larg lab', 'lab'], 'source': [], 'action': [], 'recipient': []}, {'all': ['give dr heidi the bottle'], 'patient': ['medicine bottle', 'medicine bottle', 'medicine bottle', 'the bottle', 'bottle'], 'goal': [], 'source': [], 'action': [], 'recipient': []}], [('container', 9, 1), ('large', 24, 1), ('column', 21, 0), ('column', 24, 0), ('column', 19, 0), ('column', 23, 0), ('column', 16, 0), ('column', 0, 0), ('column', 4, 0), ('column', 9, 0), ('metallic', 21, 1), ('styrofoam', 19, 0), ('container', 16, 1), ('container', 19, 1), ('container', 4, 1), ('container', 23, 1), ('empty', 19, 0)], [('biggest', 'should', False)]]
main: running command dialog...
say_to_user_with_referents: What should I do? {}
get_from_user requested feedback
get_from_user (raw): 'bring the tin can from the pod to Dr. Nancy 's office'
get_from_user (processed): 'bring the tin can from the pod to dr nancy 's office'
parse_and_ground_utterance: could not generate a parse for the utterance
say_to_user_with_referents: You want me to deliver something for someone? {'action': 'bring'}
get_from_user requested feedback
get_from_user (raw): 'yes'
get_from_user (processed): 'yes'
parse_and_ground_utterance: parsed 'yes' to yes
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	yes 1.0
say_to_user_with_referents: What should I find to deliver? {'action': 'bring'}
get_from_user requested feedback
get_from_user (raw): 'tin can'
get_from_user (processed): 'tin can'
parse_and_ground_utterance: parsed 'tin can' to and(container,can)
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	
say_to_user_with_referents: You want me to deliver something to <r>this person</r>? {'action': 'bring', 'recipient': 'w'}
get_from_user requested feedback
get_from_user (raw): 'no'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
say_to_user_with_referents: What should I find to deliver? {'action': 'bring'}
get_from_user requested feedback
get_from_user (raw): 'empty tin can'
get_from_user (processed): 'empty tin can'
parse_and_ground_utterance: parsed 'empty tin can' to and(container,empty,can)
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	
say_to_user_with_referents: You want me to deliver something to <r>this person</r>? {'action': 'bring', 'recipient': 'b'}
get_from_user requested feedback
get_from_user (raw): 'no'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
say_to_user_with_referents: What should I find to deliver? {'action': 'bring'}
get_from_user requested feedback
get_from_user (raw): 'tin can'
get_from_user (processed): 'tin can'
parse_and_ground_utterance: parsed 'tin can' to and(container,can)
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	
say_to_user_with_referents: You want me to deliver something to <r>this person</r>? {'action': 'bring', 'recipient': 'm'}
get_from_user requested feedback
get_from_user (raw): 'no'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
say_to_user_with_referents: What should I find to deliver? {'action': 'bring'}
get_from_user requested feedback
get_from_user (raw): 'the empty can'
get_from_user (processed): 'the empty can'
parse_and_ground_utterance: parsed 'the empty can' to a_i(lambda 1:i.(and(empty(1),can(1))))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	oidx_26 0.330149938631
	oidx_11 0.318915951719
	oidx_13 0.182405802644
	oidx_25 0.158536510149
	oidx_28 0.00999179685813
say_to_user: I'm still learning the meanings of some words. I'm going to ask you a few questions about these nearby objects before we continue.
say_to_user_with_referents: Would you use the word 'empty' when describing <p>this</p> object? {'patient': 'oidx_21'}
get_from_user requested feedback
get_from_user (raw): 'no'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
parse_and_ground_utterance: parsed 'the empty can' to a_i(lambda 1:i.(and(empty(1),can(1))))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	oidx_11 0.366889680555
	oidx_26 0.317285221473
	oidx_13 0.249646506536
	oidx_6 0.0620251233542
	oidx_28 0.00415346808175
say_to_user_with_referents: Would you use the word 'empty' when describing <p>this</p> object? {'patient': 'oidx_4'}
get_from_user requested feedback
get_from_user (raw): 'no'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
parse_and_ground_utterance: parsed 'the empty can' to a_i(lambda 1:i.(and(empty(1),can(1))))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	oidx_26 0.343944964706
	oidx_11 0.312871033449
	oidx_13 0.270925838148
	oidx_6 0.0677231325023
	oidx_28 0.00453503119435
say_to_user_with_referents: Among these nearby objects, could you show me one you could not use the word 'can' when describing, or shake your head if you could use 'can' when describing all of them? {}
get_oidx_from_user requested feedback
get_oidx_from_user: 23
parse_and_ground_utterance: parsed 'the empty can' to a_i(lambda 1:i.(and(empty(1),can(1))))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	oidx_26 0.370697573733
	oidx_11 0.335500026328
	oidx_13 0.232272511862
	oidx_6 0.0553164912445
	oidx_28 0.00621339683245
say_to_user_with_referents: Among these nearby objects, could you show me one you could not use the word 'can' when describing, or shake your head if you could use 'can' when describing all of them? {}
get_oidx_from_user requested feedback
get_oidx_from_user: 16
parse_and_ground_utterance: parsed 'the empty can' to a_i(lambda 1:i.(and(empty(1),can(1))))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	oidx_26 0.451577146437
	oidx_11 0.33620087231
	oidx_13 0.162106315815
	oidx_6 0.0501156654377
say_to_user_with_referents: Among these nearby objects, could you show me one you could not use the word 'can' when describing, or shake your head if you could use 'can' when describing all of them? {}
get_oidx_from_user requested feedback
get_oidx_from_user: 24
parse_and_ground_utterance: parsed 'the empty can' to a_i(lambda 1:i.(and(empty(1),can(1))))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	oidx_26 0.4200162561
	oidx_11 0.29741194852
	oidx_13 0.231311947659
	oidx_6 0.0512598477211
say_to_user: Thanks. Now, back to business.
say_to_user_with_referents: You want me to deliver something to <r>this person</r>? {'action': 'bring', 'recipient': 'p'}
get_from_user requested feedback
get_from_user (raw): 'no'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
say_to_user_with_referents: What should I find to deliver? {'action': 'bring'}
get_from_user requested feedback
get_from_user (raw): 'the empty can'
get_from_user (processed): 'the empty can'
parse_and_ground_utterance: parsed 'the empty can' to a_i(lambda 1:i.(and(empty(1),can(1))))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	oidx_26 0.4200162561
	oidx_11 0.29741194852
	oidx_13 0.231311947659
	oidx_6 0.0512598477211
say_to_user_with_referents: You want me to deliver <p>this</p> to someone? {'action': 'bring', 'patient': 'oidx_26'}
get_from_user requested feedback
get_from_user (raw): 'no'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
say_to_user_with_referents: You want me to deliver <p>this</p> to someone? {'action': 'bring', 'patient': 'oidx_11'}
get_from_user requested feedback
get_from_user (raw): 'yes'
get_from_user (processed): 'yes'
parse_and_ground_utterance: parsed 'yes' to yes
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	yes 1.0
say_to_user_with_referents: To whom should I deliver <p>this</p>? {'action': 'bring', 'patient': 'oidx_11'}
get_from_user requested feedback
get_from_user (raw): 'Dr. Nancy 's office'
get_from_user (processed): 'dr nancy 's office'
parse_and_ground_utterance: parsed 'dr nancy 's office' to a_l(lambda 1:l.(and(possesses(n,1),office(1))))
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	3404 1.0
say_to_user_with_referents: You want me to deliver <p>this</p> to <r>this person</r>? {'action': 'bring', 'recipient': 'r', 'patient': 'oidx_11'}
get_from_user requested feedback
get_from_user (raw): 'no'
get_from_user (processed): 'no'
parse_and_ground_utterance: parsed 'no' to no
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	no 1.0
say_to_user_with_referents: To whom should I deliver <p>this</p>? {'action': 'bring', 'patient': 'oidx_11'}
get_from_user requested feedback
get_from_user (raw): 'Dr. Nancy'
get_from_user (processed): 'dr nancy'
parse_and_ground_utterance: parsed 'dr nancy' to n
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	n 1.0
say_to_user_with_referents: You want me to deliver <p>this</p> to <r>this person</r>? {'action': 'bring', 'recipient': 'n', 'patient': 'oidx_11'}
get_from_user requested feedback
get_from_user (raw): 'yes'
get_from_user (processed): 'yes'
parse_and_ground_utterance: parsed 'yes' to yes
parse_and_ground_utterance: resulting groundings with normalized confidences: 
	yes 1.0
perform_action: {'action': 'bring', 'recipient': 'n', 'patient': 'oidx_11', 'goal': None, 'source': None}
main: ... done; got action {'action': 'bring', 'recipient': 'n', 'patient': 'oidx_11', 'goal': None, 'source': None}
main: writing new information from dialog(s) to file...
main: ... done; wrote data d = [[{'action': 'walk', 'recipient': None, 'patient': None, 'goal': '3436', 'source': None}, {'action': 'bring', 'recipient': 'h', 'patient': 'oidx_6', 'goal': None, 'source': None}, {'action': 'bring', 'recipient': 'n', 'patient': 'oidx_11', 'goal': None, 'source': None}], [{'all': ['go to the biggest lab'], 'patient': [], 'goal': ['lab', 'lab', 'lab next to the office', 'lab', 'larg lab', 'lab'], 'source': [], 'action': [], 'recipient': []}, {'all': ['give dr heidi the bottle'], 'patient': ['medicine bottle', 'medicine bottle', 'medicine bottle', 'the bottle', 'bottle'], 'goal': [], 'source': [], 'action': [], 'recipient': []}, {'all': ["bring the tin can from the pod to dr nancy 's office"], 'patient': ['tin can', 'empty tin can', 'tin can', 'the empty can', 'the empty can'], 'goal': [], 'source': [], 'action': [], 'recipient': ["dr nancy 's office", 'dr nancy']}], [('container', 9, 1), ('large', 24, 1), ('column', 21, 0), ('column', 24, 0), ('column', 19, 0), ('column', 23, 0), ('column', 16, 0), ('column', 0, 0), ('column', 4, 0), ('column', 9, 0), ('metallic', 21, 1), ('styrofoam', 19, 0), ('container', 16, 1), ('container', 19, 1), ('container', 4, 1), ('container', 23, 1), ('empty', 19, 0), ('empty', 21, 0), ('empty', 4, 0), ('can', 23, 0), ('can', 16, 0), ('can', 24, 0)], [('biggest', 'should', False)]]
