No handlers could be found for logger "gensim.models.doc2vec"
main: loading grounder from file...
main: ... done
main: instantiating IO...
main: ... done
main: instantiating Agent...
main: ... done
main: running command dialog...
say_to_user_with_referents: What should I do? {}
get_from_user requested feedback
get_from_user (raw): 'Go to the pod'
get_from_user (processed): 'go to the pod'
say_to_user: I'm still learning the meanings of some words. I'm going to ask you a few questions about these nearby objects before we continue.
say_to_user_with_referents: Among these nearby objects, could you show me one you would use the word 'block' when describing, or shake your head if there are none? {}
get_oidx_from_user requested feedback
get_oidx_from_user: None
say_to_user_with_referents: Would you use the word 'column' when describing <p>this</p> object? {'patient': 'oidx_23'}
get_from_user requested feedback
get_from_user (raw): 'No'
get_from_user (processed): 'no'
say_to_user_with_referents: Among these nearby objects, could you show me one you would use the word 'spices' when describing, or shake your head if there are none? {}
get_oidx_from_user requested feedback
get_oidx_from_user: None
say_to_user_with_referents: Among these nearby objects, could you show me one you would use the word 'beans' when describing, or shake your head if there are none? {}
get_oidx_from_user requested feedback
get_oidx_from_user: None
say_to_user_with_referents: Would you use the word 'empty' when describing <p>this</p> object? {'patient': 'oidx_4'}
get_from_user requested feedback
get_from_user (raw): 'I don't know'
get_from_user (processed): 'i don' 's know'
say_to_user: I am expecting a simple 'yes' or 'no' response.
say_to_user_with_referents: Would you use the word 'empty' when describing <p>this</p> object? {'patient': 'oidx_4'}
get_from_user requested feedback
get_from_user (raw): 'No'
get_from_user (processed): 'no'
say_to_user: Thanks. Now, back to business.
say_to_user_with_referents: You want me to go somewhere? (not manipulate any objects) {'action': 'walk'}
get_from_user requested feedback
get_from_user (raw): 'Go to the pod to the right of Mallory's office'
get_from_user (processed): 'go to the pod to the right of mallory 's office'
say_to_user: I am expecting a simple 'yes' or 'no' response.
say_to_user_with_referents: You want me to go somewhere? (not manipulate any objects) {'action': 'walk'}
get_from_user requested feedback
get_from_user (raw): 'Yes'
get_from_user (processed): 'yes'
say_to_user_with_referents: Where should I go? {'action': 'walk'}
get_from_user requested feedback
get_from_user (raw): 'To the pod to the right of Mallory's office'
get_from_user (processed): 'to the pod to the right of mallory 's office'
say_to_user: Sorry, I didn't understand that.
say_to_user_with_referents: Where should I go? {'action': 'walk'}
get_from_user requested feedback
get_from_user (raw): 'Mallory's office'
get_from_user (processed): 'mallory 's office'
say_to_user_with_referents: You want me to go to <g>here</g> (not manipulate any objects)? {'action': 'walk', 'goal': '3502'}
get_from_user requested feedback
get_from_user (raw): 'Yes'
get_from_user (processed): 'yes'
perform_action: {'action': 'walk', 'recipient': None, 'patient': None, 'goal': '3502', 'source': None}
main: ... done; got action {'action': 'walk', 'recipient': None, 'patient': None, 'goal': '3502', 'source': None}
main: writing new information from dialog(s) to file...
main: ... done; wrote data d = [[{'action': 'walk', 'recipient': None, 'patient': None, 'goal': '3502', 'source': None}], [{'all': ['go to the pod'], 'patient': [], 'goal': ["to the pod to the right of mallory 's office", "mallory 's office"], 'source': [], 'action': [], 'recipient': []}], [('block', 21, 0), ('block', 24, 0), ('block', 19, 0), ('block', 23, 0), ('block', 16, 0), ('block', 0, 0), ('block', 4, 0), ('block', 9, 0), ('column', 23, 0), ('spice', 21, 0), ('spice', 24, 0), ('spice', 19, 0), ('spice', 23, 0), ('spice', 16, 0), ('spice', 0, 0), ('spice', 4, 0), ('spice', 9, 0), ('bean', 21, 0), ('bean', 24, 0), ('bean', 19, 0), ('bean', 23, 0), ('bean', 